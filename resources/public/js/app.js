var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7484 = x == null ? null : x;
  if(p[goog.typeOf(x__7484)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7485__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7485 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7485__delegate.call(this, array, i, idxs)
    };
    G__7485.cljs$lang$maxFixedArity = 2;
    G__7485.cljs$lang$applyTo = function(arglist__7486) {
      var array = cljs.core.first(arglist__7486);
      var i = cljs.core.first(cljs.core.next(arglist__7486));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7486));
      return G__7485__delegate(array, i, idxs)
    };
    G__7485.cljs$lang$arity$variadic = G__7485__delegate;
    return G__7485
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7571 = this$;
      if(and__3822__auto____7571) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7571
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____7572 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7573 = cljs.core._invoke[goog.typeOf(x__2363__auto____7572)];
        if(or__3824__auto____7573) {
          return or__3824__auto____7573
        }else {
          var or__3824__auto____7574 = cljs.core._invoke["_"];
          if(or__3824__auto____7574) {
            return or__3824__auto____7574
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7575 = this$;
      if(and__3822__auto____7575) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7575
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____7576 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7577 = cljs.core._invoke[goog.typeOf(x__2363__auto____7576)];
        if(or__3824__auto____7577) {
          return or__3824__auto____7577
        }else {
          var or__3824__auto____7578 = cljs.core._invoke["_"];
          if(or__3824__auto____7578) {
            return or__3824__auto____7578
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7579 = this$;
      if(and__3822__auto____7579) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7579
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____7580 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7581 = cljs.core._invoke[goog.typeOf(x__2363__auto____7580)];
        if(or__3824__auto____7581) {
          return or__3824__auto____7581
        }else {
          var or__3824__auto____7582 = cljs.core._invoke["_"];
          if(or__3824__auto____7582) {
            return or__3824__auto____7582
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7583 = this$;
      if(and__3822__auto____7583) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7583
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____7584 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7585 = cljs.core._invoke[goog.typeOf(x__2363__auto____7584)];
        if(or__3824__auto____7585) {
          return or__3824__auto____7585
        }else {
          var or__3824__auto____7586 = cljs.core._invoke["_"];
          if(or__3824__auto____7586) {
            return or__3824__auto____7586
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7587 = this$;
      if(and__3822__auto____7587) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7587
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____7588 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7589 = cljs.core._invoke[goog.typeOf(x__2363__auto____7588)];
        if(or__3824__auto____7589) {
          return or__3824__auto____7589
        }else {
          var or__3824__auto____7590 = cljs.core._invoke["_"];
          if(or__3824__auto____7590) {
            return or__3824__auto____7590
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7591 = this$;
      if(and__3822__auto____7591) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7591
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____7592 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7593 = cljs.core._invoke[goog.typeOf(x__2363__auto____7592)];
        if(or__3824__auto____7593) {
          return or__3824__auto____7593
        }else {
          var or__3824__auto____7594 = cljs.core._invoke["_"];
          if(or__3824__auto____7594) {
            return or__3824__auto____7594
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7595 = this$;
      if(and__3822__auto____7595) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7595
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____7596 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7597 = cljs.core._invoke[goog.typeOf(x__2363__auto____7596)];
        if(or__3824__auto____7597) {
          return or__3824__auto____7597
        }else {
          var or__3824__auto____7598 = cljs.core._invoke["_"];
          if(or__3824__auto____7598) {
            return or__3824__auto____7598
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7599 = this$;
      if(and__3822__auto____7599) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7599
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____7600 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7601 = cljs.core._invoke[goog.typeOf(x__2363__auto____7600)];
        if(or__3824__auto____7601) {
          return or__3824__auto____7601
        }else {
          var or__3824__auto____7602 = cljs.core._invoke["_"];
          if(or__3824__auto____7602) {
            return or__3824__auto____7602
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7603 = this$;
      if(and__3822__auto____7603) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7603
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____7604 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7605 = cljs.core._invoke[goog.typeOf(x__2363__auto____7604)];
        if(or__3824__auto____7605) {
          return or__3824__auto____7605
        }else {
          var or__3824__auto____7606 = cljs.core._invoke["_"];
          if(or__3824__auto____7606) {
            return or__3824__auto____7606
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7607 = this$;
      if(and__3822__auto____7607) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7607
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____7608 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7609 = cljs.core._invoke[goog.typeOf(x__2363__auto____7608)];
        if(or__3824__auto____7609) {
          return or__3824__auto____7609
        }else {
          var or__3824__auto____7610 = cljs.core._invoke["_"];
          if(or__3824__auto____7610) {
            return or__3824__auto____7610
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7611 = this$;
      if(and__3822__auto____7611) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7611
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____7612 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7613 = cljs.core._invoke[goog.typeOf(x__2363__auto____7612)];
        if(or__3824__auto____7613) {
          return or__3824__auto____7613
        }else {
          var or__3824__auto____7614 = cljs.core._invoke["_"];
          if(or__3824__auto____7614) {
            return or__3824__auto____7614
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7615 = this$;
      if(and__3822__auto____7615) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7615
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____7616 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7617 = cljs.core._invoke[goog.typeOf(x__2363__auto____7616)];
        if(or__3824__auto____7617) {
          return or__3824__auto____7617
        }else {
          var or__3824__auto____7618 = cljs.core._invoke["_"];
          if(or__3824__auto____7618) {
            return or__3824__auto____7618
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7619 = this$;
      if(and__3822__auto____7619) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7619
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____7620 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7621 = cljs.core._invoke[goog.typeOf(x__2363__auto____7620)];
        if(or__3824__auto____7621) {
          return or__3824__auto____7621
        }else {
          var or__3824__auto____7622 = cljs.core._invoke["_"];
          if(or__3824__auto____7622) {
            return or__3824__auto____7622
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7623 = this$;
      if(and__3822__auto____7623) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7623
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____7624 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7625 = cljs.core._invoke[goog.typeOf(x__2363__auto____7624)];
        if(or__3824__auto____7625) {
          return or__3824__auto____7625
        }else {
          var or__3824__auto____7626 = cljs.core._invoke["_"];
          if(or__3824__auto____7626) {
            return or__3824__auto____7626
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7627 = this$;
      if(and__3822__auto____7627) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7627
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7628 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7629 = cljs.core._invoke[goog.typeOf(x__2363__auto____7628)];
        if(or__3824__auto____7629) {
          return or__3824__auto____7629
        }else {
          var or__3824__auto____7630 = cljs.core._invoke["_"];
          if(or__3824__auto____7630) {
            return or__3824__auto____7630
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7631 = this$;
      if(and__3822__auto____7631) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7631
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7632 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7633 = cljs.core._invoke[goog.typeOf(x__2363__auto____7632)];
        if(or__3824__auto____7633) {
          return or__3824__auto____7633
        }else {
          var or__3824__auto____7634 = cljs.core._invoke["_"];
          if(or__3824__auto____7634) {
            return or__3824__auto____7634
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7635 = this$;
      if(and__3822__auto____7635) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7635
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7636 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7637 = cljs.core._invoke[goog.typeOf(x__2363__auto____7636)];
        if(or__3824__auto____7637) {
          return or__3824__auto____7637
        }else {
          var or__3824__auto____7638 = cljs.core._invoke["_"];
          if(or__3824__auto____7638) {
            return or__3824__auto____7638
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7639 = this$;
      if(and__3822__auto____7639) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7639
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7640 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7641 = cljs.core._invoke[goog.typeOf(x__2363__auto____7640)];
        if(or__3824__auto____7641) {
          return or__3824__auto____7641
        }else {
          var or__3824__auto____7642 = cljs.core._invoke["_"];
          if(or__3824__auto____7642) {
            return or__3824__auto____7642
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7643 = this$;
      if(and__3822__auto____7643) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7643
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7644 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7645 = cljs.core._invoke[goog.typeOf(x__2363__auto____7644)];
        if(or__3824__auto____7645) {
          return or__3824__auto____7645
        }else {
          var or__3824__auto____7646 = cljs.core._invoke["_"];
          if(or__3824__auto____7646) {
            return or__3824__auto____7646
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7647 = this$;
      if(and__3822__auto____7647) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7647
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7648 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7649 = cljs.core._invoke[goog.typeOf(x__2363__auto____7648)];
        if(or__3824__auto____7649) {
          return or__3824__auto____7649
        }else {
          var or__3824__auto____7650 = cljs.core._invoke["_"];
          if(or__3824__auto____7650) {
            return or__3824__auto____7650
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7651 = this$;
      if(and__3822__auto____7651) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7651
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7652 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7653 = cljs.core._invoke[goog.typeOf(x__2363__auto____7652)];
        if(or__3824__auto____7653) {
          return or__3824__auto____7653
        }else {
          var or__3824__auto____7654 = cljs.core._invoke["_"];
          if(or__3824__auto____7654) {
            return or__3824__auto____7654
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7659 = coll;
    if(and__3822__auto____7659) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7659
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7660 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7661 = cljs.core._count[goog.typeOf(x__2363__auto____7660)];
      if(or__3824__auto____7661) {
        return or__3824__auto____7661
      }else {
        var or__3824__auto____7662 = cljs.core._count["_"];
        if(or__3824__auto____7662) {
          return or__3824__auto____7662
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7667 = coll;
    if(and__3822__auto____7667) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7667
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7668 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7669 = cljs.core._empty[goog.typeOf(x__2363__auto____7668)];
      if(or__3824__auto____7669) {
        return or__3824__auto____7669
      }else {
        var or__3824__auto____7670 = cljs.core._empty["_"];
        if(or__3824__auto____7670) {
          return or__3824__auto____7670
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7675 = coll;
    if(and__3822__auto____7675) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7675
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7676 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7677 = cljs.core._conj[goog.typeOf(x__2363__auto____7676)];
      if(or__3824__auto____7677) {
        return or__3824__auto____7677
      }else {
        var or__3824__auto____7678 = cljs.core._conj["_"];
        if(or__3824__auto____7678) {
          return or__3824__auto____7678
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7687 = coll;
      if(and__3822__auto____7687) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7687
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7688 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7689 = cljs.core._nth[goog.typeOf(x__2363__auto____7688)];
        if(or__3824__auto____7689) {
          return or__3824__auto____7689
        }else {
          var or__3824__auto____7690 = cljs.core._nth["_"];
          if(or__3824__auto____7690) {
            return or__3824__auto____7690
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7691 = coll;
      if(and__3822__auto____7691) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7691
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7692 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7693 = cljs.core._nth[goog.typeOf(x__2363__auto____7692)];
        if(or__3824__auto____7693) {
          return or__3824__auto____7693
        }else {
          var or__3824__auto____7694 = cljs.core._nth["_"];
          if(or__3824__auto____7694) {
            return or__3824__auto____7694
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7699 = coll;
    if(and__3822__auto____7699) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7699
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7700 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7701 = cljs.core._first[goog.typeOf(x__2363__auto____7700)];
      if(or__3824__auto____7701) {
        return or__3824__auto____7701
      }else {
        var or__3824__auto____7702 = cljs.core._first["_"];
        if(or__3824__auto____7702) {
          return or__3824__auto____7702
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7707 = coll;
    if(and__3822__auto____7707) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7707
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7708 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7709 = cljs.core._rest[goog.typeOf(x__2363__auto____7708)];
      if(or__3824__auto____7709) {
        return or__3824__auto____7709
      }else {
        var or__3824__auto____7710 = cljs.core._rest["_"];
        if(or__3824__auto____7710) {
          return or__3824__auto____7710
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7715 = coll;
    if(and__3822__auto____7715) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7715
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7716 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7717 = cljs.core._next[goog.typeOf(x__2363__auto____7716)];
      if(or__3824__auto____7717) {
        return or__3824__auto____7717
      }else {
        var or__3824__auto____7718 = cljs.core._next["_"];
        if(or__3824__auto____7718) {
          return or__3824__auto____7718
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7727 = o;
      if(and__3822__auto____7727) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7727
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7728 = o == null ? null : o;
      return function() {
        var or__3824__auto____7729 = cljs.core._lookup[goog.typeOf(x__2363__auto____7728)];
        if(or__3824__auto____7729) {
          return or__3824__auto____7729
        }else {
          var or__3824__auto____7730 = cljs.core._lookup["_"];
          if(or__3824__auto____7730) {
            return or__3824__auto____7730
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7731 = o;
      if(and__3822__auto____7731) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7731
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7732 = o == null ? null : o;
      return function() {
        var or__3824__auto____7733 = cljs.core._lookup[goog.typeOf(x__2363__auto____7732)];
        if(or__3824__auto____7733) {
          return or__3824__auto____7733
        }else {
          var or__3824__auto____7734 = cljs.core._lookup["_"];
          if(or__3824__auto____7734) {
            return or__3824__auto____7734
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7739 = coll;
    if(and__3822__auto____7739) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7739
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7740 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7741 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7740)];
      if(or__3824__auto____7741) {
        return or__3824__auto____7741
      }else {
        var or__3824__auto____7742 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7742) {
          return or__3824__auto____7742
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7747 = coll;
    if(and__3822__auto____7747) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7747
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7748 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7749 = cljs.core._assoc[goog.typeOf(x__2363__auto____7748)];
      if(or__3824__auto____7749) {
        return or__3824__auto____7749
      }else {
        var or__3824__auto____7750 = cljs.core._assoc["_"];
        if(or__3824__auto____7750) {
          return or__3824__auto____7750
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7755 = coll;
    if(and__3822__auto____7755) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7755
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7756 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7757 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7756)];
      if(or__3824__auto____7757) {
        return or__3824__auto____7757
      }else {
        var or__3824__auto____7758 = cljs.core._dissoc["_"];
        if(or__3824__auto____7758) {
          return or__3824__auto____7758
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7763 = coll;
    if(and__3822__auto____7763) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7763
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7764 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7765 = cljs.core._key[goog.typeOf(x__2363__auto____7764)];
      if(or__3824__auto____7765) {
        return or__3824__auto____7765
      }else {
        var or__3824__auto____7766 = cljs.core._key["_"];
        if(or__3824__auto____7766) {
          return or__3824__auto____7766
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7771 = coll;
    if(and__3822__auto____7771) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7771
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7772 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7773 = cljs.core._val[goog.typeOf(x__2363__auto____7772)];
      if(or__3824__auto____7773) {
        return or__3824__auto____7773
      }else {
        var or__3824__auto____7774 = cljs.core._val["_"];
        if(or__3824__auto____7774) {
          return or__3824__auto____7774
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7779 = coll;
    if(and__3822__auto____7779) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7779
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7780 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7781 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7780)];
      if(or__3824__auto____7781) {
        return or__3824__auto____7781
      }else {
        var or__3824__auto____7782 = cljs.core._disjoin["_"];
        if(or__3824__auto____7782) {
          return or__3824__auto____7782
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7787 = coll;
    if(and__3822__auto____7787) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7787
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7788 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7789 = cljs.core._peek[goog.typeOf(x__2363__auto____7788)];
      if(or__3824__auto____7789) {
        return or__3824__auto____7789
      }else {
        var or__3824__auto____7790 = cljs.core._peek["_"];
        if(or__3824__auto____7790) {
          return or__3824__auto____7790
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7795 = coll;
    if(and__3822__auto____7795) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7795
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7796 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7797 = cljs.core._pop[goog.typeOf(x__2363__auto____7796)];
      if(or__3824__auto____7797) {
        return or__3824__auto____7797
      }else {
        var or__3824__auto____7798 = cljs.core._pop["_"];
        if(or__3824__auto____7798) {
          return or__3824__auto____7798
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7803 = coll;
    if(and__3822__auto____7803) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7803
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7804 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7805 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7804)];
      if(or__3824__auto____7805) {
        return or__3824__auto____7805
      }else {
        var or__3824__auto____7806 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7806) {
          return or__3824__auto____7806
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7811 = o;
    if(and__3822__auto____7811) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7811
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7812 = o == null ? null : o;
    return function() {
      var or__3824__auto____7813 = cljs.core._deref[goog.typeOf(x__2363__auto____7812)];
      if(or__3824__auto____7813) {
        return or__3824__auto____7813
      }else {
        var or__3824__auto____7814 = cljs.core._deref["_"];
        if(or__3824__auto____7814) {
          return or__3824__auto____7814
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7819 = o;
    if(and__3822__auto____7819) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7819
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7820 = o == null ? null : o;
    return function() {
      var or__3824__auto____7821 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7820)];
      if(or__3824__auto____7821) {
        return or__3824__auto____7821
      }else {
        var or__3824__auto____7822 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7822) {
          return or__3824__auto____7822
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7827 = o;
    if(and__3822__auto____7827) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7827
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7828 = o == null ? null : o;
    return function() {
      var or__3824__auto____7829 = cljs.core._meta[goog.typeOf(x__2363__auto____7828)];
      if(or__3824__auto____7829) {
        return or__3824__auto____7829
      }else {
        var or__3824__auto____7830 = cljs.core._meta["_"];
        if(or__3824__auto____7830) {
          return or__3824__auto____7830
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7835 = o;
    if(and__3822__auto____7835) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7835
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7836 = o == null ? null : o;
    return function() {
      var or__3824__auto____7837 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7836)];
      if(or__3824__auto____7837) {
        return or__3824__auto____7837
      }else {
        var or__3824__auto____7838 = cljs.core._with_meta["_"];
        if(or__3824__auto____7838) {
          return or__3824__auto____7838
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7847 = coll;
      if(and__3822__auto____7847) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7847
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7848 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7849 = cljs.core._reduce[goog.typeOf(x__2363__auto____7848)];
        if(or__3824__auto____7849) {
          return or__3824__auto____7849
        }else {
          var or__3824__auto____7850 = cljs.core._reduce["_"];
          if(or__3824__auto____7850) {
            return or__3824__auto____7850
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7851 = coll;
      if(and__3822__auto____7851) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7851
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7852 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7853 = cljs.core._reduce[goog.typeOf(x__2363__auto____7852)];
        if(or__3824__auto____7853) {
          return or__3824__auto____7853
        }else {
          var or__3824__auto____7854 = cljs.core._reduce["_"];
          if(or__3824__auto____7854) {
            return or__3824__auto____7854
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7859 = coll;
    if(and__3822__auto____7859) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7859
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7860 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7861 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7860)];
      if(or__3824__auto____7861) {
        return or__3824__auto____7861
      }else {
        var or__3824__auto____7862 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7862) {
          return or__3824__auto____7862
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7867 = o;
    if(and__3822__auto____7867) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7867
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7868 = o == null ? null : o;
    return function() {
      var or__3824__auto____7869 = cljs.core._equiv[goog.typeOf(x__2363__auto____7868)];
      if(or__3824__auto____7869) {
        return or__3824__auto____7869
      }else {
        var or__3824__auto____7870 = cljs.core._equiv["_"];
        if(or__3824__auto____7870) {
          return or__3824__auto____7870
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7875 = o;
    if(and__3822__auto____7875) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7875
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7876 = o == null ? null : o;
    return function() {
      var or__3824__auto____7877 = cljs.core._hash[goog.typeOf(x__2363__auto____7876)];
      if(or__3824__auto____7877) {
        return or__3824__auto____7877
      }else {
        var or__3824__auto____7878 = cljs.core._hash["_"];
        if(or__3824__auto____7878) {
          return or__3824__auto____7878
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7883 = o;
    if(and__3822__auto____7883) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7883
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7884 = o == null ? null : o;
    return function() {
      var or__3824__auto____7885 = cljs.core._seq[goog.typeOf(x__2363__auto____7884)];
      if(or__3824__auto____7885) {
        return or__3824__auto____7885
      }else {
        var or__3824__auto____7886 = cljs.core._seq["_"];
        if(or__3824__auto____7886) {
          return or__3824__auto____7886
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7891 = coll;
    if(and__3822__auto____7891) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7891
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7892 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7893 = cljs.core._rseq[goog.typeOf(x__2363__auto____7892)];
      if(or__3824__auto____7893) {
        return or__3824__auto____7893
      }else {
        var or__3824__auto____7894 = cljs.core._rseq["_"];
        if(or__3824__auto____7894) {
          return or__3824__auto____7894
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7899 = coll;
    if(and__3822__auto____7899) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7899
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7900 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7901 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7900)];
      if(or__3824__auto____7901) {
        return or__3824__auto____7901
      }else {
        var or__3824__auto____7902 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7902) {
          return or__3824__auto____7902
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7907 = coll;
    if(and__3822__auto____7907) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7907
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7908 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7909 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7908)];
      if(or__3824__auto____7909) {
        return or__3824__auto____7909
      }else {
        var or__3824__auto____7910 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7910) {
          return or__3824__auto____7910
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7915 = coll;
    if(and__3822__auto____7915) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7915
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7916 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7917 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7916)];
      if(or__3824__auto____7917) {
        return or__3824__auto____7917
      }else {
        var or__3824__auto____7918 = cljs.core._entry_key["_"];
        if(or__3824__auto____7918) {
          return or__3824__auto____7918
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7923 = coll;
    if(and__3822__auto____7923) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7923
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7924 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7925 = cljs.core._comparator[goog.typeOf(x__2363__auto____7924)];
      if(or__3824__auto____7925) {
        return or__3824__auto____7925
      }else {
        var or__3824__auto____7926 = cljs.core._comparator["_"];
        if(or__3824__auto____7926) {
          return or__3824__auto____7926
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7931 = o;
    if(and__3822__auto____7931) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7931
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7932 = o == null ? null : o;
    return function() {
      var or__3824__auto____7933 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7932)];
      if(or__3824__auto____7933) {
        return or__3824__auto____7933
      }else {
        var or__3824__auto____7934 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7934) {
          return or__3824__auto____7934
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7939 = d;
    if(and__3822__auto____7939) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7939
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____7940 = d == null ? null : d;
    return function() {
      var or__3824__auto____7941 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____7940)];
      if(or__3824__auto____7941) {
        return or__3824__auto____7941
      }else {
        var or__3824__auto____7942 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7942) {
          return or__3824__auto____7942
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7947 = this$;
    if(and__3822__auto____7947) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7947
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____7948 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7949 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____7948)];
      if(or__3824__auto____7949) {
        return or__3824__auto____7949
      }else {
        var or__3824__auto____7950 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7950) {
          return or__3824__auto____7950
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7955 = this$;
    if(and__3822__auto____7955) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7955
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____7956 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7957 = cljs.core._add_watch[goog.typeOf(x__2363__auto____7956)];
      if(or__3824__auto____7957) {
        return or__3824__auto____7957
      }else {
        var or__3824__auto____7958 = cljs.core._add_watch["_"];
        if(or__3824__auto____7958) {
          return or__3824__auto____7958
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7963 = this$;
    if(and__3822__auto____7963) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7963
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____7964 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7965 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____7964)];
      if(or__3824__auto____7965) {
        return or__3824__auto____7965
      }else {
        var or__3824__auto____7966 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7966) {
          return or__3824__auto____7966
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7971 = coll;
    if(and__3822__auto____7971) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7971
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____7972 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7973 = cljs.core._as_transient[goog.typeOf(x__2363__auto____7972)];
      if(or__3824__auto____7973) {
        return or__3824__auto____7973
      }else {
        var or__3824__auto____7974 = cljs.core._as_transient["_"];
        if(or__3824__auto____7974) {
          return or__3824__auto____7974
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7979 = tcoll;
    if(and__3822__auto____7979) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7979
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____7980 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7981 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____7980)];
      if(or__3824__auto____7981) {
        return or__3824__auto____7981
      }else {
        var or__3824__auto____7982 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7982) {
          return or__3824__auto____7982
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7987 = tcoll;
    if(and__3822__auto____7987) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7987
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7988 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7989 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____7988)];
      if(or__3824__auto____7989) {
        return or__3824__auto____7989
      }else {
        var or__3824__auto____7990 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7990) {
          return or__3824__auto____7990
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7995 = tcoll;
    if(and__3822__auto____7995) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7995
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____7996 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7997 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____7996)];
      if(or__3824__auto____7997) {
        return or__3824__auto____7997
      }else {
        var or__3824__auto____7998 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7998) {
          return or__3824__auto____7998
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8003 = tcoll;
    if(and__3822__auto____8003) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8003
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____8004 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8005 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____8004)];
      if(or__3824__auto____8005) {
        return or__3824__auto____8005
      }else {
        var or__3824__auto____8006 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8006) {
          return or__3824__auto____8006
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8011 = tcoll;
    if(and__3822__auto____8011) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8011
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____8012 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8013 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____8012)];
      if(or__3824__auto____8013) {
        return or__3824__auto____8013
      }else {
        var or__3824__auto____8014 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8014) {
          return or__3824__auto____8014
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8019 = tcoll;
    if(and__3822__auto____8019) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8019
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____8020 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8021 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____8020)];
      if(or__3824__auto____8021) {
        return or__3824__auto____8021
      }else {
        var or__3824__auto____8022 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8022) {
          return or__3824__auto____8022
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8027 = tcoll;
    if(and__3822__auto____8027) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8027
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____8028 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8029 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____8028)];
      if(or__3824__auto____8029) {
        return or__3824__auto____8029
      }else {
        var or__3824__auto____8030 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8030) {
          return or__3824__auto____8030
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8035 = x;
    if(and__3822__auto____8035) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8035
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____8036 = x == null ? null : x;
    return function() {
      var or__3824__auto____8037 = cljs.core._compare[goog.typeOf(x__2363__auto____8036)];
      if(or__3824__auto____8037) {
        return or__3824__auto____8037
      }else {
        var or__3824__auto____8038 = cljs.core._compare["_"];
        if(or__3824__auto____8038) {
          return or__3824__auto____8038
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8043 = coll;
    if(and__3822__auto____8043) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8043
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____8044 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8045 = cljs.core._drop_first[goog.typeOf(x__2363__auto____8044)];
      if(or__3824__auto____8045) {
        return or__3824__auto____8045
      }else {
        var or__3824__auto____8046 = cljs.core._drop_first["_"];
        if(or__3824__auto____8046) {
          return or__3824__auto____8046
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8051 = coll;
    if(and__3822__auto____8051) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8051
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____8052 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8053 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____8052)];
      if(or__3824__auto____8053) {
        return or__3824__auto____8053
      }else {
        var or__3824__auto____8054 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8054) {
          return or__3824__auto____8054
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8059 = coll;
    if(and__3822__auto____8059) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8059
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____8060 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8061 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____8060)];
      if(or__3824__auto____8061) {
        return or__3824__auto____8061
      }else {
        var or__3824__auto____8062 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8062) {
          return or__3824__auto____8062
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8067 = coll;
    if(and__3822__auto____8067) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8067
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____8068 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8069 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____8068)];
      if(or__3824__auto____8069) {
        return or__3824__auto____8069
      }else {
        var or__3824__auto____8070 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8070) {
          return or__3824__auto____8070
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8072 = x === y;
    if(or__3824__auto____8072) {
      return or__3824__auto____8072
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8073__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8074 = y;
            var G__8075 = cljs.core.first.call(null, more);
            var G__8076 = cljs.core.next.call(null, more);
            x = G__8074;
            y = G__8075;
            more = G__8076;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8073 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8073__delegate.call(this, x, y, more)
    };
    G__8073.cljs$lang$maxFixedArity = 2;
    G__8073.cljs$lang$applyTo = function(arglist__8077) {
      var x = cljs.core.first(arglist__8077);
      var y = cljs.core.first(cljs.core.next(arglist__8077));
      var more = cljs.core.rest(cljs.core.next(arglist__8077));
      return G__8073__delegate(x, y, more)
    };
    G__8073.cljs$lang$arity$variadic = G__8073__delegate;
    return G__8073
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8078 = null;
  var G__8078__2 = function(o, k) {
    return null
  };
  var G__8078__3 = function(o, k, not_found) {
    return not_found
  };
  G__8078 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8078__2.call(this, o, k);
      case 3:
        return G__8078__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8078
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8079 = null;
  var G__8079__2 = function(_, f) {
    return f.call(null)
  };
  var G__8079__3 = function(_, f, start) {
    return start
  };
  G__8079 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8079__2.call(this, _, f);
      case 3:
        return G__8079__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8079
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8080 = null;
  var G__8080__2 = function(_, n) {
    return null
  };
  var G__8080__3 = function(_, n, not_found) {
    return not_found
  };
  G__8080 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8080__2.call(this, _, n);
      case 3:
        return G__8080__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8080
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8081 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8081) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8081
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8094 = cljs.core._count.call(null, cicoll);
    if(cnt__8094 === 0) {
      return f.call(null)
    }else {
      var val__8095 = cljs.core._nth.call(null, cicoll, 0);
      var n__8096 = 1;
      while(true) {
        if(n__8096 < cnt__8094) {
          var nval__8097 = f.call(null, val__8095, cljs.core._nth.call(null, cicoll, n__8096));
          if(cljs.core.reduced_QMARK_.call(null, nval__8097)) {
            return cljs.core.deref.call(null, nval__8097)
          }else {
            var G__8106 = nval__8097;
            var G__8107 = n__8096 + 1;
            val__8095 = G__8106;
            n__8096 = G__8107;
            continue
          }
        }else {
          return val__8095
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8098 = cljs.core._count.call(null, cicoll);
    var val__8099 = val;
    var n__8100 = 0;
    while(true) {
      if(n__8100 < cnt__8098) {
        var nval__8101 = f.call(null, val__8099, cljs.core._nth.call(null, cicoll, n__8100));
        if(cljs.core.reduced_QMARK_.call(null, nval__8101)) {
          return cljs.core.deref.call(null, nval__8101)
        }else {
          var G__8108 = nval__8101;
          var G__8109 = n__8100 + 1;
          val__8099 = G__8108;
          n__8100 = G__8109;
          continue
        }
      }else {
        return val__8099
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8102 = cljs.core._count.call(null, cicoll);
    var val__8103 = val;
    var n__8104 = idx;
    while(true) {
      if(n__8104 < cnt__8102) {
        var nval__8105 = f.call(null, val__8103, cljs.core._nth.call(null, cicoll, n__8104));
        if(cljs.core.reduced_QMARK_.call(null, nval__8105)) {
          return cljs.core.deref.call(null, nval__8105)
        }else {
          var G__8110 = nval__8105;
          var G__8111 = n__8104 + 1;
          val__8103 = G__8110;
          n__8104 = G__8111;
          continue
        }
      }else {
        return val__8103
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8124 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8125 = arr[0];
      var n__8126 = 1;
      while(true) {
        if(n__8126 < cnt__8124) {
          var nval__8127 = f.call(null, val__8125, arr[n__8126]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8127)) {
            return cljs.core.deref.call(null, nval__8127)
          }else {
            var G__8136 = nval__8127;
            var G__8137 = n__8126 + 1;
            val__8125 = G__8136;
            n__8126 = G__8137;
            continue
          }
        }else {
          return val__8125
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8128 = arr.length;
    var val__8129 = val;
    var n__8130 = 0;
    while(true) {
      if(n__8130 < cnt__8128) {
        var nval__8131 = f.call(null, val__8129, arr[n__8130]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8131)) {
          return cljs.core.deref.call(null, nval__8131)
        }else {
          var G__8138 = nval__8131;
          var G__8139 = n__8130 + 1;
          val__8129 = G__8138;
          n__8130 = G__8139;
          continue
        }
      }else {
        return val__8129
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8132 = arr.length;
    var val__8133 = val;
    var n__8134 = idx;
    while(true) {
      if(n__8134 < cnt__8132) {
        var nval__8135 = f.call(null, val__8133, arr[n__8134]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8135)) {
          return cljs.core.deref.call(null, nval__8135)
        }else {
          var G__8140 = nval__8135;
          var G__8141 = n__8134 + 1;
          val__8133 = G__8140;
          n__8134 = G__8141;
          continue
        }
      }else {
        return val__8133
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8142 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8143 = this;
  if(this__8143.i + 1 < this__8143.a.length) {
    return new cljs.core.IndexedSeq(this__8143.a, this__8143.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8144 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8145 = this;
  var c__8146 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8146 > 0) {
    return new cljs.core.RSeq(coll, c__8146 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8147 = this;
  var this__8148 = this;
  return cljs.core.pr_str.call(null, this__8148)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8149 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8149.a)) {
    return cljs.core.ci_reduce.call(null, this__8149.a, f, this__8149.a[this__8149.i], this__8149.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8149.a[this__8149.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8150 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8150.a)) {
    return cljs.core.ci_reduce.call(null, this__8150.a, f, start, this__8150.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8151 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8152 = this;
  return this__8152.a.length - this__8152.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8153 = this;
  return this__8153.a[this__8153.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8154 = this;
  if(this__8154.i + 1 < this__8154.a.length) {
    return new cljs.core.IndexedSeq(this__8154.a, this__8154.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8155 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8156 = this;
  var i__8157 = n + this__8156.i;
  if(i__8157 < this__8156.a.length) {
    return this__8156.a[i__8157]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8158 = this;
  var i__8159 = n + this__8158.i;
  if(i__8159 < this__8158.a.length) {
    return this__8158.a[i__8159]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8160 = null;
  var G__8160__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8160__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8160 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8160__2.call(this, array, f);
      case 3:
        return G__8160__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8160
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8161 = null;
  var G__8161__2 = function(array, k) {
    return array[k]
  };
  var G__8161__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8161 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8161__2.call(this, array, k);
      case 3:
        return G__8161__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8161
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8162 = null;
  var G__8162__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8162__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8162 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8162__2.call(this, array, n);
      case 3:
        return G__8162__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8162
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8163 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8164 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8165 = this;
  var this__8166 = this;
  return cljs.core.pr_str.call(null, this__8166)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8167 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8168 = this;
  return this__8168.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8169 = this;
  return cljs.core._nth.call(null, this__8169.ci, this__8169.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8170 = this;
  if(this__8170.i > 0) {
    return new cljs.core.RSeq(this__8170.ci, this__8170.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8171 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8172 = this;
  return new cljs.core.RSeq(this__8172.ci, this__8172.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8173 = this;
  return this__8173.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8177__8178 = coll;
      if(G__8177__8178) {
        if(function() {
          var or__3824__auto____8179 = G__8177__8178.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8179) {
            return or__3824__auto____8179
          }else {
            return G__8177__8178.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8177__8178.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8177__8178)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8177__8178)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8184__8185 = coll;
      if(G__8184__8185) {
        if(function() {
          var or__3824__auto____8186 = G__8184__8185.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8186) {
            return or__3824__auto____8186
          }else {
            return G__8184__8185.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8184__8185.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8184__8185)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8184__8185)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8187 = cljs.core.seq.call(null, coll);
      if(s__8187 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8187)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8192__8193 = coll;
      if(G__8192__8193) {
        if(function() {
          var or__3824__auto____8194 = G__8192__8193.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8194) {
            return or__3824__auto____8194
          }else {
            return G__8192__8193.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8192__8193.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8192__8193)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8192__8193)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8195 = cljs.core.seq.call(null, coll);
      if(!(s__8195 == null)) {
        return cljs.core._rest.call(null, s__8195)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8199__8200 = coll;
      if(G__8199__8200) {
        if(function() {
          var or__3824__auto____8201 = G__8199__8200.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8201) {
            return or__3824__auto____8201
          }else {
            return G__8199__8200.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8199__8200.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8199__8200)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8199__8200)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8203 = cljs.core.next.call(null, s);
    if(!(sn__8203 == null)) {
      var G__8204 = sn__8203;
      s = G__8204;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8205__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8206 = conj.call(null, coll, x);
          var G__8207 = cljs.core.first.call(null, xs);
          var G__8208 = cljs.core.next.call(null, xs);
          coll = G__8206;
          x = G__8207;
          xs = G__8208;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8205 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8205__delegate.call(this, coll, x, xs)
    };
    G__8205.cljs$lang$maxFixedArity = 2;
    G__8205.cljs$lang$applyTo = function(arglist__8209) {
      var coll = cljs.core.first(arglist__8209);
      var x = cljs.core.first(cljs.core.next(arglist__8209));
      var xs = cljs.core.rest(cljs.core.next(arglist__8209));
      return G__8205__delegate(coll, x, xs)
    };
    G__8205.cljs$lang$arity$variadic = G__8205__delegate;
    return G__8205
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8212 = cljs.core.seq.call(null, coll);
  var acc__8213 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8212)) {
      return acc__8213 + cljs.core._count.call(null, s__8212)
    }else {
      var G__8214 = cljs.core.next.call(null, s__8212);
      var G__8215 = acc__8213 + 1;
      s__8212 = G__8214;
      acc__8213 = G__8215;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8222__8223 = coll;
        if(G__8222__8223) {
          if(function() {
            var or__3824__auto____8224 = G__8222__8223.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8224) {
              return or__3824__auto____8224
            }else {
              return G__8222__8223.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8222__8223.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8222__8223)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8222__8223)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8225__8226 = coll;
        if(G__8225__8226) {
          if(function() {
            var or__3824__auto____8227 = G__8225__8226.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8227) {
              return or__3824__auto____8227
            }else {
              return G__8225__8226.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8225__8226.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8225__8226)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8225__8226)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8230__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8229 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8231 = ret__8229;
          var G__8232 = cljs.core.first.call(null, kvs);
          var G__8233 = cljs.core.second.call(null, kvs);
          var G__8234 = cljs.core.nnext.call(null, kvs);
          coll = G__8231;
          k = G__8232;
          v = G__8233;
          kvs = G__8234;
          continue
        }else {
          return ret__8229
        }
        break
      }
    };
    var G__8230 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8230__delegate.call(this, coll, k, v, kvs)
    };
    G__8230.cljs$lang$maxFixedArity = 3;
    G__8230.cljs$lang$applyTo = function(arglist__8235) {
      var coll = cljs.core.first(arglist__8235);
      var k = cljs.core.first(cljs.core.next(arglist__8235));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8235)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8235)));
      return G__8230__delegate(coll, k, v, kvs)
    };
    G__8230.cljs$lang$arity$variadic = G__8230__delegate;
    return G__8230
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8238__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8237 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8239 = ret__8237;
          var G__8240 = cljs.core.first.call(null, ks);
          var G__8241 = cljs.core.next.call(null, ks);
          coll = G__8239;
          k = G__8240;
          ks = G__8241;
          continue
        }else {
          return ret__8237
        }
        break
      }
    };
    var G__8238 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8238__delegate.call(this, coll, k, ks)
    };
    G__8238.cljs$lang$maxFixedArity = 2;
    G__8238.cljs$lang$applyTo = function(arglist__8242) {
      var coll = cljs.core.first(arglist__8242);
      var k = cljs.core.first(cljs.core.next(arglist__8242));
      var ks = cljs.core.rest(cljs.core.next(arglist__8242));
      return G__8238__delegate(coll, k, ks)
    };
    G__8238.cljs$lang$arity$variadic = G__8238__delegate;
    return G__8238
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8246__8247 = o;
    if(G__8246__8247) {
      if(function() {
        var or__3824__auto____8248 = G__8246__8247.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8248) {
          return or__3824__auto____8248
        }else {
          return G__8246__8247.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8246__8247.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8246__8247)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8246__8247)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8251__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8250 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8252 = ret__8250;
          var G__8253 = cljs.core.first.call(null, ks);
          var G__8254 = cljs.core.next.call(null, ks);
          coll = G__8252;
          k = G__8253;
          ks = G__8254;
          continue
        }else {
          return ret__8250
        }
        break
      }
    };
    var G__8251 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8251__delegate.call(this, coll, k, ks)
    };
    G__8251.cljs$lang$maxFixedArity = 2;
    G__8251.cljs$lang$applyTo = function(arglist__8255) {
      var coll = cljs.core.first(arglist__8255);
      var k = cljs.core.first(cljs.core.next(arglist__8255));
      var ks = cljs.core.rest(cljs.core.next(arglist__8255));
      return G__8251__delegate(coll, k, ks)
    };
    G__8251.cljs$lang$arity$variadic = G__8251__delegate;
    return G__8251
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8257 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8257;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8257
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8259 = cljs.core.string_hash_cache[k];
  if(!(h__8259 == null)) {
    return h__8259
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8261 = goog.isString(o);
      if(and__3822__auto____8261) {
        return check_cache
      }else {
        return and__3822__auto____8261
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8265__8266 = x;
    if(G__8265__8266) {
      if(function() {
        var or__3824__auto____8267 = G__8265__8266.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8267) {
          return or__3824__auto____8267
        }else {
          return G__8265__8266.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8265__8266.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8265__8266)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8265__8266)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8271__8272 = x;
    if(G__8271__8272) {
      if(function() {
        var or__3824__auto____8273 = G__8271__8272.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8273) {
          return or__3824__auto____8273
        }else {
          return G__8271__8272.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8271__8272.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8271__8272)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8271__8272)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8277__8278 = x;
  if(G__8277__8278) {
    if(function() {
      var or__3824__auto____8279 = G__8277__8278.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8279) {
        return or__3824__auto____8279
      }else {
        return G__8277__8278.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8277__8278.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8277__8278)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8277__8278)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8283__8284 = x;
  if(G__8283__8284) {
    if(function() {
      var or__3824__auto____8285 = G__8283__8284.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8285) {
        return or__3824__auto____8285
      }else {
        return G__8283__8284.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8283__8284.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8283__8284)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8283__8284)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8289__8290 = x;
  if(G__8289__8290) {
    if(function() {
      var or__3824__auto____8291 = G__8289__8290.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8291) {
        return or__3824__auto____8291
      }else {
        return G__8289__8290.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8289__8290.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8289__8290)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8289__8290)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8295__8296 = x;
  if(G__8295__8296) {
    if(function() {
      var or__3824__auto____8297 = G__8295__8296.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8297) {
        return or__3824__auto____8297
      }else {
        return G__8295__8296.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8295__8296.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8295__8296)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8295__8296)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8301__8302 = x;
  if(G__8301__8302) {
    if(function() {
      var or__3824__auto____8303 = G__8301__8302.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8303) {
        return or__3824__auto____8303
      }else {
        return G__8301__8302.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8301__8302.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8301__8302)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8301__8302)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8307__8308 = x;
    if(G__8307__8308) {
      if(function() {
        var or__3824__auto____8309 = G__8307__8308.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8309) {
          return or__3824__auto____8309
        }else {
          return G__8307__8308.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8307__8308.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8307__8308)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8307__8308)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8313__8314 = x;
  if(G__8313__8314) {
    if(function() {
      var or__3824__auto____8315 = G__8313__8314.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8315) {
        return or__3824__auto____8315
      }else {
        return G__8313__8314.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8313__8314.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8313__8314)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8313__8314)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8319__8320 = x;
  if(G__8319__8320) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8321 = null;
      if(cljs.core.truth_(or__3824__auto____8321)) {
        return or__3824__auto____8321
      }else {
        return G__8319__8320.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8319__8320.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8319__8320)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8319__8320)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8322__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8322 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8322__delegate.call(this, keyvals)
    };
    G__8322.cljs$lang$maxFixedArity = 0;
    G__8322.cljs$lang$applyTo = function(arglist__8323) {
      var keyvals = cljs.core.seq(arglist__8323);
      return G__8322__delegate(keyvals)
    };
    G__8322.cljs$lang$arity$variadic = G__8322__delegate;
    return G__8322
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8325 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8325.push(key)
  });
  return keys__8325
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8329 = i;
  var j__8330 = j;
  var len__8331 = len;
  while(true) {
    if(len__8331 === 0) {
      return to
    }else {
      to[j__8330] = from[i__8329];
      var G__8332 = i__8329 + 1;
      var G__8333 = j__8330 + 1;
      var G__8334 = len__8331 - 1;
      i__8329 = G__8332;
      j__8330 = G__8333;
      len__8331 = G__8334;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8338 = i + (len - 1);
  var j__8339 = j + (len - 1);
  var len__8340 = len;
  while(true) {
    if(len__8340 === 0) {
      return to
    }else {
      to[j__8339] = from[i__8338];
      var G__8341 = i__8338 - 1;
      var G__8342 = j__8339 - 1;
      var G__8343 = len__8340 - 1;
      i__8338 = G__8341;
      j__8339 = G__8342;
      len__8340 = G__8343;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8347__8348 = s;
    if(G__8347__8348) {
      if(function() {
        var or__3824__auto____8349 = G__8347__8348.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8349) {
          return or__3824__auto____8349
        }else {
          return G__8347__8348.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8347__8348.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8347__8348)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8347__8348)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8353__8354 = s;
  if(G__8353__8354) {
    if(function() {
      var or__3824__auto____8355 = G__8353__8354.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8355) {
        return or__3824__auto____8355
      }else {
        return G__8353__8354.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8353__8354.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8353__8354)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8353__8354)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8358 = goog.isString(x);
  if(and__3822__auto____8358) {
    return!function() {
      var or__3824__auto____8359 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8359) {
        return or__3824__auto____8359
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8358
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8361 = goog.isString(x);
  if(and__3822__auto____8361) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8361
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8363 = goog.isString(x);
  if(and__3822__auto____8363) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8363
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8368 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8368) {
    return or__3824__auto____8368
  }else {
    var G__8369__8370 = f;
    if(G__8369__8370) {
      if(function() {
        var or__3824__auto____8371 = G__8369__8370.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8371) {
          return or__3824__auto____8371
        }else {
          return G__8369__8370.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8369__8370.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8369__8370)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8369__8370)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8373 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8373) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8373
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8376 = coll;
    if(cljs.core.truth_(and__3822__auto____8376)) {
      var and__3822__auto____8377 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8377) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8377
      }
    }else {
      return and__3822__auto____8376
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8386__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8382 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8383 = more;
        while(true) {
          var x__8384 = cljs.core.first.call(null, xs__8383);
          var etc__8385 = cljs.core.next.call(null, xs__8383);
          if(cljs.core.truth_(xs__8383)) {
            if(cljs.core.contains_QMARK_.call(null, s__8382, x__8384)) {
              return false
            }else {
              var G__8387 = cljs.core.conj.call(null, s__8382, x__8384);
              var G__8388 = etc__8385;
              s__8382 = G__8387;
              xs__8383 = G__8388;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8386 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8386__delegate.call(this, x, y, more)
    };
    G__8386.cljs$lang$maxFixedArity = 2;
    G__8386.cljs$lang$applyTo = function(arglist__8389) {
      var x = cljs.core.first(arglist__8389);
      var y = cljs.core.first(cljs.core.next(arglist__8389));
      var more = cljs.core.rest(cljs.core.next(arglist__8389));
      return G__8386__delegate(x, y, more)
    };
    G__8386.cljs$lang$arity$variadic = G__8386__delegate;
    return G__8386
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8393__8394 = x;
            if(G__8393__8394) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8395 = null;
                if(cljs.core.truth_(or__3824__auto____8395)) {
                  return or__3824__auto____8395
                }else {
                  return G__8393__8394.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8393__8394.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8393__8394)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8393__8394)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8400 = cljs.core.count.call(null, xs);
    var yl__8401 = cljs.core.count.call(null, ys);
    if(xl__8400 < yl__8401) {
      return-1
    }else {
      if(xl__8400 > yl__8401) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8400, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8402 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8403 = d__8402 === 0;
        if(and__3822__auto____8403) {
          return n + 1 < len
        }else {
          return and__3822__auto____8403
        }
      }()) {
        var G__8404 = xs;
        var G__8405 = ys;
        var G__8406 = len;
        var G__8407 = n + 1;
        xs = G__8404;
        ys = G__8405;
        len = G__8406;
        n = G__8407;
        continue
      }else {
        return d__8402
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8409 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8409)) {
        return r__8409
      }else {
        if(cljs.core.truth_(r__8409)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8411 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8411, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8411)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8417 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8417) {
      var s__8418 = temp__3971__auto____8417;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8418), cljs.core.next.call(null, s__8418))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8419 = val;
    var coll__8420 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8420) {
        var nval__8421 = f.call(null, val__8419, cljs.core.first.call(null, coll__8420));
        if(cljs.core.reduced_QMARK_.call(null, nval__8421)) {
          return cljs.core.deref.call(null, nval__8421)
        }else {
          var G__8422 = nval__8421;
          var G__8423 = cljs.core.next.call(null, coll__8420);
          val__8419 = G__8422;
          coll__8420 = G__8423;
          continue
        }
      }else {
        return val__8419
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8425 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8425);
  return cljs.core.vec.call(null, a__8425)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8432__8433 = coll;
      if(G__8432__8433) {
        if(function() {
          var or__3824__auto____8434 = G__8432__8433.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8434) {
            return or__3824__auto____8434
          }else {
            return G__8432__8433.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8432__8433.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8432__8433)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8432__8433)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8435__8436 = coll;
      if(G__8435__8436) {
        if(function() {
          var or__3824__auto____8437 = G__8435__8436.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8437) {
            return or__3824__auto____8437
          }else {
            return G__8435__8436.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8435__8436.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8435__8436)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8435__8436)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8438 = this;
  return this__8438.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8439__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8439 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8439__delegate.call(this, x, y, more)
    };
    G__8439.cljs$lang$maxFixedArity = 2;
    G__8439.cljs$lang$applyTo = function(arglist__8440) {
      var x = cljs.core.first(arglist__8440);
      var y = cljs.core.first(cljs.core.next(arglist__8440));
      var more = cljs.core.rest(cljs.core.next(arglist__8440));
      return G__8439__delegate(x, y, more)
    };
    G__8439.cljs$lang$arity$variadic = G__8439__delegate;
    return G__8439
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8441__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8441 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8441__delegate.call(this, x, y, more)
    };
    G__8441.cljs$lang$maxFixedArity = 2;
    G__8441.cljs$lang$applyTo = function(arglist__8442) {
      var x = cljs.core.first(arglist__8442);
      var y = cljs.core.first(cljs.core.next(arglist__8442));
      var more = cljs.core.rest(cljs.core.next(arglist__8442));
      return G__8441__delegate(x, y, more)
    };
    G__8441.cljs$lang$arity$variadic = G__8441__delegate;
    return G__8441
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8443__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8443 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8443__delegate.call(this, x, y, more)
    };
    G__8443.cljs$lang$maxFixedArity = 2;
    G__8443.cljs$lang$applyTo = function(arglist__8444) {
      var x = cljs.core.first(arglist__8444);
      var y = cljs.core.first(cljs.core.next(arglist__8444));
      var more = cljs.core.rest(cljs.core.next(arglist__8444));
      return G__8443__delegate(x, y, more)
    };
    G__8443.cljs$lang$arity$variadic = G__8443__delegate;
    return G__8443
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8445__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8445 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8445__delegate.call(this, x, y, more)
    };
    G__8445.cljs$lang$maxFixedArity = 2;
    G__8445.cljs$lang$applyTo = function(arglist__8446) {
      var x = cljs.core.first(arglist__8446);
      var y = cljs.core.first(cljs.core.next(arglist__8446));
      var more = cljs.core.rest(cljs.core.next(arglist__8446));
      return G__8445__delegate(x, y, more)
    };
    G__8445.cljs$lang$arity$variadic = G__8445__delegate;
    return G__8445
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8447__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8448 = y;
            var G__8449 = cljs.core.first.call(null, more);
            var G__8450 = cljs.core.next.call(null, more);
            x = G__8448;
            y = G__8449;
            more = G__8450;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8447 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8447__delegate.call(this, x, y, more)
    };
    G__8447.cljs$lang$maxFixedArity = 2;
    G__8447.cljs$lang$applyTo = function(arglist__8451) {
      var x = cljs.core.first(arglist__8451);
      var y = cljs.core.first(cljs.core.next(arglist__8451));
      var more = cljs.core.rest(cljs.core.next(arglist__8451));
      return G__8447__delegate(x, y, more)
    };
    G__8447.cljs$lang$arity$variadic = G__8447__delegate;
    return G__8447
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8452__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8453 = y;
            var G__8454 = cljs.core.first.call(null, more);
            var G__8455 = cljs.core.next.call(null, more);
            x = G__8453;
            y = G__8454;
            more = G__8455;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8452 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8452__delegate.call(this, x, y, more)
    };
    G__8452.cljs$lang$maxFixedArity = 2;
    G__8452.cljs$lang$applyTo = function(arglist__8456) {
      var x = cljs.core.first(arglist__8456);
      var y = cljs.core.first(cljs.core.next(arglist__8456));
      var more = cljs.core.rest(cljs.core.next(arglist__8456));
      return G__8452__delegate(x, y, more)
    };
    G__8452.cljs$lang$arity$variadic = G__8452__delegate;
    return G__8452
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8457__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8458 = y;
            var G__8459 = cljs.core.first.call(null, more);
            var G__8460 = cljs.core.next.call(null, more);
            x = G__8458;
            y = G__8459;
            more = G__8460;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8457 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8457__delegate.call(this, x, y, more)
    };
    G__8457.cljs$lang$maxFixedArity = 2;
    G__8457.cljs$lang$applyTo = function(arglist__8461) {
      var x = cljs.core.first(arglist__8461);
      var y = cljs.core.first(cljs.core.next(arglist__8461));
      var more = cljs.core.rest(cljs.core.next(arglist__8461));
      return G__8457__delegate(x, y, more)
    };
    G__8457.cljs$lang$arity$variadic = G__8457__delegate;
    return G__8457
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8462__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8463 = y;
            var G__8464 = cljs.core.first.call(null, more);
            var G__8465 = cljs.core.next.call(null, more);
            x = G__8463;
            y = G__8464;
            more = G__8465;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8462 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8462__delegate.call(this, x, y, more)
    };
    G__8462.cljs$lang$maxFixedArity = 2;
    G__8462.cljs$lang$applyTo = function(arglist__8466) {
      var x = cljs.core.first(arglist__8466);
      var y = cljs.core.first(cljs.core.next(arglist__8466));
      var more = cljs.core.rest(cljs.core.next(arglist__8466));
      return G__8462__delegate(x, y, more)
    };
    G__8462.cljs$lang$arity$variadic = G__8462__delegate;
    return G__8462
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8467__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8467 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8467__delegate.call(this, x, y, more)
    };
    G__8467.cljs$lang$maxFixedArity = 2;
    G__8467.cljs$lang$applyTo = function(arglist__8468) {
      var x = cljs.core.first(arglist__8468);
      var y = cljs.core.first(cljs.core.next(arglist__8468));
      var more = cljs.core.rest(cljs.core.next(arglist__8468));
      return G__8467__delegate(x, y, more)
    };
    G__8467.cljs$lang$arity$variadic = G__8467__delegate;
    return G__8467
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8469__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8469 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8469__delegate.call(this, x, y, more)
    };
    G__8469.cljs$lang$maxFixedArity = 2;
    G__8469.cljs$lang$applyTo = function(arglist__8470) {
      var x = cljs.core.first(arglist__8470);
      var y = cljs.core.first(cljs.core.next(arglist__8470));
      var more = cljs.core.rest(cljs.core.next(arglist__8470));
      return G__8469__delegate(x, y, more)
    };
    G__8469.cljs$lang$arity$variadic = G__8469__delegate;
    return G__8469
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8472 = n % d;
  return cljs.core.fix.call(null, (n - rem__8472) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8474 = cljs.core.quot.call(null, n, d);
  return n - d * q__8474
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8477 = v - (v >> 1 & 1431655765);
  var v__8478 = (v__8477 & 858993459) + (v__8477 >> 2 & 858993459);
  return(v__8478 + (v__8478 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8479__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8480 = y;
            var G__8481 = cljs.core.first.call(null, more);
            var G__8482 = cljs.core.next.call(null, more);
            x = G__8480;
            y = G__8481;
            more = G__8482;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8479 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8479__delegate.call(this, x, y, more)
    };
    G__8479.cljs$lang$maxFixedArity = 2;
    G__8479.cljs$lang$applyTo = function(arglist__8483) {
      var x = cljs.core.first(arglist__8483);
      var y = cljs.core.first(cljs.core.next(arglist__8483));
      var more = cljs.core.rest(cljs.core.next(arglist__8483));
      return G__8479__delegate(x, y, more)
    };
    G__8479.cljs$lang$arity$variadic = G__8479__delegate;
    return G__8479
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8487 = n;
  var xs__8488 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8489 = xs__8488;
      if(and__3822__auto____8489) {
        return n__8487 > 0
      }else {
        return and__3822__auto____8489
      }
    }())) {
      var G__8490 = n__8487 - 1;
      var G__8491 = cljs.core.next.call(null, xs__8488);
      n__8487 = G__8490;
      xs__8488 = G__8491;
      continue
    }else {
      return xs__8488
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8492__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8493 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8494 = cljs.core.next.call(null, more);
            sb = G__8493;
            more = G__8494;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8492 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8492__delegate.call(this, x, ys)
    };
    G__8492.cljs$lang$maxFixedArity = 1;
    G__8492.cljs$lang$applyTo = function(arglist__8495) {
      var x = cljs.core.first(arglist__8495);
      var ys = cljs.core.rest(arglist__8495);
      return G__8492__delegate(x, ys)
    };
    G__8492.cljs$lang$arity$variadic = G__8492__delegate;
    return G__8492
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8496__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8497 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8498 = cljs.core.next.call(null, more);
            sb = G__8497;
            more = G__8498;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8496 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8496__delegate.call(this, x, ys)
    };
    G__8496.cljs$lang$maxFixedArity = 1;
    G__8496.cljs$lang$applyTo = function(arglist__8499) {
      var x = cljs.core.first(arglist__8499);
      var ys = cljs.core.rest(arglist__8499);
      return G__8496__delegate(x, ys)
    };
    G__8496.cljs$lang$arity$variadic = G__8496__delegate;
    return G__8496
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8500) {
    var fmt = cljs.core.first(arglist__8500);
    var args = cljs.core.rest(arglist__8500);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8503 = cljs.core.seq.call(null, x);
    var ys__8504 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8503 == null) {
        return ys__8504 == null
      }else {
        if(ys__8504 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8503), cljs.core.first.call(null, ys__8504))) {
            var G__8505 = cljs.core.next.call(null, xs__8503);
            var G__8506 = cljs.core.next.call(null, ys__8504);
            xs__8503 = G__8505;
            ys__8504 = G__8506;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8507_SHARP_, p2__8508_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8507_SHARP_, cljs.core.hash.call(null, p2__8508_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8512 = 0;
  var s__8513 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8513) {
      var e__8514 = cljs.core.first.call(null, s__8513);
      var G__8515 = (h__8512 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8514)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8514)))) % 4503599627370496;
      var G__8516 = cljs.core.next.call(null, s__8513);
      h__8512 = G__8515;
      s__8513 = G__8516;
      continue
    }else {
      return h__8512
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8520 = 0;
  var s__8521 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8521) {
      var e__8522 = cljs.core.first.call(null, s__8521);
      var G__8523 = (h__8520 + cljs.core.hash.call(null, e__8522)) % 4503599627370496;
      var G__8524 = cljs.core.next.call(null, s__8521);
      h__8520 = G__8523;
      s__8521 = G__8524;
      continue
    }else {
      return h__8520
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8545__8546 = cljs.core.seq.call(null, fn_map);
  if(G__8545__8546) {
    var G__8548__8550 = cljs.core.first.call(null, G__8545__8546);
    var vec__8549__8551 = G__8548__8550;
    var key_name__8552 = cljs.core.nth.call(null, vec__8549__8551, 0, null);
    var f__8553 = cljs.core.nth.call(null, vec__8549__8551, 1, null);
    var G__8545__8554 = G__8545__8546;
    var G__8548__8555 = G__8548__8550;
    var G__8545__8556 = G__8545__8554;
    while(true) {
      var vec__8557__8558 = G__8548__8555;
      var key_name__8559 = cljs.core.nth.call(null, vec__8557__8558, 0, null);
      var f__8560 = cljs.core.nth.call(null, vec__8557__8558, 1, null);
      var G__8545__8561 = G__8545__8556;
      var str_name__8562 = cljs.core.name.call(null, key_name__8559);
      obj[str_name__8562] = f__8560;
      var temp__3974__auto____8563 = cljs.core.next.call(null, G__8545__8561);
      if(temp__3974__auto____8563) {
        var G__8545__8564 = temp__3974__auto____8563;
        var G__8565 = cljs.core.first.call(null, G__8545__8564);
        var G__8566 = G__8545__8564;
        G__8548__8555 = G__8565;
        G__8545__8556 = G__8566;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8567 = this;
  var h__2192__auto____8568 = this__8567.__hash;
  if(!(h__2192__auto____8568 == null)) {
    return h__2192__auto____8568
  }else {
    var h__2192__auto____8569 = cljs.core.hash_coll.call(null, coll);
    this__8567.__hash = h__2192__auto____8569;
    return h__2192__auto____8569
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8570 = this;
  if(this__8570.count === 1) {
    return null
  }else {
    return this__8570.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8571 = this;
  return new cljs.core.List(this__8571.meta, o, coll, this__8571.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8572 = this;
  var this__8573 = this;
  return cljs.core.pr_str.call(null, this__8573)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8574 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8575 = this;
  return this__8575.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8576 = this;
  return this__8576.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8577 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8578 = this;
  return this__8578.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8579 = this;
  if(this__8579.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8579.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8580 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8581 = this;
  return new cljs.core.List(meta, this__8581.first, this__8581.rest, this__8581.count, this__8581.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8582 = this;
  return this__8582.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8583 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8584 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8585 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8586 = this;
  return new cljs.core.List(this__8586.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8587 = this;
  var this__8588 = this;
  return cljs.core.pr_str.call(null, this__8588)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8589 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8590 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8591 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8592 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8593 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8594 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8595 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8596 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8597 = this;
  return this__8597.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8598 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8602__8603 = coll;
  if(G__8602__8603) {
    if(function() {
      var or__3824__auto____8604 = G__8602__8603.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8604) {
        return or__3824__auto____8604
      }else {
        return G__8602__8603.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8602__8603.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8602__8603)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8602__8603)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8605__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8605 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8605__delegate.call(this, x, y, z, items)
    };
    G__8605.cljs$lang$maxFixedArity = 3;
    G__8605.cljs$lang$applyTo = function(arglist__8606) {
      var x = cljs.core.first(arglist__8606);
      var y = cljs.core.first(cljs.core.next(arglist__8606));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8606)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8606)));
      return G__8605__delegate(x, y, z, items)
    };
    G__8605.cljs$lang$arity$variadic = G__8605__delegate;
    return G__8605
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8607 = this;
  var h__2192__auto____8608 = this__8607.__hash;
  if(!(h__2192__auto____8608 == null)) {
    return h__2192__auto____8608
  }else {
    var h__2192__auto____8609 = cljs.core.hash_coll.call(null, coll);
    this__8607.__hash = h__2192__auto____8609;
    return h__2192__auto____8609
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8610 = this;
  if(this__8610.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8610.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8611 = this;
  return new cljs.core.Cons(null, o, coll, this__8611.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8612 = this;
  var this__8613 = this;
  return cljs.core.pr_str.call(null, this__8613)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8614 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8615 = this;
  return this__8615.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8616 = this;
  if(this__8616.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8616.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8617 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8618 = this;
  return new cljs.core.Cons(meta, this__8618.first, this__8618.rest, this__8618.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8619 = this;
  return this__8619.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8620 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8620.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8625 = coll == null;
    if(or__3824__auto____8625) {
      return or__3824__auto____8625
    }else {
      var G__8626__8627 = coll;
      if(G__8626__8627) {
        if(function() {
          var or__3824__auto____8628 = G__8626__8627.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8628) {
            return or__3824__auto____8628
          }else {
            return G__8626__8627.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8626__8627.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8626__8627)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8626__8627)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8632__8633 = x;
  if(G__8632__8633) {
    if(function() {
      var or__3824__auto____8634 = G__8632__8633.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8634) {
        return or__3824__auto____8634
      }else {
        return G__8632__8633.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8632__8633.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8632__8633)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8632__8633)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8635 = null;
  var G__8635__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8635__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8635 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8635__2.call(this, string, f);
      case 3:
        return G__8635__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8635
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8636 = null;
  var G__8636__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8636__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8636 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8636__2.call(this, string, k);
      case 3:
        return G__8636__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8636
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8637 = null;
  var G__8637__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8637__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8637 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8637__2.call(this, string, n);
      case 3:
        return G__8637__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8637
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8649 = null;
  var G__8649__2 = function(this_sym8640, coll) {
    var this__8642 = this;
    var this_sym8640__8643 = this;
    var ___8644 = this_sym8640__8643;
    if(coll == null) {
      return null
    }else {
      var strobj__8645 = coll.strobj;
      if(strobj__8645 == null) {
        return cljs.core._lookup.call(null, coll, this__8642.k, null)
      }else {
        return strobj__8645[this__8642.k]
      }
    }
  };
  var G__8649__3 = function(this_sym8641, coll, not_found) {
    var this__8642 = this;
    var this_sym8641__8646 = this;
    var ___8647 = this_sym8641__8646;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8642.k, not_found)
    }
  };
  G__8649 = function(this_sym8641, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8649__2.call(this, this_sym8641, coll);
      case 3:
        return G__8649__3.call(this, this_sym8641, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8649
}();
cljs.core.Keyword.prototype.apply = function(this_sym8638, args8639) {
  var this__8648 = this;
  return this_sym8638.call.apply(this_sym8638, [this_sym8638].concat(args8639.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8658 = null;
  var G__8658__2 = function(this_sym8652, coll) {
    var this_sym8652__8654 = this;
    var this__8655 = this_sym8652__8654;
    return cljs.core._lookup.call(null, coll, this__8655.toString(), null)
  };
  var G__8658__3 = function(this_sym8653, coll, not_found) {
    var this_sym8653__8656 = this;
    var this__8657 = this_sym8653__8656;
    return cljs.core._lookup.call(null, coll, this__8657.toString(), not_found)
  };
  G__8658 = function(this_sym8653, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8658__2.call(this, this_sym8653, coll);
      case 3:
        return G__8658__3.call(this, this_sym8653, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8658
}();
String.prototype.apply = function(this_sym8650, args8651) {
  return this_sym8650.call.apply(this_sym8650, [this_sym8650].concat(args8651.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8660 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8660
  }else {
    lazy_seq.x = x__8660.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8661 = this;
  var h__2192__auto____8662 = this__8661.__hash;
  if(!(h__2192__auto____8662 == null)) {
    return h__2192__auto____8662
  }else {
    var h__2192__auto____8663 = cljs.core.hash_coll.call(null, coll);
    this__8661.__hash = h__2192__auto____8663;
    return h__2192__auto____8663
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8664 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8665 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8666 = this;
  var this__8667 = this;
  return cljs.core.pr_str.call(null, this__8667)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8668 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8669 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8670 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8671 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8672 = this;
  return new cljs.core.LazySeq(meta, this__8672.realized, this__8672.x, this__8672.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8673 = this;
  return this__8673.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8674 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8674.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8675 = this;
  return this__8675.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8676 = this;
  var ___8677 = this;
  this__8676.buf[this__8676.end] = o;
  return this__8676.end = this__8676.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8678 = this;
  var ___8679 = this;
  var ret__8680 = new cljs.core.ArrayChunk(this__8678.buf, 0, this__8678.end);
  this__8678.buf = null;
  return ret__8680
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8681 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8681.arr[this__8681.off], this__8681.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8682 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8682.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8683 = this;
  if(this__8683.off === this__8683.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8683.arr, this__8683.off + 1, this__8683.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8684 = this;
  return this__8684.arr[this__8684.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8685 = this;
  if(function() {
    var and__3822__auto____8686 = i >= 0;
    if(and__3822__auto____8686) {
      return i < this__8685.end - this__8685.off
    }else {
      return and__3822__auto____8686
    }
  }()) {
    return this__8685.arr[this__8685.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8687 = this;
  return this__8687.end - this__8687.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8688 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8689 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8690 = this;
  return cljs.core._nth.call(null, this__8690.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8691 = this;
  if(cljs.core._count.call(null, this__8691.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8691.chunk), this__8691.more, this__8691.meta)
  }else {
    if(this__8691.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8691.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8692 = this;
  if(this__8692.more == null) {
    return null
  }else {
    return this__8692.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8693 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8694 = this;
  return new cljs.core.ChunkedCons(this__8694.chunk, this__8694.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8695 = this;
  return this__8695.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8696 = this;
  return this__8696.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8697 = this;
  if(this__8697.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8697.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8701__8702 = s;
    if(G__8701__8702) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8703 = null;
        if(cljs.core.truth_(or__3824__auto____8703)) {
          return or__3824__auto____8703
        }else {
          return G__8701__8702.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8701__8702.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8701__8702)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8701__8702)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8706 = [];
  var s__8707 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8707)) {
      ary__8706.push(cljs.core.first.call(null, s__8707));
      var G__8708 = cljs.core.next.call(null, s__8707);
      s__8707 = G__8708;
      continue
    }else {
      return ary__8706
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8712 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8713 = 0;
  var xs__8714 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8714) {
      ret__8712[i__8713] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8714));
      var G__8715 = i__8713 + 1;
      var G__8716 = cljs.core.next.call(null, xs__8714);
      i__8713 = G__8715;
      xs__8714 = G__8716;
      continue
    }else {
    }
    break
  }
  return ret__8712
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8724 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8725 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8726 = 0;
      var s__8727 = s__8725;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8728 = s__8727;
          if(and__3822__auto____8728) {
            return i__8726 < size
          }else {
            return and__3822__auto____8728
          }
        }())) {
          a__8724[i__8726] = cljs.core.first.call(null, s__8727);
          var G__8731 = i__8726 + 1;
          var G__8732 = cljs.core.next.call(null, s__8727);
          i__8726 = G__8731;
          s__8727 = G__8732;
          continue
        }else {
          return a__8724
        }
        break
      }
    }else {
      var n__2527__auto____8729 = size;
      var i__8730 = 0;
      while(true) {
        if(i__8730 < n__2527__auto____8729) {
          a__8724[i__8730] = init_val_or_seq;
          var G__8733 = i__8730 + 1;
          i__8730 = G__8733;
          continue
        }else {
        }
        break
      }
      return a__8724
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8741 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8742 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8743 = 0;
      var s__8744 = s__8742;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8745 = s__8744;
          if(and__3822__auto____8745) {
            return i__8743 < size
          }else {
            return and__3822__auto____8745
          }
        }())) {
          a__8741[i__8743] = cljs.core.first.call(null, s__8744);
          var G__8748 = i__8743 + 1;
          var G__8749 = cljs.core.next.call(null, s__8744);
          i__8743 = G__8748;
          s__8744 = G__8749;
          continue
        }else {
          return a__8741
        }
        break
      }
    }else {
      var n__2527__auto____8746 = size;
      var i__8747 = 0;
      while(true) {
        if(i__8747 < n__2527__auto____8746) {
          a__8741[i__8747] = init_val_or_seq;
          var G__8750 = i__8747 + 1;
          i__8747 = G__8750;
          continue
        }else {
        }
        break
      }
      return a__8741
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8758 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8759 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8760 = 0;
      var s__8761 = s__8759;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8762 = s__8761;
          if(and__3822__auto____8762) {
            return i__8760 < size
          }else {
            return and__3822__auto____8762
          }
        }())) {
          a__8758[i__8760] = cljs.core.first.call(null, s__8761);
          var G__8765 = i__8760 + 1;
          var G__8766 = cljs.core.next.call(null, s__8761);
          i__8760 = G__8765;
          s__8761 = G__8766;
          continue
        }else {
          return a__8758
        }
        break
      }
    }else {
      var n__2527__auto____8763 = size;
      var i__8764 = 0;
      while(true) {
        if(i__8764 < n__2527__auto____8763) {
          a__8758[i__8764] = init_val_or_seq;
          var G__8767 = i__8764 + 1;
          i__8764 = G__8767;
          continue
        }else {
        }
        break
      }
      return a__8758
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8772 = s;
    var i__8773 = n;
    var sum__8774 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8775 = i__8773 > 0;
        if(and__3822__auto____8775) {
          return cljs.core.seq.call(null, s__8772)
        }else {
          return and__3822__auto____8775
        }
      }())) {
        var G__8776 = cljs.core.next.call(null, s__8772);
        var G__8777 = i__8773 - 1;
        var G__8778 = sum__8774 + 1;
        s__8772 = G__8776;
        i__8773 = G__8777;
        sum__8774 = G__8778;
        continue
      }else {
        return sum__8774
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8783 = cljs.core.seq.call(null, x);
      if(s__8783) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8783)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8783), concat.call(null, cljs.core.chunk_rest.call(null, s__8783), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8783), concat.call(null, cljs.core.rest.call(null, s__8783), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8787__delegate = function(x, y, zs) {
      var cat__8786 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8785 = cljs.core.seq.call(null, xys);
          if(xys__8785) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8785)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8785), cat.call(null, cljs.core.chunk_rest.call(null, xys__8785), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8785), cat.call(null, cljs.core.rest.call(null, xys__8785), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8786.call(null, concat.call(null, x, y), zs)
    };
    var G__8787 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8787__delegate.call(this, x, y, zs)
    };
    G__8787.cljs$lang$maxFixedArity = 2;
    G__8787.cljs$lang$applyTo = function(arglist__8788) {
      var x = cljs.core.first(arglist__8788);
      var y = cljs.core.first(cljs.core.next(arglist__8788));
      var zs = cljs.core.rest(cljs.core.next(arglist__8788));
      return G__8787__delegate(x, y, zs)
    };
    G__8787.cljs$lang$arity$variadic = G__8787__delegate;
    return G__8787
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8789__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8789 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8789__delegate.call(this, a, b, c, d, more)
    };
    G__8789.cljs$lang$maxFixedArity = 4;
    G__8789.cljs$lang$applyTo = function(arglist__8790) {
      var a = cljs.core.first(arglist__8790);
      var b = cljs.core.first(cljs.core.next(arglist__8790));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8790)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8790))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8790))));
      return G__8789__delegate(a, b, c, d, more)
    };
    G__8789.cljs$lang$arity$variadic = G__8789__delegate;
    return G__8789
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8832 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8833 = cljs.core._first.call(null, args__8832);
    var args__8834 = cljs.core._rest.call(null, args__8832);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8833)
      }else {
        return f.call(null, a__8833)
      }
    }else {
      var b__8835 = cljs.core._first.call(null, args__8834);
      var args__8836 = cljs.core._rest.call(null, args__8834);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8833, b__8835)
        }else {
          return f.call(null, a__8833, b__8835)
        }
      }else {
        var c__8837 = cljs.core._first.call(null, args__8836);
        var args__8838 = cljs.core._rest.call(null, args__8836);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8833, b__8835, c__8837)
          }else {
            return f.call(null, a__8833, b__8835, c__8837)
          }
        }else {
          var d__8839 = cljs.core._first.call(null, args__8838);
          var args__8840 = cljs.core._rest.call(null, args__8838);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8833, b__8835, c__8837, d__8839)
            }else {
              return f.call(null, a__8833, b__8835, c__8837, d__8839)
            }
          }else {
            var e__8841 = cljs.core._first.call(null, args__8840);
            var args__8842 = cljs.core._rest.call(null, args__8840);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8833, b__8835, c__8837, d__8839, e__8841)
              }else {
                return f.call(null, a__8833, b__8835, c__8837, d__8839, e__8841)
              }
            }else {
              var f__8843 = cljs.core._first.call(null, args__8842);
              var args__8844 = cljs.core._rest.call(null, args__8842);
              if(argc === 6) {
                if(f__8843.cljs$lang$arity$6) {
                  return f__8843.cljs$lang$arity$6(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843)
                }else {
                  return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843)
                }
              }else {
                var g__8845 = cljs.core._first.call(null, args__8844);
                var args__8846 = cljs.core._rest.call(null, args__8844);
                if(argc === 7) {
                  if(f__8843.cljs$lang$arity$7) {
                    return f__8843.cljs$lang$arity$7(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845)
                  }else {
                    return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845)
                  }
                }else {
                  var h__8847 = cljs.core._first.call(null, args__8846);
                  var args__8848 = cljs.core._rest.call(null, args__8846);
                  if(argc === 8) {
                    if(f__8843.cljs$lang$arity$8) {
                      return f__8843.cljs$lang$arity$8(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847)
                    }else {
                      return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847)
                    }
                  }else {
                    var i__8849 = cljs.core._first.call(null, args__8848);
                    var args__8850 = cljs.core._rest.call(null, args__8848);
                    if(argc === 9) {
                      if(f__8843.cljs$lang$arity$9) {
                        return f__8843.cljs$lang$arity$9(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849)
                      }else {
                        return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849)
                      }
                    }else {
                      var j__8851 = cljs.core._first.call(null, args__8850);
                      var args__8852 = cljs.core._rest.call(null, args__8850);
                      if(argc === 10) {
                        if(f__8843.cljs$lang$arity$10) {
                          return f__8843.cljs$lang$arity$10(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851)
                        }else {
                          return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851)
                        }
                      }else {
                        var k__8853 = cljs.core._first.call(null, args__8852);
                        var args__8854 = cljs.core._rest.call(null, args__8852);
                        if(argc === 11) {
                          if(f__8843.cljs$lang$arity$11) {
                            return f__8843.cljs$lang$arity$11(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853)
                          }else {
                            return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853)
                          }
                        }else {
                          var l__8855 = cljs.core._first.call(null, args__8854);
                          var args__8856 = cljs.core._rest.call(null, args__8854);
                          if(argc === 12) {
                            if(f__8843.cljs$lang$arity$12) {
                              return f__8843.cljs$lang$arity$12(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855)
                            }else {
                              return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855)
                            }
                          }else {
                            var m__8857 = cljs.core._first.call(null, args__8856);
                            var args__8858 = cljs.core._rest.call(null, args__8856);
                            if(argc === 13) {
                              if(f__8843.cljs$lang$arity$13) {
                                return f__8843.cljs$lang$arity$13(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857)
                              }else {
                                return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857)
                              }
                            }else {
                              var n__8859 = cljs.core._first.call(null, args__8858);
                              var args__8860 = cljs.core._rest.call(null, args__8858);
                              if(argc === 14) {
                                if(f__8843.cljs$lang$arity$14) {
                                  return f__8843.cljs$lang$arity$14(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859)
                                }else {
                                  return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859)
                                }
                              }else {
                                var o__8861 = cljs.core._first.call(null, args__8860);
                                var args__8862 = cljs.core._rest.call(null, args__8860);
                                if(argc === 15) {
                                  if(f__8843.cljs$lang$arity$15) {
                                    return f__8843.cljs$lang$arity$15(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861)
                                  }else {
                                    return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861)
                                  }
                                }else {
                                  var p__8863 = cljs.core._first.call(null, args__8862);
                                  var args__8864 = cljs.core._rest.call(null, args__8862);
                                  if(argc === 16) {
                                    if(f__8843.cljs$lang$arity$16) {
                                      return f__8843.cljs$lang$arity$16(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863)
                                    }else {
                                      return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863)
                                    }
                                  }else {
                                    var q__8865 = cljs.core._first.call(null, args__8864);
                                    var args__8866 = cljs.core._rest.call(null, args__8864);
                                    if(argc === 17) {
                                      if(f__8843.cljs$lang$arity$17) {
                                        return f__8843.cljs$lang$arity$17(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865)
                                      }else {
                                        return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865)
                                      }
                                    }else {
                                      var r__8867 = cljs.core._first.call(null, args__8866);
                                      var args__8868 = cljs.core._rest.call(null, args__8866);
                                      if(argc === 18) {
                                        if(f__8843.cljs$lang$arity$18) {
                                          return f__8843.cljs$lang$arity$18(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867)
                                        }else {
                                          return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867)
                                        }
                                      }else {
                                        var s__8869 = cljs.core._first.call(null, args__8868);
                                        var args__8870 = cljs.core._rest.call(null, args__8868);
                                        if(argc === 19) {
                                          if(f__8843.cljs$lang$arity$19) {
                                            return f__8843.cljs$lang$arity$19(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867, s__8869)
                                          }else {
                                            return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867, s__8869)
                                          }
                                        }else {
                                          var t__8871 = cljs.core._first.call(null, args__8870);
                                          var args__8872 = cljs.core._rest.call(null, args__8870);
                                          if(argc === 20) {
                                            if(f__8843.cljs$lang$arity$20) {
                                              return f__8843.cljs$lang$arity$20(a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867, s__8869, t__8871)
                                            }else {
                                              return f__8843.call(null, a__8833, b__8835, c__8837, d__8839, e__8841, f__8843, g__8845, h__8847, i__8849, j__8851, k__8853, l__8855, m__8857, n__8859, o__8861, p__8863, q__8865, r__8867, s__8869, t__8871)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8887 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8888 = cljs.core.bounded_count.call(null, args, fixed_arity__8887 + 1);
      if(bc__8888 <= fixed_arity__8887) {
        return cljs.core.apply_to.call(null, f, bc__8888, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8889 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8890 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8891 = cljs.core.bounded_count.call(null, arglist__8889, fixed_arity__8890 + 1);
      if(bc__8891 <= fixed_arity__8890) {
        return cljs.core.apply_to.call(null, f, bc__8891, arglist__8889)
      }else {
        return f.cljs$lang$applyTo(arglist__8889)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8889))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8892 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8893 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8894 = cljs.core.bounded_count.call(null, arglist__8892, fixed_arity__8893 + 1);
      if(bc__8894 <= fixed_arity__8893) {
        return cljs.core.apply_to.call(null, f, bc__8894, arglist__8892)
      }else {
        return f.cljs$lang$applyTo(arglist__8892)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8892))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8895 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8896 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8897 = cljs.core.bounded_count.call(null, arglist__8895, fixed_arity__8896 + 1);
      if(bc__8897 <= fixed_arity__8896) {
        return cljs.core.apply_to.call(null, f, bc__8897, arglist__8895)
      }else {
        return f.cljs$lang$applyTo(arglist__8895)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8895))
    }
  };
  var apply__6 = function() {
    var G__8901__delegate = function(f, a, b, c, d, args) {
      var arglist__8898 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8899 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8900 = cljs.core.bounded_count.call(null, arglist__8898, fixed_arity__8899 + 1);
        if(bc__8900 <= fixed_arity__8899) {
          return cljs.core.apply_to.call(null, f, bc__8900, arglist__8898)
        }else {
          return f.cljs$lang$applyTo(arglist__8898)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8898))
      }
    };
    var G__8901 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8901__delegate.call(this, f, a, b, c, d, args)
    };
    G__8901.cljs$lang$maxFixedArity = 5;
    G__8901.cljs$lang$applyTo = function(arglist__8902) {
      var f = cljs.core.first(arglist__8902);
      var a = cljs.core.first(cljs.core.next(arglist__8902));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8902)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8902))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8902)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8902)))));
      return G__8901__delegate(f, a, b, c, d, args)
    };
    G__8901.cljs$lang$arity$variadic = G__8901__delegate;
    return G__8901
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8903) {
    var obj = cljs.core.first(arglist__8903);
    var f = cljs.core.first(cljs.core.next(arglist__8903));
    var args = cljs.core.rest(cljs.core.next(arglist__8903));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8904__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8904 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8904__delegate.call(this, x, y, more)
    };
    G__8904.cljs$lang$maxFixedArity = 2;
    G__8904.cljs$lang$applyTo = function(arglist__8905) {
      var x = cljs.core.first(arglist__8905);
      var y = cljs.core.first(cljs.core.next(arglist__8905));
      var more = cljs.core.rest(cljs.core.next(arglist__8905));
      return G__8904__delegate(x, y, more)
    };
    G__8904.cljs$lang$arity$variadic = G__8904__delegate;
    return G__8904
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8906 = pred;
        var G__8907 = cljs.core.next.call(null, coll);
        pred = G__8906;
        coll = G__8907;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8909 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8909)) {
        return or__3824__auto____8909
      }else {
        var G__8910 = pred;
        var G__8911 = cljs.core.next.call(null, coll);
        pred = G__8910;
        coll = G__8911;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8912 = null;
    var G__8912__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8912__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8912__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8912__3 = function() {
      var G__8913__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8913 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8913__delegate.call(this, x, y, zs)
      };
      G__8913.cljs$lang$maxFixedArity = 2;
      G__8913.cljs$lang$applyTo = function(arglist__8914) {
        var x = cljs.core.first(arglist__8914);
        var y = cljs.core.first(cljs.core.next(arglist__8914));
        var zs = cljs.core.rest(cljs.core.next(arglist__8914));
        return G__8913__delegate(x, y, zs)
      };
      G__8913.cljs$lang$arity$variadic = G__8913__delegate;
      return G__8913
    }();
    G__8912 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8912__0.call(this);
        case 1:
          return G__8912__1.call(this, x);
        case 2:
          return G__8912__2.call(this, x, y);
        default:
          return G__8912__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8912.cljs$lang$maxFixedArity = 2;
    G__8912.cljs$lang$applyTo = G__8912__3.cljs$lang$applyTo;
    return G__8912
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8915__delegate = function(args) {
      return x
    };
    var G__8915 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8915__delegate.call(this, args)
    };
    G__8915.cljs$lang$maxFixedArity = 0;
    G__8915.cljs$lang$applyTo = function(arglist__8916) {
      var args = cljs.core.seq(arglist__8916);
      return G__8915__delegate(args)
    };
    G__8915.cljs$lang$arity$variadic = G__8915__delegate;
    return G__8915
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8923 = null;
      var G__8923__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8923__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8923__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8923__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8923__4 = function() {
        var G__8924__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8924 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8924__delegate.call(this, x, y, z, args)
        };
        G__8924.cljs$lang$maxFixedArity = 3;
        G__8924.cljs$lang$applyTo = function(arglist__8925) {
          var x = cljs.core.first(arglist__8925);
          var y = cljs.core.first(cljs.core.next(arglist__8925));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8925)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8925)));
          return G__8924__delegate(x, y, z, args)
        };
        G__8924.cljs$lang$arity$variadic = G__8924__delegate;
        return G__8924
      }();
      G__8923 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8923__0.call(this);
          case 1:
            return G__8923__1.call(this, x);
          case 2:
            return G__8923__2.call(this, x, y);
          case 3:
            return G__8923__3.call(this, x, y, z);
          default:
            return G__8923__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8923.cljs$lang$maxFixedArity = 3;
      G__8923.cljs$lang$applyTo = G__8923__4.cljs$lang$applyTo;
      return G__8923
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8926 = null;
      var G__8926__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8926__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8926__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8926__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8926__4 = function() {
        var G__8927__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8927 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8927__delegate.call(this, x, y, z, args)
        };
        G__8927.cljs$lang$maxFixedArity = 3;
        G__8927.cljs$lang$applyTo = function(arglist__8928) {
          var x = cljs.core.first(arglist__8928);
          var y = cljs.core.first(cljs.core.next(arglist__8928));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8928)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8928)));
          return G__8927__delegate(x, y, z, args)
        };
        G__8927.cljs$lang$arity$variadic = G__8927__delegate;
        return G__8927
      }();
      G__8926 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8926__0.call(this);
          case 1:
            return G__8926__1.call(this, x);
          case 2:
            return G__8926__2.call(this, x, y);
          case 3:
            return G__8926__3.call(this, x, y, z);
          default:
            return G__8926__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8926.cljs$lang$maxFixedArity = 3;
      G__8926.cljs$lang$applyTo = G__8926__4.cljs$lang$applyTo;
      return G__8926
    }()
  };
  var comp__4 = function() {
    var G__8929__delegate = function(f1, f2, f3, fs) {
      var fs__8920 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8930__delegate = function(args) {
          var ret__8921 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8920), args);
          var fs__8922 = cljs.core.next.call(null, fs__8920);
          while(true) {
            if(fs__8922) {
              var G__8931 = cljs.core.first.call(null, fs__8922).call(null, ret__8921);
              var G__8932 = cljs.core.next.call(null, fs__8922);
              ret__8921 = G__8931;
              fs__8922 = G__8932;
              continue
            }else {
              return ret__8921
            }
            break
          }
        };
        var G__8930 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8930__delegate.call(this, args)
        };
        G__8930.cljs$lang$maxFixedArity = 0;
        G__8930.cljs$lang$applyTo = function(arglist__8933) {
          var args = cljs.core.seq(arglist__8933);
          return G__8930__delegate(args)
        };
        G__8930.cljs$lang$arity$variadic = G__8930__delegate;
        return G__8930
      }()
    };
    var G__8929 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8929__delegate.call(this, f1, f2, f3, fs)
    };
    G__8929.cljs$lang$maxFixedArity = 3;
    G__8929.cljs$lang$applyTo = function(arglist__8934) {
      var f1 = cljs.core.first(arglist__8934);
      var f2 = cljs.core.first(cljs.core.next(arglist__8934));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8934)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8934)));
      return G__8929__delegate(f1, f2, f3, fs)
    };
    G__8929.cljs$lang$arity$variadic = G__8929__delegate;
    return G__8929
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8935__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8935 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8935__delegate.call(this, args)
      };
      G__8935.cljs$lang$maxFixedArity = 0;
      G__8935.cljs$lang$applyTo = function(arglist__8936) {
        var args = cljs.core.seq(arglist__8936);
        return G__8935__delegate(args)
      };
      G__8935.cljs$lang$arity$variadic = G__8935__delegate;
      return G__8935
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8937__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8937 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8937__delegate.call(this, args)
      };
      G__8937.cljs$lang$maxFixedArity = 0;
      G__8937.cljs$lang$applyTo = function(arglist__8938) {
        var args = cljs.core.seq(arglist__8938);
        return G__8937__delegate(args)
      };
      G__8937.cljs$lang$arity$variadic = G__8937__delegate;
      return G__8937
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8939__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8939 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8939__delegate.call(this, args)
      };
      G__8939.cljs$lang$maxFixedArity = 0;
      G__8939.cljs$lang$applyTo = function(arglist__8940) {
        var args = cljs.core.seq(arglist__8940);
        return G__8939__delegate(args)
      };
      G__8939.cljs$lang$arity$variadic = G__8939__delegate;
      return G__8939
    }()
  };
  var partial__5 = function() {
    var G__8941__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8942__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8942 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8942__delegate.call(this, args)
        };
        G__8942.cljs$lang$maxFixedArity = 0;
        G__8942.cljs$lang$applyTo = function(arglist__8943) {
          var args = cljs.core.seq(arglist__8943);
          return G__8942__delegate(args)
        };
        G__8942.cljs$lang$arity$variadic = G__8942__delegate;
        return G__8942
      }()
    };
    var G__8941 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8941__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8941.cljs$lang$maxFixedArity = 4;
    G__8941.cljs$lang$applyTo = function(arglist__8944) {
      var f = cljs.core.first(arglist__8944);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8944));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8944)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8944))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8944))));
      return G__8941__delegate(f, arg1, arg2, arg3, more)
    };
    G__8941.cljs$lang$arity$variadic = G__8941__delegate;
    return G__8941
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8945 = null;
      var G__8945__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8945__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8945__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8945__4 = function() {
        var G__8946__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8946 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8946__delegate.call(this, a, b, c, ds)
        };
        G__8946.cljs$lang$maxFixedArity = 3;
        G__8946.cljs$lang$applyTo = function(arglist__8947) {
          var a = cljs.core.first(arglist__8947);
          var b = cljs.core.first(cljs.core.next(arglist__8947));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8947)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8947)));
          return G__8946__delegate(a, b, c, ds)
        };
        G__8946.cljs$lang$arity$variadic = G__8946__delegate;
        return G__8946
      }();
      G__8945 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8945__1.call(this, a);
          case 2:
            return G__8945__2.call(this, a, b);
          case 3:
            return G__8945__3.call(this, a, b, c);
          default:
            return G__8945__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8945.cljs$lang$maxFixedArity = 3;
      G__8945.cljs$lang$applyTo = G__8945__4.cljs$lang$applyTo;
      return G__8945
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8948 = null;
      var G__8948__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8948__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8948__4 = function() {
        var G__8949__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8949 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8949__delegate.call(this, a, b, c, ds)
        };
        G__8949.cljs$lang$maxFixedArity = 3;
        G__8949.cljs$lang$applyTo = function(arglist__8950) {
          var a = cljs.core.first(arglist__8950);
          var b = cljs.core.first(cljs.core.next(arglist__8950));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8950)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8950)));
          return G__8949__delegate(a, b, c, ds)
        };
        G__8949.cljs$lang$arity$variadic = G__8949__delegate;
        return G__8949
      }();
      G__8948 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8948__2.call(this, a, b);
          case 3:
            return G__8948__3.call(this, a, b, c);
          default:
            return G__8948__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8948.cljs$lang$maxFixedArity = 3;
      G__8948.cljs$lang$applyTo = G__8948__4.cljs$lang$applyTo;
      return G__8948
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8951 = null;
      var G__8951__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8951__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8951__4 = function() {
        var G__8952__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8952 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8952__delegate.call(this, a, b, c, ds)
        };
        G__8952.cljs$lang$maxFixedArity = 3;
        G__8952.cljs$lang$applyTo = function(arglist__8953) {
          var a = cljs.core.first(arglist__8953);
          var b = cljs.core.first(cljs.core.next(arglist__8953));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8953)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8953)));
          return G__8952__delegate(a, b, c, ds)
        };
        G__8952.cljs$lang$arity$variadic = G__8952__delegate;
        return G__8952
      }();
      G__8951 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8951__2.call(this, a, b);
          case 3:
            return G__8951__3.call(this, a, b, c);
          default:
            return G__8951__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8951.cljs$lang$maxFixedArity = 3;
      G__8951.cljs$lang$applyTo = G__8951__4.cljs$lang$applyTo;
      return G__8951
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8969 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8977 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8977) {
        var s__8978 = temp__3974__auto____8977;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8978)) {
          var c__8979 = cljs.core.chunk_first.call(null, s__8978);
          var size__8980 = cljs.core.count.call(null, c__8979);
          var b__8981 = cljs.core.chunk_buffer.call(null, size__8980);
          var n__2527__auto____8982 = size__8980;
          var i__8983 = 0;
          while(true) {
            if(i__8983 < n__2527__auto____8982) {
              cljs.core.chunk_append.call(null, b__8981, f.call(null, idx + i__8983, cljs.core._nth.call(null, c__8979, i__8983)));
              var G__8984 = i__8983 + 1;
              i__8983 = G__8984;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8981), mapi.call(null, idx + size__8980, cljs.core.chunk_rest.call(null, s__8978)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8978)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8978)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8969.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8994 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8994) {
      var s__8995 = temp__3974__auto____8994;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8995)) {
        var c__8996 = cljs.core.chunk_first.call(null, s__8995);
        var size__8997 = cljs.core.count.call(null, c__8996);
        var b__8998 = cljs.core.chunk_buffer.call(null, size__8997);
        var n__2527__auto____8999 = size__8997;
        var i__9000 = 0;
        while(true) {
          if(i__9000 < n__2527__auto____8999) {
            var x__9001 = f.call(null, cljs.core._nth.call(null, c__8996, i__9000));
            if(x__9001 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8998, x__9001)
            }
            var G__9003 = i__9000 + 1;
            i__9000 = G__9003;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8998), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8995)))
      }else {
        var x__9002 = f.call(null, cljs.core.first.call(null, s__8995));
        if(x__9002 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8995))
        }else {
          return cljs.core.cons.call(null, x__9002, keep.call(null, f, cljs.core.rest.call(null, s__8995)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9029 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9039 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9039) {
        var s__9040 = temp__3974__auto____9039;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9040)) {
          var c__9041 = cljs.core.chunk_first.call(null, s__9040);
          var size__9042 = cljs.core.count.call(null, c__9041);
          var b__9043 = cljs.core.chunk_buffer.call(null, size__9042);
          var n__2527__auto____9044 = size__9042;
          var i__9045 = 0;
          while(true) {
            if(i__9045 < n__2527__auto____9044) {
              var x__9046 = f.call(null, idx + i__9045, cljs.core._nth.call(null, c__9041, i__9045));
              if(x__9046 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9043, x__9046)
              }
              var G__9048 = i__9045 + 1;
              i__9045 = G__9048;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9043), keepi.call(null, idx + size__9042, cljs.core.chunk_rest.call(null, s__9040)))
        }else {
          var x__9047 = f.call(null, idx, cljs.core.first.call(null, s__9040));
          if(x__9047 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9040))
          }else {
            return cljs.core.cons.call(null, x__9047, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9040)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9029.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9134 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9134)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9134
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9135 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9135)) {
            var and__3822__auto____9136 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9136)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9136
            }
          }else {
            return and__3822__auto____9135
          }
        }())
      };
      var ep1__4 = function() {
        var G__9205__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9137 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9137)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9137
            }
          }())
        };
        var G__9205 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9205__delegate.call(this, x, y, z, args)
        };
        G__9205.cljs$lang$maxFixedArity = 3;
        G__9205.cljs$lang$applyTo = function(arglist__9206) {
          var x = cljs.core.first(arglist__9206);
          var y = cljs.core.first(cljs.core.next(arglist__9206));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9206)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9206)));
          return G__9205__delegate(x, y, z, args)
        };
        G__9205.cljs$lang$arity$variadic = G__9205__delegate;
        return G__9205
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9149 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9149)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9149
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9150 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9150)) {
            var and__3822__auto____9151 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9151)) {
              var and__3822__auto____9152 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9152)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9152
              }
            }else {
              return and__3822__auto____9151
            }
          }else {
            return and__3822__auto____9150
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9153 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9153)) {
            var and__3822__auto____9154 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9154)) {
              var and__3822__auto____9155 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9155)) {
                var and__3822__auto____9156 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9156)) {
                  var and__3822__auto____9157 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9157)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9157
                  }
                }else {
                  return and__3822__auto____9156
                }
              }else {
                return and__3822__auto____9155
              }
            }else {
              return and__3822__auto____9154
            }
          }else {
            return and__3822__auto____9153
          }
        }())
      };
      var ep2__4 = function() {
        var G__9207__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9158 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9158)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9004_SHARP_) {
                var and__3822__auto____9159 = p1.call(null, p1__9004_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9159)) {
                  return p2.call(null, p1__9004_SHARP_)
                }else {
                  return and__3822__auto____9159
                }
              }, args)
            }else {
              return and__3822__auto____9158
            }
          }())
        };
        var G__9207 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9207__delegate.call(this, x, y, z, args)
        };
        G__9207.cljs$lang$maxFixedArity = 3;
        G__9207.cljs$lang$applyTo = function(arglist__9208) {
          var x = cljs.core.first(arglist__9208);
          var y = cljs.core.first(cljs.core.next(arglist__9208));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9208)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9208)));
          return G__9207__delegate(x, y, z, args)
        };
        G__9207.cljs$lang$arity$variadic = G__9207__delegate;
        return G__9207
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9178 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9178)) {
            var and__3822__auto____9179 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9179)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9179
            }
          }else {
            return and__3822__auto____9178
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9180 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9180)) {
            var and__3822__auto____9181 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9181)) {
              var and__3822__auto____9182 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9182)) {
                var and__3822__auto____9183 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9183)) {
                  var and__3822__auto____9184 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9184)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9184
                  }
                }else {
                  return and__3822__auto____9183
                }
              }else {
                return and__3822__auto____9182
              }
            }else {
              return and__3822__auto____9181
            }
          }else {
            return and__3822__auto____9180
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9185 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9185)) {
            var and__3822__auto____9186 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9186)) {
              var and__3822__auto____9187 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9187)) {
                var and__3822__auto____9188 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9188)) {
                  var and__3822__auto____9189 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9189)) {
                    var and__3822__auto____9190 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9190)) {
                      var and__3822__auto____9191 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9191)) {
                        var and__3822__auto____9192 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9192)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9192
                        }
                      }else {
                        return and__3822__auto____9191
                      }
                    }else {
                      return and__3822__auto____9190
                    }
                  }else {
                    return and__3822__auto____9189
                  }
                }else {
                  return and__3822__auto____9188
                }
              }else {
                return and__3822__auto____9187
              }
            }else {
              return and__3822__auto____9186
            }
          }else {
            return and__3822__auto____9185
          }
        }())
      };
      var ep3__4 = function() {
        var G__9209__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9193 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9193)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9005_SHARP_) {
                var and__3822__auto____9194 = p1.call(null, p1__9005_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9194)) {
                  var and__3822__auto____9195 = p2.call(null, p1__9005_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9195)) {
                    return p3.call(null, p1__9005_SHARP_)
                  }else {
                    return and__3822__auto____9195
                  }
                }else {
                  return and__3822__auto____9194
                }
              }, args)
            }else {
              return and__3822__auto____9193
            }
          }())
        };
        var G__9209 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9209__delegate.call(this, x, y, z, args)
        };
        G__9209.cljs$lang$maxFixedArity = 3;
        G__9209.cljs$lang$applyTo = function(arglist__9210) {
          var x = cljs.core.first(arglist__9210);
          var y = cljs.core.first(cljs.core.next(arglist__9210));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9210)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9210)));
          return G__9209__delegate(x, y, z, args)
        };
        G__9209.cljs$lang$arity$variadic = G__9209__delegate;
        return G__9209
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9211__delegate = function(p1, p2, p3, ps) {
      var ps__9196 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9006_SHARP_) {
            return p1__9006_SHARP_.call(null, x)
          }, ps__9196)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9007_SHARP_) {
            var and__3822__auto____9201 = p1__9007_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9201)) {
              return p1__9007_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9201
            }
          }, ps__9196)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9008_SHARP_) {
            var and__3822__auto____9202 = p1__9008_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9202)) {
              var and__3822__auto____9203 = p1__9008_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9203)) {
                return p1__9008_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9203
              }
            }else {
              return and__3822__auto____9202
            }
          }, ps__9196)
        };
        var epn__4 = function() {
          var G__9212__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9204 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9204)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9009_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9009_SHARP_, args)
                }, ps__9196)
              }else {
                return and__3822__auto____9204
              }
            }())
          };
          var G__9212 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9212__delegate.call(this, x, y, z, args)
          };
          G__9212.cljs$lang$maxFixedArity = 3;
          G__9212.cljs$lang$applyTo = function(arglist__9213) {
            var x = cljs.core.first(arglist__9213);
            var y = cljs.core.first(cljs.core.next(arglist__9213));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9213)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9213)));
            return G__9212__delegate(x, y, z, args)
          };
          G__9212.cljs$lang$arity$variadic = G__9212__delegate;
          return G__9212
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9211 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9211__delegate.call(this, p1, p2, p3, ps)
    };
    G__9211.cljs$lang$maxFixedArity = 3;
    G__9211.cljs$lang$applyTo = function(arglist__9214) {
      var p1 = cljs.core.first(arglist__9214);
      var p2 = cljs.core.first(cljs.core.next(arglist__9214));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9214)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9214)));
      return G__9211__delegate(p1, p2, p3, ps)
    };
    G__9211.cljs$lang$arity$variadic = G__9211__delegate;
    return G__9211
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9295 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9295)) {
          return or__3824__auto____9295
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9296 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9296)) {
          return or__3824__auto____9296
        }else {
          var or__3824__auto____9297 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9297)) {
            return or__3824__auto____9297
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9366__delegate = function(x, y, z, args) {
          var or__3824__auto____9298 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9298)) {
            return or__3824__auto____9298
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9366 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9366__delegate.call(this, x, y, z, args)
        };
        G__9366.cljs$lang$maxFixedArity = 3;
        G__9366.cljs$lang$applyTo = function(arglist__9367) {
          var x = cljs.core.first(arglist__9367);
          var y = cljs.core.first(cljs.core.next(arglist__9367));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9367)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9367)));
          return G__9366__delegate(x, y, z, args)
        };
        G__9366.cljs$lang$arity$variadic = G__9366__delegate;
        return G__9366
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9310 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9310)) {
          return or__3824__auto____9310
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9311 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9311)) {
          return or__3824__auto____9311
        }else {
          var or__3824__auto____9312 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9312)) {
            return or__3824__auto____9312
          }else {
            var or__3824__auto____9313 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9313)) {
              return or__3824__auto____9313
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9314 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9314)) {
          return or__3824__auto____9314
        }else {
          var or__3824__auto____9315 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9315)) {
            return or__3824__auto____9315
          }else {
            var or__3824__auto____9316 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9316)) {
              return or__3824__auto____9316
            }else {
              var or__3824__auto____9317 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9317)) {
                return or__3824__auto____9317
              }else {
                var or__3824__auto____9318 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9318)) {
                  return or__3824__auto____9318
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9368__delegate = function(x, y, z, args) {
          var or__3824__auto____9319 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9319)) {
            return or__3824__auto____9319
          }else {
            return cljs.core.some.call(null, function(p1__9049_SHARP_) {
              var or__3824__auto____9320 = p1.call(null, p1__9049_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9320)) {
                return or__3824__auto____9320
              }else {
                return p2.call(null, p1__9049_SHARP_)
              }
            }, args)
          }
        };
        var G__9368 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9368__delegate.call(this, x, y, z, args)
        };
        G__9368.cljs$lang$maxFixedArity = 3;
        G__9368.cljs$lang$applyTo = function(arglist__9369) {
          var x = cljs.core.first(arglist__9369);
          var y = cljs.core.first(cljs.core.next(arglist__9369));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9369)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9369)));
          return G__9368__delegate(x, y, z, args)
        };
        G__9368.cljs$lang$arity$variadic = G__9368__delegate;
        return G__9368
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9339 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9339)) {
          return or__3824__auto____9339
        }else {
          var or__3824__auto____9340 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9340)) {
            return or__3824__auto____9340
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9341 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9341)) {
          return or__3824__auto____9341
        }else {
          var or__3824__auto____9342 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9342)) {
            return or__3824__auto____9342
          }else {
            var or__3824__auto____9343 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9343)) {
              return or__3824__auto____9343
            }else {
              var or__3824__auto____9344 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9344)) {
                return or__3824__auto____9344
              }else {
                var or__3824__auto____9345 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9345)) {
                  return or__3824__auto____9345
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9346 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9346)) {
          return or__3824__auto____9346
        }else {
          var or__3824__auto____9347 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9347)) {
            return or__3824__auto____9347
          }else {
            var or__3824__auto____9348 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9348)) {
              return or__3824__auto____9348
            }else {
              var or__3824__auto____9349 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9349)) {
                return or__3824__auto____9349
              }else {
                var or__3824__auto____9350 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9350)) {
                  return or__3824__auto____9350
                }else {
                  var or__3824__auto____9351 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9351)) {
                    return or__3824__auto____9351
                  }else {
                    var or__3824__auto____9352 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9352)) {
                      return or__3824__auto____9352
                    }else {
                      var or__3824__auto____9353 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9353)) {
                        return or__3824__auto____9353
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9370__delegate = function(x, y, z, args) {
          var or__3824__auto____9354 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9354)) {
            return or__3824__auto____9354
          }else {
            return cljs.core.some.call(null, function(p1__9050_SHARP_) {
              var or__3824__auto____9355 = p1.call(null, p1__9050_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9355)) {
                return or__3824__auto____9355
              }else {
                var or__3824__auto____9356 = p2.call(null, p1__9050_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9356)) {
                  return or__3824__auto____9356
                }else {
                  return p3.call(null, p1__9050_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9370 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9370__delegate.call(this, x, y, z, args)
        };
        G__9370.cljs$lang$maxFixedArity = 3;
        G__9370.cljs$lang$applyTo = function(arglist__9371) {
          var x = cljs.core.first(arglist__9371);
          var y = cljs.core.first(cljs.core.next(arglist__9371));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9371)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9371)));
          return G__9370__delegate(x, y, z, args)
        };
        G__9370.cljs$lang$arity$variadic = G__9370__delegate;
        return G__9370
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9372__delegate = function(p1, p2, p3, ps) {
      var ps__9357 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9051_SHARP_) {
            return p1__9051_SHARP_.call(null, x)
          }, ps__9357)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9052_SHARP_) {
            var or__3824__auto____9362 = p1__9052_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9362)) {
              return or__3824__auto____9362
            }else {
              return p1__9052_SHARP_.call(null, y)
            }
          }, ps__9357)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9053_SHARP_) {
            var or__3824__auto____9363 = p1__9053_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9363)) {
              return or__3824__auto____9363
            }else {
              var or__3824__auto____9364 = p1__9053_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9364)) {
                return or__3824__auto____9364
              }else {
                return p1__9053_SHARP_.call(null, z)
              }
            }
          }, ps__9357)
        };
        var spn__4 = function() {
          var G__9373__delegate = function(x, y, z, args) {
            var or__3824__auto____9365 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9365)) {
              return or__3824__auto____9365
            }else {
              return cljs.core.some.call(null, function(p1__9054_SHARP_) {
                return cljs.core.some.call(null, p1__9054_SHARP_, args)
              }, ps__9357)
            }
          };
          var G__9373 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9373__delegate.call(this, x, y, z, args)
          };
          G__9373.cljs$lang$maxFixedArity = 3;
          G__9373.cljs$lang$applyTo = function(arglist__9374) {
            var x = cljs.core.first(arglist__9374);
            var y = cljs.core.first(cljs.core.next(arglist__9374));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9374)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9374)));
            return G__9373__delegate(x, y, z, args)
          };
          G__9373.cljs$lang$arity$variadic = G__9373__delegate;
          return G__9373
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9372 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9372__delegate.call(this, p1, p2, p3, ps)
    };
    G__9372.cljs$lang$maxFixedArity = 3;
    G__9372.cljs$lang$applyTo = function(arglist__9375) {
      var p1 = cljs.core.first(arglist__9375);
      var p2 = cljs.core.first(cljs.core.next(arglist__9375));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9375)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9375)));
      return G__9372__delegate(p1, p2, p3, ps)
    };
    G__9372.cljs$lang$arity$variadic = G__9372__delegate;
    return G__9372
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9394 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9394) {
        var s__9395 = temp__3974__auto____9394;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9395)) {
          var c__9396 = cljs.core.chunk_first.call(null, s__9395);
          var size__9397 = cljs.core.count.call(null, c__9396);
          var b__9398 = cljs.core.chunk_buffer.call(null, size__9397);
          var n__2527__auto____9399 = size__9397;
          var i__9400 = 0;
          while(true) {
            if(i__9400 < n__2527__auto____9399) {
              cljs.core.chunk_append.call(null, b__9398, f.call(null, cljs.core._nth.call(null, c__9396, i__9400)));
              var G__9412 = i__9400 + 1;
              i__9400 = G__9412;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9398), map.call(null, f, cljs.core.chunk_rest.call(null, s__9395)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9395)), map.call(null, f, cljs.core.rest.call(null, s__9395)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9401 = cljs.core.seq.call(null, c1);
      var s2__9402 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9403 = s1__9401;
        if(and__3822__auto____9403) {
          return s2__9402
        }else {
          return and__3822__auto____9403
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9401), cljs.core.first.call(null, s2__9402)), map.call(null, f, cljs.core.rest.call(null, s1__9401), cljs.core.rest.call(null, s2__9402)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9404 = cljs.core.seq.call(null, c1);
      var s2__9405 = cljs.core.seq.call(null, c2);
      var s3__9406 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9407 = s1__9404;
        if(and__3822__auto____9407) {
          var and__3822__auto____9408 = s2__9405;
          if(and__3822__auto____9408) {
            return s3__9406
          }else {
            return and__3822__auto____9408
          }
        }else {
          return and__3822__auto____9407
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9404), cljs.core.first.call(null, s2__9405), cljs.core.first.call(null, s3__9406)), map.call(null, f, cljs.core.rest.call(null, s1__9404), cljs.core.rest.call(null, s2__9405), cljs.core.rest.call(null, s3__9406)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9413__delegate = function(f, c1, c2, c3, colls) {
      var step__9411 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9410 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9410)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9410), step.call(null, map.call(null, cljs.core.rest, ss__9410)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9215_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9215_SHARP_)
      }, step__9411.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9413 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9413__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9413.cljs$lang$maxFixedArity = 4;
    G__9413.cljs$lang$applyTo = function(arglist__9414) {
      var f = cljs.core.first(arglist__9414);
      var c1 = cljs.core.first(cljs.core.next(arglist__9414));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9414)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9414))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9414))));
      return G__9413__delegate(f, c1, c2, c3, colls)
    };
    G__9413.cljs$lang$arity$variadic = G__9413__delegate;
    return G__9413
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9417 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9417) {
        var s__9418 = temp__3974__auto____9417;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9418), take.call(null, n - 1, cljs.core.rest.call(null, s__9418)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9424 = function(n, coll) {
    while(true) {
      var s__9422 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9423 = n > 0;
        if(and__3822__auto____9423) {
          return s__9422
        }else {
          return and__3822__auto____9423
        }
      }())) {
        var G__9425 = n - 1;
        var G__9426 = cljs.core.rest.call(null, s__9422);
        n = G__9425;
        coll = G__9426;
        continue
      }else {
        return s__9422
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9424.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9429 = cljs.core.seq.call(null, coll);
  var lead__9430 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9430) {
      var G__9431 = cljs.core.next.call(null, s__9429);
      var G__9432 = cljs.core.next.call(null, lead__9430);
      s__9429 = G__9431;
      lead__9430 = G__9432;
      continue
    }else {
      return s__9429
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9438 = function(pred, coll) {
    while(true) {
      var s__9436 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9437 = s__9436;
        if(and__3822__auto____9437) {
          return pred.call(null, cljs.core.first.call(null, s__9436))
        }else {
          return and__3822__auto____9437
        }
      }())) {
        var G__9439 = pred;
        var G__9440 = cljs.core.rest.call(null, s__9436);
        pred = G__9439;
        coll = G__9440;
        continue
      }else {
        return s__9436
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9438.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9443 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9443) {
      var s__9444 = temp__3974__auto____9443;
      return cljs.core.concat.call(null, s__9444, cycle.call(null, s__9444))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9449 = cljs.core.seq.call(null, c1);
      var s2__9450 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9451 = s1__9449;
        if(and__3822__auto____9451) {
          return s2__9450
        }else {
          return and__3822__auto____9451
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9449), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9450), interleave.call(null, cljs.core.rest.call(null, s1__9449), cljs.core.rest.call(null, s2__9450))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9453__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9452 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9452)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9452), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9452)))
        }else {
          return null
        }
      }, null)
    };
    var G__9453 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9453__delegate.call(this, c1, c2, colls)
    };
    G__9453.cljs$lang$maxFixedArity = 2;
    G__9453.cljs$lang$applyTo = function(arglist__9454) {
      var c1 = cljs.core.first(arglist__9454);
      var c2 = cljs.core.first(cljs.core.next(arglist__9454));
      var colls = cljs.core.rest(cljs.core.next(arglist__9454));
      return G__9453__delegate(c1, c2, colls)
    };
    G__9453.cljs$lang$arity$variadic = G__9453__delegate;
    return G__9453
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9464 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9462 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9462) {
        var coll__9463 = temp__3971__auto____9462;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9463), cat.call(null, cljs.core.rest.call(null, coll__9463), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9464.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9465__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9465 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9465__delegate.call(this, f, coll, colls)
    };
    G__9465.cljs$lang$maxFixedArity = 2;
    G__9465.cljs$lang$applyTo = function(arglist__9466) {
      var f = cljs.core.first(arglist__9466);
      var coll = cljs.core.first(cljs.core.next(arglist__9466));
      var colls = cljs.core.rest(cljs.core.next(arglist__9466));
      return G__9465__delegate(f, coll, colls)
    };
    G__9465.cljs$lang$arity$variadic = G__9465__delegate;
    return G__9465
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9476 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9476) {
      var s__9477 = temp__3974__auto____9476;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9477)) {
        var c__9478 = cljs.core.chunk_first.call(null, s__9477);
        var size__9479 = cljs.core.count.call(null, c__9478);
        var b__9480 = cljs.core.chunk_buffer.call(null, size__9479);
        var n__2527__auto____9481 = size__9479;
        var i__9482 = 0;
        while(true) {
          if(i__9482 < n__2527__auto____9481) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9478, i__9482)))) {
              cljs.core.chunk_append.call(null, b__9480, cljs.core._nth.call(null, c__9478, i__9482))
            }else {
            }
            var G__9485 = i__9482 + 1;
            i__9482 = G__9485;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9480), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9477)))
      }else {
        var f__9483 = cljs.core.first.call(null, s__9477);
        var r__9484 = cljs.core.rest.call(null, s__9477);
        if(cljs.core.truth_(pred.call(null, f__9483))) {
          return cljs.core.cons.call(null, f__9483, filter.call(null, pred, r__9484))
        }else {
          return filter.call(null, pred, r__9484)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9488 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9488.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9486_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9486_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9492__9493 = to;
    if(G__9492__9493) {
      if(function() {
        var or__3824__auto____9494 = G__9492__9493.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9494) {
          return or__3824__auto____9494
        }else {
          return G__9492__9493.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9492__9493.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9492__9493)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9492__9493)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9495__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9495 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9495__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9495.cljs$lang$maxFixedArity = 4;
    G__9495.cljs$lang$applyTo = function(arglist__9496) {
      var f = cljs.core.first(arglist__9496);
      var c1 = cljs.core.first(cljs.core.next(arglist__9496));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9496)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9496))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9496))));
      return G__9495__delegate(f, c1, c2, c3, colls)
    };
    G__9495.cljs$lang$arity$variadic = G__9495__delegate;
    return G__9495
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9503 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9503) {
        var s__9504 = temp__3974__auto____9503;
        var p__9505 = cljs.core.take.call(null, n, s__9504);
        if(n === cljs.core.count.call(null, p__9505)) {
          return cljs.core.cons.call(null, p__9505, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9504)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9506 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9506) {
        var s__9507 = temp__3974__auto____9506;
        var p__9508 = cljs.core.take.call(null, n, s__9507);
        if(n === cljs.core.count.call(null, p__9508)) {
          return cljs.core.cons.call(null, p__9508, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9507)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9508, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9513 = cljs.core.lookup_sentinel;
    var m__9514 = m;
    var ks__9515 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9515) {
        var m__9516 = cljs.core._lookup.call(null, m__9514, cljs.core.first.call(null, ks__9515), sentinel__9513);
        if(sentinel__9513 === m__9516) {
          return not_found
        }else {
          var G__9517 = sentinel__9513;
          var G__9518 = m__9516;
          var G__9519 = cljs.core.next.call(null, ks__9515);
          sentinel__9513 = G__9517;
          m__9514 = G__9518;
          ks__9515 = G__9519;
          continue
        }
      }else {
        return m__9514
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9520, v) {
  var vec__9525__9526 = p__9520;
  var k__9527 = cljs.core.nth.call(null, vec__9525__9526, 0, null);
  var ks__9528 = cljs.core.nthnext.call(null, vec__9525__9526, 1);
  if(cljs.core.truth_(ks__9528)) {
    return cljs.core.assoc.call(null, m, k__9527, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9527, null), ks__9528, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9527, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9529, f, args) {
    var vec__9534__9535 = p__9529;
    var k__9536 = cljs.core.nth.call(null, vec__9534__9535, 0, null);
    var ks__9537 = cljs.core.nthnext.call(null, vec__9534__9535, 1);
    if(cljs.core.truth_(ks__9537)) {
      return cljs.core.assoc.call(null, m, k__9536, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9536, null), ks__9537, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9536, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9536, null), args))
    }
  };
  var update_in = function(m, p__9529, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9529, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9538) {
    var m = cljs.core.first(arglist__9538);
    var p__9529 = cljs.core.first(cljs.core.next(arglist__9538));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9538)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9538)));
    return update_in__delegate(m, p__9529, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9541 = this;
  var h__2192__auto____9542 = this__9541.__hash;
  if(!(h__2192__auto____9542 == null)) {
    return h__2192__auto____9542
  }else {
    var h__2192__auto____9543 = cljs.core.hash_coll.call(null, coll);
    this__9541.__hash = h__2192__auto____9543;
    return h__2192__auto____9543
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9544 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9545 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9546 = this;
  var new_array__9547 = this__9546.array.slice();
  new_array__9547[k] = v;
  return new cljs.core.Vector(this__9546.meta, new_array__9547, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9578 = null;
  var G__9578__2 = function(this_sym9548, k) {
    var this__9550 = this;
    var this_sym9548__9551 = this;
    var coll__9552 = this_sym9548__9551;
    return coll__9552.cljs$core$ILookup$_lookup$arity$2(coll__9552, k)
  };
  var G__9578__3 = function(this_sym9549, k, not_found) {
    var this__9550 = this;
    var this_sym9549__9553 = this;
    var coll__9554 = this_sym9549__9553;
    return coll__9554.cljs$core$ILookup$_lookup$arity$3(coll__9554, k, not_found)
  };
  G__9578 = function(this_sym9549, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9578__2.call(this, this_sym9549, k);
      case 3:
        return G__9578__3.call(this, this_sym9549, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9578
}();
cljs.core.Vector.prototype.apply = function(this_sym9539, args9540) {
  var this__9555 = this;
  return this_sym9539.call.apply(this_sym9539, [this_sym9539].concat(args9540.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9556 = this;
  var new_array__9557 = this__9556.array.slice();
  new_array__9557.push(o);
  return new cljs.core.Vector(this__9556.meta, new_array__9557, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9558 = this;
  var this__9559 = this;
  return cljs.core.pr_str.call(null, this__9559)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9560 = this;
  return cljs.core.ci_reduce.call(null, this__9560.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9561 = this;
  return cljs.core.ci_reduce.call(null, this__9561.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9562 = this;
  if(this__9562.array.length > 0) {
    var vector_seq__9563 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9562.array.length) {
          return cljs.core.cons.call(null, this__9562.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9563.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9564 = this;
  return this__9564.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9565 = this;
  var count__9566 = this__9565.array.length;
  if(count__9566 > 0) {
    return this__9565.array[count__9566 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9567 = this;
  if(this__9567.array.length > 0) {
    var new_array__9568 = this__9567.array.slice();
    new_array__9568.pop();
    return new cljs.core.Vector(this__9567.meta, new_array__9568, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9569 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9570 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9571 = this;
  return new cljs.core.Vector(meta, this__9571.array, this__9571.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9572 = this;
  return this__9572.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9573 = this;
  if(function() {
    var and__3822__auto____9574 = 0 <= n;
    if(and__3822__auto____9574) {
      return n < this__9573.array.length
    }else {
      return and__3822__auto____9574
    }
  }()) {
    return this__9573.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9575 = this;
  if(function() {
    var and__3822__auto____9576 = 0 <= n;
    if(and__3822__auto____9576) {
      return n < this__9575.array.length
    }else {
      return and__3822__auto____9576
    }
  }()) {
    return this__9575.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9577 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9577.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9580 = pv.cnt;
  if(cnt__9580 < 32) {
    return 0
  }else {
    return cnt__9580 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9586 = level;
  var ret__9587 = node;
  while(true) {
    if(ll__9586 === 0) {
      return ret__9587
    }else {
      var embed__9588 = ret__9587;
      var r__9589 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9590 = cljs.core.pv_aset.call(null, r__9589, 0, embed__9588);
      var G__9591 = ll__9586 - 5;
      var G__9592 = r__9589;
      ll__9586 = G__9591;
      ret__9587 = G__9592;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9598 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9599 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9598, subidx__9599, tailnode);
    return ret__9598
  }else {
    var child__9600 = cljs.core.pv_aget.call(null, parent, subidx__9599);
    if(!(child__9600 == null)) {
      var node_to_insert__9601 = push_tail.call(null, pv, level - 5, child__9600, tailnode);
      cljs.core.pv_aset.call(null, ret__9598, subidx__9599, node_to_insert__9601);
      return ret__9598
    }else {
      var node_to_insert__9602 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9598, subidx__9599, node_to_insert__9602);
      return ret__9598
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9606 = 0 <= i;
    if(and__3822__auto____9606) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9606
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9607 = pv.root;
      var level__9608 = pv.shift;
      while(true) {
        if(level__9608 > 0) {
          var G__9609 = cljs.core.pv_aget.call(null, node__9607, i >>> level__9608 & 31);
          var G__9610 = level__9608 - 5;
          node__9607 = G__9609;
          level__9608 = G__9610;
          continue
        }else {
          return node__9607.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9613 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9613, i & 31, val);
    return ret__9613
  }else {
    var subidx__9614 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9613, subidx__9614, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9614), i, val));
    return ret__9613
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9620 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9621 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9620));
    if(function() {
      var and__3822__auto____9622 = new_child__9621 == null;
      if(and__3822__auto____9622) {
        return subidx__9620 === 0
      }else {
        return and__3822__auto____9622
      }
    }()) {
      return null
    }else {
      var ret__9623 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9623, subidx__9620, new_child__9621);
      return ret__9623
    }
  }else {
    if(subidx__9620 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9624 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9624, subidx__9620, null);
        return ret__9624
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9627 = this;
  return new cljs.core.TransientVector(this__9627.cnt, this__9627.shift, cljs.core.tv_editable_root.call(null, this__9627.root), cljs.core.tv_editable_tail.call(null, this__9627.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9628 = this;
  var h__2192__auto____9629 = this__9628.__hash;
  if(!(h__2192__auto____9629 == null)) {
    return h__2192__auto____9629
  }else {
    var h__2192__auto____9630 = cljs.core.hash_coll.call(null, coll);
    this__9628.__hash = h__2192__auto____9630;
    return h__2192__auto____9630
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9631 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9632 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9633 = this;
  if(function() {
    var and__3822__auto____9634 = 0 <= k;
    if(and__3822__auto____9634) {
      return k < this__9633.cnt
    }else {
      return and__3822__auto____9634
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9635 = this__9633.tail.slice();
      new_tail__9635[k & 31] = v;
      return new cljs.core.PersistentVector(this__9633.meta, this__9633.cnt, this__9633.shift, this__9633.root, new_tail__9635, null)
    }else {
      return new cljs.core.PersistentVector(this__9633.meta, this__9633.cnt, this__9633.shift, cljs.core.do_assoc.call(null, coll, this__9633.shift, this__9633.root, k, v), this__9633.tail, null)
    }
  }else {
    if(k === this__9633.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9633.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9683 = null;
  var G__9683__2 = function(this_sym9636, k) {
    var this__9638 = this;
    var this_sym9636__9639 = this;
    var coll__9640 = this_sym9636__9639;
    return coll__9640.cljs$core$ILookup$_lookup$arity$2(coll__9640, k)
  };
  var G__9683__3 = function(this_sym9637, k, not_found) {
    var this__9638 = this;
    var this_sym9637__9641 = this;
    var coll__9642 = this_sym9637__9641;
    return coll__9642.cljs$core$ILookup$_lookup$arity$3(coll__9642, k, not_found)
  };
  G__9683 = function(this_sym9637, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9683__2.call(this, this_sym9637, k);
      case 3:
        return G__9683__3.call(this, this_sym9637, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9683
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9625, args9626) {
  var this__9643 = this;
  return this_sym9625.call.apply(this_sym9625, [this_sym9625].concat(args9626.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9644 = this;
  var step_init__9645 = [0, init];
  var i__9646 = 0;
  while(true) {
    if(i__9646 < this__9644.cnt) {
      var arr__9647 = cljs.core.array_for.call(null, v, i__9646);
      var len__9648 = arr__9647.length;
      var init__9652 = function() {
        var j__9649 = 0;
        var init__9650 = step_init__9645[1];
        while(true) {
          if(j__9649 < len__9648) {
            var init__9651 = f.call(null, init__9650, j__9649 + i__9646, arr__9647[j__9649]);
            if(cljs.core.reduced_QMARK_.call(null, init__9651)) {
              return init__9651
            }else {
              var G__9684 = j__9649 + 1;
              var G__9685 = init__9651;
              j__9649 = G__9684;
              init__9650 = G__9685;
              continue
            }
          }else {
            step_init__9645[0] = len__9648;
            step_init__9645[1] = init__9650;
            return init__9650
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9652)) {
        return cljs.core.deref.call(null, init__9652)
      }else {
        var G__9686 = i__9646 + step_init__9645[0];
        i__9646 = G__9686;
        continue
      }
    }else {
      return step_init__9645[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9653 = this;
  if(this__9653.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9654 = this__9653.tail.slice();
    new_tail__9654.push(o);
    return new cljs.core.PersistentVector(this__9653.meta, this__9653.cnt + 1, this__9653.shift, this__9653.root, new_tail__9654, null)
  }else {
    var root_overflow_QMARK___9655 = this__9653.cnt >>> 5 > 1 << this__9653.shift;
    var new_shift__9656 = root_overflow_QMARK___9655 ? this__9653.shift + 5 : this__9653.shift;
    var new_root__9658 = root_overflow_QMARK___9655 ? function() {
      var n_r__9657 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9657, 0, this__9653.root);
      cljs.core.pv_aset.call(null, n_r__9657, 1, cljs.core.new_path.call(null, null, this__9653.shift, new cljs.core.VectorNode(null, this__9653.tail)));
      return n_r__9657
    }() : cljs.core.push_tail.call(null, coll, this__9653.shift, this__9653.root, new cljs.core.VectorNode(null, this__9653.tail));
    return new cljs.core.PersistentVector(this__9653.meta, this__9653.cnt + 1, new_shift__9656, new_root__9658, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9659 = this;
  if(this__9659.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9659.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9660 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9661 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9662 = this;
  var this__9663 = this;
  return cljs.core.pr_str.call(null, this__9663)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9664 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9665 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9666 = this;
  if(this__9666.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9667 = this;
  return this__9667.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9668 = this;
  if(this__9668.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9668.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9669 = this;
  if(this__9669.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9669.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9669.meta)
    }else {
      if(1 < this__9669.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9669.meta, this__9669.cnt - 1, this__9669.shift, this__9669.root, this__9669.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9670 = cljs.core.array_for.call(null, coll, this__9669.cnt - 2);
          var nr__9671 = cljs.core.pop_tail.call(null, coll, this__9669.shift, this__9669.root);
          var new_root__9672 = nr__9671 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9671;
          var cnt_1__9673 = this__9669.cnt - 1;
          if(function() {
            var and__3822__auto____9674 = 5 < this__9669.shift;
            if(and__3822__auto____9674) {
              return cljs.core.pv_aget.call(null, new_root__9672, 1) == null
            }else {
              return and__3822__auto____9674
            }
          }()) {
            return new cljs.core.PersistentVector(this__9669.meta, cnt_1__9673, this__9669.shift - 5, cljs.core.pv_aget.call(null, new_root__9672, 0), new_tail__9670, null)
          }else {
            return new cljs.core.PersistentVector(this__9669.meta, cnt_1__9673, this__9669.shift, new_root__9672, new_tail__9670, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9675 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9676 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9677 = this;
  return new cljs.core.PersistentVector(meta, this__9677.cnt, this__9677.shift, this__9677.root, this__9677.tail, this__9677.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9678 = this;
  return this__9678.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9679 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9680 = this;
  if(function() {
    var and__3822__auto____9681 = 0 <= n;
    if(and__3822__auto____9681) {
      return n < this__9680.cnt
    }else {
      return and__3822__auto____9681
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9682 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9682.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9687 = xs.length;
  var xs__9688 = no_clone === true ? xs : xs.slice();
  if(l__9687 < 32) {
    return new cljs.core.PersistentVector(null, l__9687, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9688, null)
  }else {
    var node__9689 = xs__9688.slice(0, 32);
    var v__9690 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9689, null);
    var i__9691 = 32;
    var out__9692 = cljs.core._as_transient.call(null, v__9690);
    while(true) {
      if(i__9691 < l__9687) {
        var G__9693 = i__9691 + 1;
        var G__9694 = cljs.core.conj_BANG_.call(null, out__9692, xs__9688[i__9691]);
        i__9691 = G__9693;
        out__9692 = G__9694;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9692)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9695) {
    var args = cljs.core.seq(arglist__9695);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9696 = this;
  if(this__9696.off + 1 < this__9696.node.length) {
    var s__9697 = cljs.core.chunked_seq.call(null, this__9696.vec, this__9696.node, this__9696.i, this__9696.off + 1);
    if(s__9697 == null) {
      return null
    }else {
      return s__9697
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9698 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9699 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9700 = this;
  return this__9700.node[this__9700.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9701 = this;
  if(this__9701.off + 1 < this__9701.node.length) {
    var s__9702 = cljs.core.chunked_seq.call(null, this__9701.vec, this__9701.node, this__9701.i, this__9701.off + 1);
    if(s__9702 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9702
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9703 = this;
  var l__9704 = this__9703.node.length;
  var s__9705 = this__9703.i + l__9704 < cljs.core._count.call(null, this__9703.vec) ? cljs.core.chunked_seq.call(null, this__9703.vec, this__9703.i + l__9704, 0) : null;
  if(s__9705 == null) {
    return null
  }else {
    return s__9705
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9706 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9707 = this;
  return cljs.core.chunked_seq.call(null, this__9707.vec, this__9707.node, this__9707.i, this__9707.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9708 = this;
  return this__9708.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9709 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9709.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9710 = this;
  return cljs.core.array_chunk.call(null, this__9710.node, this__9710.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9711 = this;
  var l__9712 = this__9711.node.length;
  var s__9713 = this__9711.i + l__9712 < cljs.core._count.call(null, this__9711.vec) ? cljs.core.chunked_seq.call(null, this__9711.vec, this__9711.i + l__9712, 0) : null;
  if(s__9713 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9713
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9716 = this;
  var h__2192__auto____9717 = this__9716.__hash;
  if(!(h__2192__auto____9717 == null)) {
    return h__2192__auto____9717
  }else {
    var h__2192__auto____9718 = cljs.core.hash_coll.call(null, coll);
    this__9716.__hash = h__2192__auto____9718;
    return h__2192__auto____9718
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9719 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9720 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9721 = this;
  var v_pos__9722 = this__9721.start + key;
  return new cljs.core.Subvec(this__9721.meta, cljs.core._assoc.call(null, this__9721.v, v_pos__9722, val), this__9721.start, this__9721.end > v_pos__9722 + 1 ? this__9721.end : v_pos__9722 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9748 = null;
  var G__9748__2 = function(this_sym9723, k) {
    var this__9725 = this;
    var this_sym9723__9726 = this;
    var coll__9727 = this_sym9723__9726;
    return coll__9727.cljs$core$ILookup$_lookup$arity$2(coll__9727, k)
  };
  var G__9748__3 = function(this_sym9724, k, not_found) {
    var this__9725 = this;
    var this_sym9724__9728 = this;
    var coll__9729 = this_sym9724__9728;
    return coll__9729.cljs$core$ILookup$_lookup$arity$3(coll__9729, k, not_found)
  };
  G__9748 = function(this_sym9724, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9748__2.call(this, this_sym9724, k);
      case 3:
        return G__9748__3.call(this, this_sym9724, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9748
}();
cljs.core.Subvec.prototype.apply = function(this_sym9714, args9715) {
  var this__9730 = this;
  return this_sym9714.call.apply(this_sym9714, [this_sym9714].concat(args9715.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9731 = this;
  return new cljs.core.Subvec(this__9731.meta, cljs.core._assoc_n.call(null, this__9731.v, this__9731.end, o), this__9731.start, this__9731.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9732 = this;
  var this__9733 = this;
  return cljs.core.pr_str.call(null, this__9733)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9734 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9735 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9736 = this;
  var subvec_seq__9737 = function subvec_seq(i) {
    if(i === this__9736.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9736.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9737.call(null, this__9736.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9738 = this;
  return this__9738.end - this__9738.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9739 = this;
  return cljs.core._nth.call(null, this__9739.v, this__9739.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9740 = this;
  if(this__9740.start === this__9740.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9740.meta, this__9740.v, this__9740.start, this__9740.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9741 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9742 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9743 = this;
  return new cljs.core.Subvec(meta, this__9743.v, this__9743.start, this__9743.end, this__9743.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9744 = this;
  return this__9744.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9745 = this;
  return cljs.core._nth.call(null, this__9745.v, this__9745.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9746 = this;
  return cljs.core._nth.call(null, this__9746.v, this__9746.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9747 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9747.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9750 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9750, 0, tl.length);
  return ret__9750
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9754 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9755 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9754, subidx__9755, level === 5 ? tail_node : function() {
    var child__9756 = cljs.core.pv_aget.call(null, ret__9754, subidx__9755);
    if(!(child__9756 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9756, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9754
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9761 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9762 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9763 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9761, subidx__9762));
    if(function() {
      var and__3822__auto____9764 = new_child__9763 == null;
      if(and__3822__auto____9764) {
        return subidx__9762 === 0
      }else {
        return and__3822__auto____9764
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9761, subidx__9762, new_child__9763);
      return node__9761
    }
  }else {
    if(subidx__9762 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9761, subidx__9762, null);
        return node__9761
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9769 = 0 <= i;
    if(and__3822__auto____9769) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9769
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9770 = tv.root;
      var node__9771 = root__9770;
      var level__9772 = tv.shift;
      while(true) {
        if(level__9772 > 0) {
          var G__9773 = cljs.core.tv_ensure_editable.call(null, root__9770.edit, cljs.core.pv_aget.call(null, node__9771, i >>> level__9772 & 31));
          var G__9774 = level__9772 - 5;
          node__9771 = G__9773;
          level__9772 = G__9774;
          continue
        }else {
          return node__9771.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9814 = null;
  var G__9814__2 = function(this_sym9777, k) {
    var this__9779 = this;
    var this_sym9777__9780 = this;
    var coll__9781 = this_sym9777__9780;
    return coll__9781.cljs$core$ILookup$_lookup$arity$2(coll__9781, k)
  };
  var G__9814__3 = function(this_sym9778, k, not_found) {
    var this__9779 = this;
    var this_sym9778__9782 = this;
    var coll__9783 = this_sym9778__9782;
    return coll__9783.cljs$core$ILookup$_lookup$arity$3(coll__9783, k, not_found)
  };
  G__9814 = function(this_sym9778, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9814__2.call(this, this_sym9778, k);
      case 3:
        return G__9814__3.call(this, this_sym9778, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9814
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9775, args9776) {
  var this__9784 = this;
  return this_sym9775.call.apply(this_sym9775, [this_sym9775].concat(args9776.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9785 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9786 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9787 = this;
  if(this__9787.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9788 = this;
  if(function() {
    var and__3822__auto____9789 = 0 <= n;
    if(and__3822__auto____9789) {
      return n < this__9788.cnt
    }else {
      return and__3822__auto____9789
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9790 = this;
  if(this__9790.root.edit) {
    return this__9790.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9791 = this;
  if(this__9791.root.edit) {
    if(function() {
      var and__3822__auto____9792 = 0 <= n;
      if(and__3822__auto____9792) {
        return n < this__9791.cnt
      }else {
        return and__3822__auto____9792
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9791.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9797 = function go(level, node) {
          var node__9795 = cljs.core.tv_ensure_editable.call(null, this__9791.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9795, n & 31, val);
            return node__9795
          }else {
            var subidx__9796 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9795, subidx__9796, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9795, subidx__9796)));
            return node__9795
          }
        }.call(null, this__9791.shift, this__9791.root);
        this__9791.root = new_root__9797;
        return tcoll
      }
    }else {
      if(n === this__9791.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9791.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9798 = this;
  if(this__9798.root.edit) {
    if(this__9798.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9798.cnt) {
        this__9798.cnt = 0;
        return tcoll
      }else {
        if((this__9798.cnt - 1 & 31) > 0) {
          this__9798.cnt = this__9798.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9799 = cljs.core.editable_array_for.call(null, tcoll, this__9798.cnt - 2);
            var new_root__9801 = function() {
              var nr__9800 = cljs.core.tv_pop_tail.call(null, tcoll, this__9798.shift, this__9798.root);
              if(!(nr__9800 == null)) {
                return nr__9800
              }else {
                return new cljs.core.VectorNode(this__9798.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9802 = 5 < this__9798.shift;
              if(and__3822__auto____9802) {
                return cljs.core.pv_aget.call(null, new_root__9801, 1) == null
              }else {
                return and__3822__auto____9802
              }
            }()) {
              var new_root__9803 = cljs.core.tv_ensure_editable.call(null, this__9798.root.edit, cljs.core.pv_aget.call(null, new_root__9801, 0));
              this__9798.root = new_root__9803;
              this__9798.shift = this__9798.shift - 5;
              this__9798.cnt = this__9798.cnt - 1;
              this__9798.tail = new_tail__9799;
              return tcoll
            }else {
              this__9798.root = new_root__9801;
              this__9798.cnt = this__9798.cnt - 1;
              this__9798.tail = new_tail__9799;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9804 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9805 = this;
  if(this__9805.root.edit) {
    if(this__9805.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9805.tail[this__9805.cnt & 31] = o;
      this__9805.cnt = this__9805.cnt + 1;
      return tcoll
    }else {
      var tail_node__9806 = new cljs.core.VectorNode(this__9805.root.edit, this__9805.tail);
      var new_tail__9807 = cljs.core.make_array.call(null, 32);
      new_tail__9807[0] = o;
      this__9805.tail = new_tail__9807;
      if(this__9805.cnt >>> 5 > 1 << this__9805.shift) {
        var new_root_array__9808 = cljs.core.make_array.call(null, 32);
        var new_shift__9809 = this__9805.shift + 5;
        new_root_array__9808[0] = this__9805.root;
        new_root_array__9808[1] = cljs.core.new_path.call(null, this__9805.root.edit, this__9805.shift, tail_node__9806);
        this__9805.root = new cljs.core.VectorNode(this__9805.root.edit, new_root_array__9808);
        this__9805.shift = new_shift__9809;
        this__9805.cnt = this__9805.cnt + 1;
        return tcoll
      }else {
        var new_root__9810 = cljs.core.tv_push_tail.call(null, tcoll, this__9805.shift, this__9805.root, tail_node__9806);
        this__9805.root = new_root__9810;
        this__9805.cnt = this__9805.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9811 = this;
  if(this__9811.root.edit) {
    this__9811.root.edit = null;
    var len__9812 = this__9811.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9813 = cljs.core.make_array.call(null, len__9812);
    cljs.core.array_copy.call(null, this__9811.tail, 0, trimmed_tail__9813, 0, len__9812);
    return new cljs.core.PersistentVector(null, this__9811.cnt, this__9811.shift, this__9811.root, trimmed_tail__9813, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9815 = this;
  var h__2192__auto____9816 = this__9815.__hash;
  if(!(h__2192__auto____9816 == null)) {
    return h__2192__auto____9816
  }else {
    var h__2192__auto____9817 = cljs.core.hash_coll.call(null, coll);
    this__9815.__hash = h__2192__auto____9817;
    return h__2192__auto____9817
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9818 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9819 = this;
  var this__9820 = this;
  return cljs.core.pr_str.call(null, this__9820)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9821 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9822 = this;
  return cljs.core._first.call(null, this__9822.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9823 = this;
  var temp__3971__auto____9824 = cljs.core.next.call(null, this__9823.front);
  if(temp__3971__auto____9824) {
    var f1__9825 = temp__3971__auto____9824;
    return new cljs.core.PersistentQueueSeq(this__9823.meta, f1__9825, this__9823.rear, null)
  }else {
    if(this__9823.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9823.meta, this__9823.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9826 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9827 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9827.front, this__9827.rear, this__9827.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9828 = this;
  return this__9828.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9829 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9829.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9830 = this;
  var h__2192__auto____9831 = this__9830.__hash;
  if(!(h__2192__auto____9831 == null)) {
    return h__2192__auto____9831
  }else {
    var h__2192__auto____9832 = cljs.core.hash_coll.call(null, coll);
    this__9830.__hash = h__2192__auto____9832;
    return h__2192__auto____9832
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9833 = this;
  if(cljs.core.truth_(this__9833.front)) {
    return new cljs.core.PersistentQueue(this__9833.meta, this__9833.count + 1, this__9833.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9834 = this__9833.rear;
      if(cljs.core.truth_(or__3824__auto____9834)) {
        return or__3824__auto____9834
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9833.meta, this__9833.count + 1, cljs.core.conj.call(null, this__9833.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9835 = this;
  var this__9836 = this;
  return cljs.core.pr_str.call(null, this__9836)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9837 = this;
  var rear__9838 = cljs.core.seq.call(null, this__9837.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9839 = this__9837.front;
    if(cljs.core.truth_(or__3824__auto____9839)) {
      return or__3824__auto____9839
    }else {
      return rear__9838
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9837.front, cljs.core.seq.call(null, rear__9838), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9840 = this;
  return this__9840.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9841 = this;
  return cljs.core._first.call(null, this__9841.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9842 = this;
  if(cljs.core.truth_(this__9842.front)) {
    var temp__3971__auto____9843 = cljs.core.next.call(null, this__9842.front);
    if(temp__3971__auto____9843) {
      var f1__9844 = temp__3971__auto____9843;
      return new cljs.core.PersistentQueue(this__9842.meta, this__9842.count - 1, f1__9844, this__9842.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9842.meta, this__9842.count - 1, cljs.core.seq.call(null, this__9842.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9845 = this;
  return cljs.core.first.call(null, this__9845.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9846 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9847 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9848 = this;
  return new cljs.core.PersistentQueue(meta, this__9848.count, this__9848.front, this__9848.rear, this__9848.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9849 = this;
  return this__9849.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9850 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9851 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9854 = array.length;
  var i__9855 = 0;
  while(true) {
    if(i__9855 < len__9854) {
      if(k === array[i__9855]) {
        return i__9855
      }else {
        var G__9856 = i__9855 + incr;
        i__9855 = G__9856;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9859 = cljs.core.hash.call(null, a);
  var b__9860 = cljs.core.hash.call(null, b);
  if(a__9859 < b__9860) {
    return-1
  }else {
    if(a__9859 > b__9860) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9868 = m.keys;
  var len__9869 = ks__9868.length;
  var so__9870 = m.strobj;
  var out__9871 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9872 = 0;
  var out__9873 = cljs.core.transient$.call(null, out__9871);
  while(true) {
    if(i__9872 < len__9869) {
      var k__9874 = ks__9868[i__9872];
      var G__9875 = i__9872 + 1;
      var G__9876 = cljs.core.assoc_BANG_.call(null, out__9873, k__9874, so__9870[k__9874]);
      i__9872 = G__9875;
      out__9873 = G__9876;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9873, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9882 = {};
  var l__9883 = ks.length;
  var i__9884 = 0;
  while(true) {
    if(i__9884 < l__9883) {
      var k__9885 = ks[i__9884];
      new_obj__9882[k__9885] = obj[k__9885];
      var G__9886 = i__9884 + 1;
      i__9884 = G__9886;
      continue
    }else {
    }
    break
  }
  return new_obj__9882
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9889 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9890 = this;
  var h__2192__auto____9891 = this__9890.__hash;
  if(!(h__2192__auto____9891 == null)) {
    return h__2192__auto____9891
  }else {
    var h__2192__auto____9892 = cljs.core.hash_imap.call(null, coll);
    this__9890.__hash = h__2192__auto____9892;
    return h__2192__auto____9892
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9893 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9894 = this;
  if(function() {
    var and__3822__auto____9895 = goog.isString(k);
    if(and__3822__auto____9895) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9894.keys) == null)
    }else {
      return and__3822__auto____9895
    }
  }()) {
    return this__9894.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9896 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9897 = this__9896.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9897) {
        return or__3824__auto____9897
      }else {
        return this__9896.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9896.keys) == null)) {
        var new_strobj__9898 = cljs.core.obj_clone.call(null, this__9896.strobj, this__9896.keys);
        new_strobj__9898[k] = v;
        return new cljs.core.ObjMap(this__9896.meta, this__9896.keys, new_strobj__9898, this__9896.update_count + 1, null)
      }else {
        var new_strobj__9899 = cljs.core.obj_clone.call(null, this__9896.strobj, this__9896.keys);
        var new_keys__9900 = this__9896.keys.slice();
        new_strobj__9899[k] = v;
        new_keys__9900.push(k);
        return new cljs.core.ObjMap(this__9896.meta, new_keys__9900, new_strobj__9899, this__9896.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9901 = this;
  if(function() {
    var and__3822__auto____9902 = goog.isString(k);
    if(and__3822__auto____9902) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9901.keys) == null)
    }else {
      return and__3822__auto____9902
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9924 = null;
  var G__9924__2 = function(this_sym9903, k) {
    var this__9905 = this;
    var this_sym9903__9906 = this;
    var coll__9907 = this_sym9903__9906;
    return coll__9907.cljs$core$ILookup$_lookup$arity$2(coll__9907, k)
  };
  var G__9924__3 = function(this_sym9904, k, not_found) {
    var this__9905 = this;
    var this_sym9904__9908 = this;
    var coll__9909 = this_sym9904__9908;
    return coll__9909.cljs$core$ILookup$_lookup$arity$3(coll__9909, k, not_found)
  };
  G__9924 = function(this_sym9904, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9924__2.call(this, this_sym9904, k);
      case 3:
        return G__9924__3.call(this, this_sym9904, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9924
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9887, args9888) {
  var this__9910 = this;
  return this_sym9887.call.apply(this_sym9887, [this_sym9887].concat(args9888.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9911 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9912 = this;
  var this__9913 = this;
  return cljs.core.pr_str.call(null, this__9913)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9914 = this;
  if(this__9914.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9877_SHARP_) {
      return cljs.core.vector.call(null, p1__9877_SHARP_, this__9914.strobj[p1__9877_SHARP_])
    }, this__9914.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9915 = this;
  return this__9915.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9916 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9917 = this;
  return new cljs.core.ObjMap(meta, this__9917.keys, this__9917.strobj, this__9917.update_count, this__9917.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9918 = this;
  return this__9918.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9919 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9919.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9920 = this;
  if(function() {
    var and__3822__auto____9921 = goog.isString(k);
    if(and__3822__auto____9921) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9920.keys) == null)
    }else {
      return and__3822__auto____9921
    }
  }()) {
    var new_keys__9922 = this__9920.keys.slice();
    var new_strobj__9923 = cljs.core.obj_clone.call(null, this__9920.strobj, this__9920.keys);
    new_keys__9922.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9922), 1);
    cljs.core.js_delete.call(null, new_strobj__9923, k);
    return new cljs.core.ObjMap(this__9920.meta, new_keys__9922, new_strobj__9923, this__9920.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9928 = this;
  var h__2192__auto____9929 = this__9928.__hash;
  if(!(h__2192__auto____9929 == null)) {
    return h__2192__auto____9929
  }else {
    var h__2192__auto____9930 = cljs.core.hash_imap.call(null, coll);
    this__9928.__hash = h__2192__auto____9930;
    return h__2192__auto____9930
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9931 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9932 = this;
  var bucket__9933 = this__9932.hashobj[cljs.core.hash.call(null, k)];
  var i__9934 = cljs.core.truth_(bucket__9933) ? cljs.core.scan_array.call(null, 2, k, bucket__9933) : null;
  if(cljs.core.truth_(i__9934)) {
    return bucket__9933[i__9934 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9935 = this;
  var h__9936 = cljs.core.hash.call(null, k);
  var bucket__9937 = this__9935.hashobj[h__9936];
  if(cljs.core.truth_(bucket__9937)) {
    var new_bucket__9938 = bucket__9937.slice();
    var new_hashobj__9939 = goog.object.clone(this__9935.hashobj);
    new_hashobj__9939[h__9936] = new_bucket__9938;
    var temp__3971__auto____9940 = cljs.core.scan_array.call(null, 2, k, new_bucket__9938);
    if(cljs.core.truth_(temp__3971__auto____9940)) {
      var i__9941 = temp__3971__auto____9940;
      new_bucket__9938[i__9941 + 1] = v;
      return new cljs.core.HashMap(this__9935.meta, this__9935.count, new_hashobj__9939, null)
    }else {
      new_bucket__9938.push(k, v);
      return new cljs.core.HashMap(this__9935.meta, this__9935.count + 1, new_hashobj__9939, null)
    }
  }else {
    var new_hashobj__9942 = goog.object.clone(this__9935.hashobj);
    new_hashobj__9942[h__9936] = [k, v];
    return new cljs.core.HashMap(this__9935.meta, this__9935.count + 1, new_hashobj__9942, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9943 = this;
  var bucket__9944 = this__9943.hashobj[cljs.core.hash.call(null, k)];
  var i__9945 = cljs.core.truth_(bucket__9944) ? cljs.core.scan_array.call(null, 2, k, bucket__9944) : null;
  if(cljs.core.truth_(i__9945)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9970 = null;
  var G__9970__2 = function(this_sym9946, k) {
    var this__9948 = this;
    var this_sym9946__9949 = this;
    var coll__9950 = this_sym9946__9949;
    return coll__9950.cljs$core$ILookup$_lookup$arity$2(coll__9950, k)
  };
  var G__9970__3 = function(this_sym9947, k, not_found) {
    var this__9948 = this;
    var this_sym9947__9951 = this;
    var coll__9952 = this_sym9947__9951;
    return coll__9952.cljs$core$ILookup$_lookup$arity$3(coll__9952, k, not_found)
  };
  G__9970 = function(this_sym9947, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9970__2.call(this, this_sym9947, k);
      case 3:
        return G__9970__3.call(this, this_sym9947, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9970
}();
cljs.core.HashMap.prototype.apply = function(this_sym9926, args9927) {
  var this__9953 = this;
  return this_sym9926.call.apply(this_sym9926, [this_sym9926].concat(args9927.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9954 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9955 = this;
  var this__9956 = this;
  return cljs.core.pr_str.call(null, this__9956)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9957 = this;
  if(this__9957.count > 0) {
    var hashes__9958 = cljs.core.js_keys.call(null, this__9957.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9925_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9957.hashobj[p1__9925_SHARP_]))
    }, hashes__9958)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9959 = this;
  return this__9959.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9960 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9961 = this;
  return new cljs.core.HashMap(meta, this__9961.count, this__9961.hashobj, this__9961.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9962 = this;
  return this__9962.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9963 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9963.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9964 = this;
  var h__9965 = cljs.core.hash.call(null, k);
  var bucket__9966 = this__9964.hashobj[h__9965];
  var i__9967 = cljs.core.truth_(bucket__9966) ? cljs.core.scan_array.call(null, 2, k, bucket__9966) : null;
  if(cljs.core.not.call(null, i__9967)) {
    return coll
  }else {
    var new_hashobj__9968 = goog.object.clone(this__9964.hashobj);
    if(3 > bucket__9966.length) {
      cljs.core.js_delete.call(null, new_hashobj__9968, h__9965)
    }else {
      var new_bucket__9969 = bucket__9966.slice();
      new_bucket__9969.splice(i__9967, 2);
      new_hashobj__9968[h__9965] = new_bucket__9969
    }
    return new cljs.core.HashMap(this__9964.meta, this__9964.count - 1, new_hashobj__9968, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9971 = ks.length;
  var i__9972 = 0;
  var out__9973 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9972 < len__9971) {
      var G__9974 = i__9972 + 1;
      var G__9975 = cljs.core.assoc.call(null, out__9973, ks[i__9972], vs[i__9972]);
      i__9972 = G__9974;
      out__9973 = G__9975;
      continue
    }else {
      return out__9973
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9979 = m.arr;
  var len__9980 = arr__9979.length;
  var i__9981 = 0;
  while(true) {
    if(len__9980 <= i__9981) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9979[i__9981], k)) {
        return i__9981
      }else {
        if("\ufdd0'else") {
          var G__9982 = i__9981 + 2;
          i__9981 = G__9982;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9985 = this;
  return new cljs.core.TransientArrayMap({}, this__9985.arr.length, this__9985.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9986 = this;
  var h__2192__auto____9987 = this__9986.__hash;
  if(!(h__2192__auto____9987 == null)) {
    return h__2192__auto____9987
  }else {
    var h__2192__auto____9988 = cljs.core.hash_imap.call(null, coll);
    this__9986.__hash = h__2192__auto____9988;
    return h__2192__auto____9988
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9989 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9990 = this;
  var idx__9991 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9991 === -1) {
    return not_found
  }else {
    return this__9990.arr[idx__9991 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9992 = this;
  var idx__9993 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9993 === -1) {
    if(this__9992.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9992.meta, this__9992.cnt + 1, function() {
        var G__9994__9995 = this__9992.arr.slice();
        G__9994__9995.push(k);
        G__9994__9995.push(v);
        return G__9994__9995
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9992.arr[idx__9993 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9992.meta, this__9992.cnt, function() {
          var G__9996__9997 = this__9992.arr.slice();
          G__9996__9997[idx__9993 + 1] = v;
          return G__9996__9997
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9998 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10030 = null;
  var G__10030__2 = function(this_sym9999, k) {
    var this__10001 = this;
    var this_sym9999__10002 = this;
    var coll__10003 = this_sym9999__10002;
    return coll__10003.cljs$core$ILookup$_lookup$arity$2(coll__10003, k)
  };
  var G__10030__3 = function(this_sym10000, k, not_found) {
    var this__10001 = this;
    var this_sym10000__10004 = this;
    var coll__10005 = this_sym10000__10004;
    return coll__10005.cljs$core$ILookup$_lookup$arity$3(coll__10005, k, not_found)
  };
  G__10030 = function(this_sym10000, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10030__2.call(this, this_sym10000, k);
      case 3:
        return G__10030__3.call(this, this_sym10000, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10030
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9983, args9984) {
  var this__10006 = this;
  return this_sym9983.call.apply(this_sym9983, [this_sym9983].concat(args9984.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10007 = this;
  var len__10008 = this__10007.arr.length;
  var i__10009 = 0;
  var init__10010 = init;
  while(true) {
    if(i__10009 < len__10008) {
      var init__10011 = f.call(null, init__10010, this__10007.arr[i__10009], this__10007.arr[i__10009 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10011)) {
        return cljs.core.deref.call(null, init__10011)
      }else {
        var G__10031 = i__10009 + 2;
        var G__10032 = init__10011;
        i__10009 = G__10031;
        init__10010 = G__10032;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10012 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10013 = this;
  var this__10014 = this;
  return cljs.core.pr_str.call(null, this__10014)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10015 = this;
  if(this__10015.cnt > 0) {
    var len__10016 = this__10015.arr.length;
    var array_map_seq__10017 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10016) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10015.arr[i], this__10015.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10017.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10018 = this;
  return this__10018.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10019 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10020 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10020.cnt, this__10020.arr, this__10020.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10021 = this;
  return this__10021.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10022 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10022.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10023 = this;
  var idx__10024 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10024 >= 0) {
    var len__10025 = this__10023.arr.length;
    var new_len__10026 = len__10025 - 2;
    if(new_len__10026 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10027 = cljs.core.make_array.call(null, new_len__10026);
      var s__10028 = 0;
      var d__10029 = 0;
      while(true) {
        if(s__10028 >= len__10025) {
          return new cljs.core.PersistentArrayMap(this__10023.meta, this__10023.cnt - 1, new_arr__10027, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10023.arr[s__10028])) {
            var G__10033 = s__10028 + 2;
            var G__10034 = d__10029;
            s__10028 = G__10033;
            d__10029 = G__10034;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10027[d__10029] = this__10023.arr[s__10028];
              new_arr__10027[d__10029 + 1] = this__10023.arr[s__10028 + 1];
              var G__10035 = s__10028 + 2;
              var G__10036 = d__10029 + 2;
              s__10028 = G__10035;
              d__10029 = G__10036;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10037 = cljs.core.count.call(null, ks);
  var i__10038 = 0;
  var out__10039 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10038 < len__10037) {
      var G__10040 = i__10038 + 1;
      var G__10041 = cljs.core.assoc_BANG_.call(null, out__10039, ks[i__10038], vs[i__10038]);
      i__10038 = G__10040;
      out__10039 = G__10041;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10039)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10042 = this;
  if(cljs.core.truth_(this__10042.editable_QMARK_)) {
    var idx__10043 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10043 >= 0) {
      this__10042.arr[idx__10043] = this__10042.arr[this__10042.len - 2];
      this__10042.arr[idx__10043 + 1] = this__10042.arr[this__10042.len - 1];
      var G__10044__10045 = this__10042.arr;
      G__10044__10045.pop();
      G__10044__10045.pop();
      G__10044__10045;
      this__10042.len = this__10042.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10046 = this;
  if(cljs.core.truth_(this__10046.editable_QMARK_)) {
    var idx__10047 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10047 === -1) {
      if(this__10046.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10046.len = this__10046.len + 2;
        this__10046.arr.push(key);
        this__10046.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10046.len, this__10046.arr), key, val)
      }
    }else {
      if(val === this__10046.arr[idx__10047 + 1]) {
        return tcoll
      }else {
        this__10046.arr[idx__10047 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10048 = this;
  if(cljs.core.truth_(this__10048.editable_QMARK_)) {
    if(function() {
      var G__10049__10050 = o;
      if(G__10049__10050) {
        if(function() {
          var or__3824__auto____10051 = G__10049__10050.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10051) {
            return or__3824__auto____10051
          }else {
            return G__10049__10050.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10049__10050.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10049__10050)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10049__10050)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10052 = cljs.core.seq.call(null, o);
      var tcoll__10053 = tcoll;
      while(true) {
        var temp__3971__auto____10054 = cljs.core.first.call(null, es__10052);
        if(cljs.core.truth_(temp__3971__auto____10054)) {
          var e__10055 = temp__3971__auto____10054;
          var G__10061 = cljs.core.next.call(null, es__10052);
          var G__10062 = tcoll__10053.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10053, cljs.core.key.call(null, e__10055), cljs.core.val.call(null, e__10055));
          es__10052 = G__10061;
          tcoll__10053 = G__10062;
          continue
        }else {
          return tcoll__10053
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10056 = this;
  if(cljs.core.truth_(this__10056.editable_QMARK_)) {
    this__10056.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10056.len, 2), this__10056.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10057 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10058 = this;
  if(cljs.core.truth_(this__10058.editable_QMARK_)) {
    var idx__10059 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10059 === -1) {
      return not_found
    }else {
      return this__10058.arr[idx__10059 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10060 = this;
  if(cljs.core.truth_(this__10060.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10060.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10065 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10066 = 0;
  while(true) {
    if(i__10066 < len) {
      var G__10067 = cljs.core.assoc_BANG_.call(null, out__10065, arr[i__10066], arr[i__10066 + 1]);
      var G__10068 = i__10066 + 2;
      out__10065 = G__10067;
      i__10066 = G__10068;
      continue
    }else {
      return out__10065
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10073__10074 = arr.slice();
    G__10073__10074[i] = a;
    return G__10073__10074
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10075__10076 = arr.slice();
    G__10075__10076[i] = a;
    G__10075__10076[j] = b;
    return G__10075__10076
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10078 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10078, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10078, 2 * i, new_arr__10078.length - 2 * i);
  return new_arr__10078
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10081 = inode.ensure_editable(edit);
    editable__10081.arr[i] = a;
    return editable__10081
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10082 = inode.ensure_editable(edit);
    editable__10082.arr[i] = a;
    editable__10082.arr[j] = b;
    return editable__10082
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10089 = arr.length;
  var i__10090 = 0;
  var init__10091 = init;
  while(true) {
    if(i__10090 < len__10089) {
      var init__10094 = function() {
        var k__10092 = arr[i__10090];
        if(!(k__10092 == null)) {
          return f.call(null, init__10091, k__10092, arr[i__10090 + 1])
        }else {
          var node__10093 = arr[i__10090 + 1];
          if(!(node__10093 == null)) {
            return node__10093.kv_reduce(f, init__10091)
          }else {
            return init__10091
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10094)) {
        return cljs.core.deref.call(null, init__10094)
      }else {
        var G__10095 = i__10090 + 2;
        var G__10096 = init__10094;
        i__10090 = G__10095;
        init__10091 = G__10096;
        continue
      }
    }else {
      return init__10091
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10097 = this;
  var inode__10098 = this;
  if(this__10097.bitmap === bit) {
    return null
  }else {
    var editable__10099 = inode__10098.ensure_editable(e);
    var earr__10100 = editable__10099.arr;
    var len__10101 = earr__10100.length;
    editable__10099.bitmap = bit ^ editable__10099.bitmap;
    cljs.core.array_copy.call(null, earr__10100, 2 * (i + 1), earr__10100, 2 * i, len__10101 - 2 * (i + 1));
    earr__10100[len__10101 - 2] = null;
    earr__10100[len__10101 - 1] = null;
    return editable__10099
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10102 = this;
  var inode__10103 = this;
  var bit__10104 = 1 << (hash >>> shift & 31);
  var idx__10105 = cljs.core.bitmap_indexed_node_index.call(null, this__10102.bitmap, bit__10104);
  if((this__10102.bitmap & bit__10104) === 0) {
    var n__10106 = cljs.core.bit_count.call(null, this__10102.bitmap);
    if(2 * n__10106 < this__10102.arr.length) {
      var editable__10107 = inode__10103.ensure_editable(edit);
      var earr__10108 = editable__10107.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10108, 2 * idx__10105, earr__10108, 2 * (idx__10105 + 1), 2 * (n__10106 - idx__10105));
      earr__10108[2 * idx__10105] = key;
      earr__10108[2 * idx__10105 + 1] = val;
      editable__10107.bitmap = editable__10107.bitmap | bit__10104;
      return editable__10107
    }else {
      if(n__10106 >= 16) {
        var nodes__10109 = cljs.core.make_array.call(null, 32);
        var jdx__10110 = hash >>> shift & 31;
        nodes__10109[jdx__10110] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10111 = 0;
        var j__10112 = 0;
        while(true) {
          if(i__10111 < 32) {
            if((this__10102.bitmap >>> i__10111 & 1) === 0) {
              var G__10165 = i__10111 + 1;
              var G__10166 = j__10112;
              i__10111 = G__10165;
              j__10112 = G__10166;
              continue
            }else {
              nodes__10109[i__10111] = !(this__10102.arr[j__10112] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10102.arr[j__10112]), this__10102.arr[j__10112], this__10102.arr[j__10112 + 1], added_leaf_QMARK_) : this__10102.arr[j__10112 + 1];
              var G__10167 = i__10111 + 1;
              var G__10168 = j__10112 + 2;
              i__10111 = G__10167;
              j__10112 = G__10168;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10106 + 1, nodes__10109)
      }else {
        if("\ufdd0'else") {
          var new_arr__10113 = cljs.core.make_array.call(null, 2 * (n__10106 + 4));
          cljs.core.array_copy.call(null, this__10102.arr, 0, new_arr__10113, 0, 2 * idx__10105);
          new_arr__10113[2 * idx__10105] = key;
          new_arr__10113[2 * idx__10105 + 1] = val;
          cljs.core.array_copy.call(null, this__10102.arr, 2 * idx__10105, new_arr__10113, 2 * (idx__10105 + 1), 2 * (n__10106 - idx__10105));
          added_leaf_QMARK_.val = true;
          var editable__10114 = inode__10103.ensure_editable(edit);
          editable__10114.arr = new_arr__10113;
          editable__10114.bitmap = editable__10114.bitmap | bit__10104;
          return editable__10114
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10115 = this__10102.arr[2 * idx__10105];
    var val_or_node__10116 = this__10102.arr[2 * idx__10105 + 1];
    if(key_or_nil__10115 == null) {
      var n__10117 = val_or_node__10116.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10117 === val_or_node__10116) {
        return inode__10103
      }else {
        return cljs.core.edit_and_set.call(null, inode__10103, edit, 2 * idx__10105 + 1, n__10117)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10115)) {
        if(val === val_or_node__10116) {
          return inode__10103
        }else {
          return cljs.core.edit_and_set.call(null, inode__10103, edit, 2 * idx__10105 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10103, edit, 2 * idx__10105, null, 2 * idx__10105 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10115, val_or_node__10116, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10118 = this;
  var inode__10119 = this;
  return cljs.core.create_inode_seq.call(null, this__10118.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10120 = this;
  var inode__10121 = this;
  var bit__10122 = 1 << (hash >>> shift & 31);
  if((this__10120.bitmap & bit__10122) === 0) {
    return inode__10121
  }else {
    var idx__10123 = cljs.core.bitmap_indexed_node_index.call(null, this__10120.bitmap, bit__10122);
    var key_or_nil__10124 = this__10120.arr[2 * idx__10123];
    var val_or_node__10125 = this__10120.arr[2 * idx__10123 + 1];
    if(key_or_nil__10124 == null) {
      var n__10126 = val_or_node__10125.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10126 === val_or_node__10125) {
        return inode__10121
      }else {
        if(!(n__10126 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10121, edit, 2 * idx__10123 + 1, n__10126)
        }else {
          if(this__10120.bitmap === bit__10122) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10121.edit_and_remove_pair(edit, bit__10122, idx__10123)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10124)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10121.edit_and_remove_pair(edit, bit__10122, idx__10123)
      }else {
        if("\ufdd0'else") {
          return inode__10121
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10127 = this;
  var inode__10128 = this;
  if(e === this__10127.edit) {
    return inode__10128
  }else {
    var n__10129 = cljs.core.bit_count.call(null, this__10127.bitmap);
    var new_arr__10130 = cljs.core.make_array.call(null, n__10129 < 0 ? 4 : 2 * (n__10129 + 1));
    cljs.core.array_copy.call(null, this__10127.arr, 0, new_arr__10130, 0, 2 * n__10129);
    return new cljs.core.BitmapIndexedNode(e, this__10127.bitmap, new_arr__10130)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10131 = this;
  var inode__10132 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10131.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10133 = this;
  var inode__10134 = this;
  var bit__10135 = 1 << (hash >>> shift & 31);
  if((this__10133.bitmap & bit__10135) === 0) {
    return not_found
  }else {
    var idx__10136 = cljs.core.bitmap_indexed_node_index.call(null, this__10133.bitmap, bit__10135);
    var key_or_nil__10137 = this__10133.arr[2 * idx__10136];
    var val_or_node__10138 = this__10133.arr[2 * idx__10136 + 1];
    if(key_or_nil__10137 == null) {
      return val_or_node__10138.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10137)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10137, val_or_node__10138], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10139 = this;
  var inode__10140 = this;
  var bit__10141 = 1 << (hash >>> shift & 31);
  if((this__10139.bitmap & bit__10141) === 0) {
    return inode__10140
  }else {
    var idx__10142 = cljs.core.bitmap_indexed_node_index.call(null, this__10139.bitmap, bit__10141);
    var key_or_nil__10143 = this__10139.arr[2 * idx__10142];
    var val_or_node__10144 = this__10139.arr[2 * idx__10142 + 1];
    if(key_or_nil__10143 == null) {
      var n__10145 = val_or_node__10144.inode_without(shift + 5, hash, key);
      if(n__10145 === val_or_node__10144) {
        return inode__10140
      }else {
        if(!(n__10145 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10139.bitmap, cljs.core.clone_and_set.call(null, this__10139.arr, 2 * idx__10142 + 1, n__10145))
        }else {
          if(this__10139.bitmap === bit__10141) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10139.bitmap ^ bit__10141, cljs.core.remove_pair.call(null, this__10139.arr, idx__10142))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10143)) {
        return new cljs.core.BitmapIndexedNode(null, this__10139.bitmap ^ bit__10141, cljs.core.remove_pair.call(null, this__10139.arr, idx__10142))
      }else {
        if("\ufdd0'else") {
          return inode__10140
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10146 = this;
  var inode__10147 = this;
  var bit__10148 = 1 << (hash >>> shift & 31);
  var idx__10149 = cljs.core.bitmap_indexed_node_index.call(null, this__10146.bitmap, bit__10148);
  if((this__10146.bitmap & bit__10148) === 0) {
    var n__10150 = cljs.core.bit_count.call(null, this__10146.bitmap);
    if(n__10150 >= 16) {
      var nodes__10151 = cljs.core.make_array.call(null, 32);
      var jdx__10152 = hash >>> shift & 31;
      nodes__10151[jdx__10152] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10153 = 0;
      var j__10154 = 0;
      while(true) {
        if(i__10153 < 32) {
          if((this__10146.bitmap >>> i__10153 & 1) === 0) {
            var G__10169 = i__10153 + 1;
            var G__10170 = j__10154;
            i__10153 = G__10169;
            j__10154 = G__10170;
            continue
          }else {
            nodes__10151[i__10153] = !(this__10146.arr[j__10154] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10146.arr[j__10154]), this__10146.arr[j__10154], this__10146.arr[j__10154 + 1], added_leaf_QMARK_) : this__10146.arr[j__10154 + 1];
            var G__10171 = i__10153 + 1;
            var G__10172 = j__10154 + 2;
            i__10153 = G__10171;
            j__10154 = G__10172;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10150 + 1, nodes__10151)
    }else {
      var new_arr__10155 = cljs.core.make_array.call(null, 2 * (n__10150 + 1));
      cljs.core.array_copy.call(null, this__10146.arr, 0, new_arr__10155, 0, 2 * idx__10149);
      new_arr__10155[2 * idx__10149] = key;
      new_arr__10155[2 * idx__10149 + 1] = val;
      cljs.core.array_copy.call(null, this__10146.arr, 2 * idx__10149, new_arr__10155, 2 * (idx__10149 + 1), 2 * (n__10150 - idx__10149));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10146.bitmap | bit__10148, new_arr__10155)
    }
  }else {
    var key_or_nil__10156 = this__10146.arr[2 * idx__10149];
    var val_or_node__10157 = this__10146.arr[2 * idx__10149 + 1];
    if(key_or_nil__10156 == null) {
      var n__10158 = val_or_node__10157.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10158 === val_or_node__10157) {
        return inode__10147
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10146.bitmap, cljs.core.clone_and_set.call(null, this__10146.arr, 2 * idx__10149 + 1, n__10158))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10156)) {
        if(val === val_or_node__10157) {
          return inode__10147
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10146.bitmap, cljs.core.clone_and_set.call(null, this__10146.arr, 2 * idx__10149 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10146.bitmap, cljs.core.clone_and_set.call(null, this__10146.arr, 2 * idx__10149, null, 2 * idx__10149 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10156, val_or_node__10157, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10159 = this;
  var inode__10160 = this;
  var bit__10161 = 1 << (hash >>> shift & 31);
  if((this__10159.bitmap & bit__10161) === 0) {
    return not_found
  }else {
    var idx__10162 = cljs.core.bitmap_indexed_node_index.call(null, this__10159.bitmap, bit__10161);
    var key_or_nil__10163 = this__10159.arr[2 * idx__10162];
    var val_or_node__10164 = this__10159.arr[2 * idx__10162 + 1];
    if(key_or_nil__10163 == null) {
      return val_or_node__10164.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10163)) {
        return val_or_node__10164
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10180 = array_node.arr;
  var len__10181 = 2 * (array_node.cnt - 1);
  var new_arr__10182 = cljs.core.make_array.call(null, len__10181);
  var i__10183 = 0;
  var j__10184 = 1;
  var bitmap__10185 = 0;
  while(true) {
    if(i__10183 < len__10181) {
      if(function() {
        var and__3822__auto____10186 = !(i__10183 === idx);
        if(and__3822__auto____10186) {
          return!(arr__10180[i__10183] == null)
        }else {
          return and__3822__auto____10186
        }
      }()) {
        new_arr__10182[j__10184] = arr__10180[i__10183];
        var G__10187 = i__10183 + 1;
        var G__10188 = j__10184 + 2;
        var G__10189 = bitmap__10185 | 1 << i__10183;
        i__10183 = G__10187;
        j__10184 = G__10188;
        bitmap__10185 = G__10189;
        continue
      }else {
        var G__10190 = i__10183 + 1;
        var G__10191 = j__10184;
        var G__10192 = bitmap__10185;
        i__10183 = G__10190;
        j__10184 = G__10191;
        bitmap__10185 = G__10192;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10185, new_arr__10182)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10193 = this;
  var inode__10194 = this;
  var idx__10195 = hash >>> shift & 31;
  var node__10196 = this__10193.arr[idx__10195];
  if(node__10196 == null) {
    var editable__10197 = cljs.core.edit_and_set.call(null, inode__10194, edit, idx__10195, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10197.cnt = editable__10197.cnt + 1;
    return editable__10197
  }else {
    var n__10198 = node__10196.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10198 === node__10196) {
      return inode__10194
    }else {
      return cljs.core.edit_and_set.call(null, inode__10194, edit, idx__10195, n__10198)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10199 = this;
  var inode__10200 = this;
  return cljs.core.create_array_node_seq.call(null, this__10199.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10201 = this;
  var inode__10202 = this;
  var idx__10203 = hash >>> shift & 31;
  var node__10204 = this__10201.arr[idx__10203];
  if(node__10204 == null) {
    return inode__10202
  }else {
    var n__10205 = node__10204.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10205 === node__10204) {
      return inode__10202
    }else {
      if(n__10205 == null) {
        if(this__10201.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10202, edit, idx__10203)
        }else {
          var editable__10206 = cljs.core.edit_and_set.call(null, inode__10202, edit, idx__10203, n__10205);
          editable__10206.cnt = editable__10206.cnt - 1;
          return editable__10206
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10202, edit, idx__10203, n__10205)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10207 = this;
  var inode__10208 = this;
  if(e === this__10207.edit) {
    return inode__10208
  }else {
    return new cljs.core.ArrayNode(e, this__10207.cnt, this__10207.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10209 = this;
  var inode__10210 = this;
  var len__10211 = this__10209.arr.length;
  var i__10212 = 0;
  var init__10213 = init;
  while(true) {
    if(i__10212 < len__10211) {
      var node__10214 = this__10209.arr[i__10212];
      if(!(node__10214 == null)) {
        var init__10215 = node__10214.kv_reduce(f, init__10213);
        if(cljs.core.reduced_QMARK_.call(null, init__10215)) {
          return cljs.core.deref.call(null, init__10215)
        }else {
          var G__10234 = i__10212 + 1;
          var G__10235 = init__10215;
          i__10212 = G__10234;
          init__10213 = G__10235;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10213
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10216 = this;
  var inode__10217 = this;
  var idx__10218 = hash >>> shift & 31;
  var node__10219 = this__10216.arr[idx__10218];
  if(!(node__10219 == null)) {
    return node__10219.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10220 = this;
  var inode__10221 = this;
  var idx__10222 = hash >>> shift & 31;
  var node__10223 = this__10220.arr[idx__10222];
  if(!(node__10223 == null)) {
    var n__10224 = node__10223.inode_without(shift + 5, hash, key);
    if(n__10224 === node__10223) {
      return inode__10221
    }else {
      if(n__10224 == null) {
        if(this__10220.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10221, null, idx__10222)
        }else {
          return new cljs.core.ArrayNode(null, this__10220.cnt - 1, cljs.core.clone_and_set.call(null, this__10220.arr, idx__10222, n__10224))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10220.cnt, cljs.core.clone_and_set.call(null, this__10220.arr, idx__10222, n__10224))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10221
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10225 = this;
  var inode__10226 = this;
  var idx__10227 = hash >>> shift & 31;
  var node__10228 = this__10225.arr[idx__10227];
  if(node__10228 == null) {
    return new cljs.core.ArrayNode(null, this__10225.cnt + 1, cljs.core.clone_and_set.call(null, this__10225.arr, idx__10227, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10229 = node__10228.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10229 === node__10228) {
      return inode__10226
    }else {
      return new cljs.core.ArrayNode(null, this__10225.cnt, cljs.core.clone_and_set.call(null, this__10225.arr, idx__10227, n__10229))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10230 = this;
  var inode__10231 = this;
  var idx__10232 = hash >>> shift & 31;
  var node__10233 = this__10230.arr[idx__10232];
  if(!(node__10233 == null)) {
    return node__10233.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10238 = 2 * cnt;
  var i__10239 = 0;
  while(true) {
    if(i__10239 < lim__10238) {
      if(cljs.core.key_test.call(null, key, arr[i__10239])) {
        return i__10239
      }else {
        var G__10240 = i__10239 + 2;
        i__10239 = G__10240;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10241 = this;
  var inode__10242 = this;
  if(hash === this__10241.collision_hash) {
    var idx__10243 = cljs.core.hash_collision_node_find_index.call(null, this__10241.arr, this__10241.cnt, key);
    if(idx__10243 === -1) {
      if(this__10241.arr.length > 2 * this__10241.cnt) {
        var editable__10244 = cljs.core.edit_and_set.call(null, inode__10242, edit, 2 * this__10241.cnt, key, 2 * this__10241.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10244.cnt = editable__10244.cnt + 1;
        return editable__10244
      }else {
        var len__10245 = this__10241.arr.length;
        var new_arr__10246 = cljs.core.make_array.call(null, len__10245 + 2);
        cljs.core.array_copy.call(null, this__10241.arr, 0, new_arr__10246, 0, len__10245);
        new_arr__10246[len__10245] = key;
        new_arr__10246[len__10245 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10242.ensure_editable_array(edit, this__10241.cnt + 1, new_arr__10246)
      }
    }else {
      if(this__10241.arr[idx__10243 + 1] === val) {
        return inode__10242
      }else {
        return cljs.core.edit_and_set.call(null, inode__10242, edit, idx__10243 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10241.collision_hash >>> shift & 31), [null, inode__10242, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10247 = this;
  var inode__10248 = this;
  return cljs.core.create_inode_seq.call(null, this__10247.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10249 = this;
  var inode__10250 = this;
  var idx__10251 = cljs.core.hash_collision_node_find_index.call(null, this__10249.arr, this__10249.cnt, key);
  if(idx__10251 === -1) {
    return inode__10250
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10249.cnt === 1) {
      return null
    }else {
      var editable__10252 = inode__10250.ensure_editable(edit);
      var earr__10253 = editable__10252.arr;
      earr__10253[idx__10251] = earr__10253[2 * this__10249.cnt - 2];
      earr__10253[idx__10251 + 1] = earr__10253[2 * this__10249.cnt - 1];
      earr__10253[2 * this__10249.cnt - 1] = null;
      earr__10253[2 * this__10249.cnt - 2] = null;
      editable__10252.cnt = editable__10252.cnt - 1;
      return editable__10252
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10254 = this;
  var inode__10255 = this;
  if(e === this__10254.edit) {
    return inode__10255
  }else {
    var new_arr__10256 = cljs.core.make_array.call(null, 2 * (this__10254.cnt + 1));
    cljs.core.array_copy.call(null, this__10254.arr, 0, new_arr__10256, 0, 2 * this__10254.cnt);
    return new cljs.core.HashCollisionNode(e, this__10254.collision_hash, this__10254.cnt, new_arr__10256)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10257 = this;
  var inode__10258 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10257.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10259 = this;
  var inode__10260 = this;
  var idx__10261 = cljs.core.hash_collision_node_find_index.call(null, this__10259.arr, this__10259.cnt, key);
  if(idx__10261 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10259.arr[idx__10261])) {
      return cljs.core.PersistentVector.fromArray([this__10259.arr[idx__10261], this__10259.arr[idx__10261 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10262 = this;
  var inode__10263 = this;
  var idx__10264 = cljs.core.hash_collision_node_find_index.call(null, this__10262.arr, this__10262.cnt, key);
  if(idx__10264 === -1) {
    return inode__10263
  }else {
    if(this__10262.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10262.collision_hash, this__10262.cnt - 1, cljs.core.remove_pair.call(null, this__10262.arr, cljs.core.quot.call(null, idx__10264, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10265 = this;
  var inode__10266 = this;
  if(hash === this__10265.collision_hash) {
    var idx__10267 = cljs.core.hash_collision_node_find_index.call(null, this__10265.arr, this__10265.cnt, key);
    if(idx__10267 === -1) {
      var len__10268 = this__10265.arr.length;
      var new_arr__10269 = cljs.core.make_array.call(null, len__10268 + 2);
      cljs.core.array_copy.call(null, this__10265.arr, 0, new_arr__10269, 0, len__10268);
      new_arr__10269[len__10268] = key;
      new_arr__10269[len__10268 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10265.collision_hash, this__10265.cnt + 1, new_arr__10269)
    }else {
      if(cljs.core._EQ_.call(null, this__10265.arr[idx__10267], val)) {
        return inode__10266
      }else {
        return new cljs.core.HashCollisionNode(null, this__10265.collision_hash, this__10265.cnt, cljs.core.clone_and_set.call(null, this__10265.arr, idx__10267 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10265.collision_hash >>> shift & 31), [null, inode__10266])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10270 = this;
  var inode__10271 = this;
  var idx__10272 = cljs.core.hash_collision_node_find_index.call(null, this__10270.arr, this__10270.cnt, key);
  if(idx__10272 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10270.arr[idx__10272])) {
      return this__10270.arr[idx__10272 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10273 = this;
  var inode__10274 = this;
  if(e === this__10273.edit) {
    this__10273.arr = array;
    this__10273.cnt = count;
    return inode__10274
  }else {
    return new cljs.core.HashCollisionNode(this__10273.edit, this__10273.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10279 = cljs.core.hash.call(null, key1);
    if(key1hash__10279 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10279, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10280 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10279, key1, val1, added_leaf_QMARK___10280).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10280)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10281 = cljs.core.hash.call(null, key1);
    if(key1hash__10281 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10281, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10282 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10281, key1, val1, added_leaf_QMARK___10282).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10282)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10283 = this;
  var h__2192__auto____10284 = this__10283.__hash;
  if(!(h__2192__auto____10284 == null)) {
    return h__2192__auto____10284
  }else {
    var h__2192__auto____10285 = cljs.core.hash_coll.call(null, coll);
    this__10283.__hash = h__2192__auto____10285;
    return h__2192__auto____10285
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10286 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10287 = this;
  var this__10288 = this;
  return cljs.core.pr_str.call(null, this__10288)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10289 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10290 = this;
  if(this__10290.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10290.nodes[this__10290.i], this__10290.nodes[this__10290.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10290.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10291 = this;
  if(this__10291.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10291.nodes, this__10291.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10291.nodes, this__10291.i, cljs.core.next.call(null, this__10291.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10292 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10293 = this;
  return new cljs.core.NodeSeq(meta, this__10293.nodes, this__10293.i, this__10293.s, this__10293.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10294 = this;
  return this__10294.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10295 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10295.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10302 = nodes.length;
      var j__10303 = i;
      while(true) {
        if(j__10303 < len__10302) {
          if(!(nodes[j__10303] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10303, null, null)
          }else {
            var temp__3971__auto____10304 = nodes[j__10303 + 1];
            if(cljs.core.truth_(temp__3971__auto____10304)) {
              var node__10305 = temp__3971__auto____10304;
              var temp__3971__auto____10306 = node__10305.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10306)) {
                var node_seq__10307 = temp__3971__auto____10306;
                return new cljs.core.NodeSeq(null, nodes, j__10303 + 2, node_seq__10307, null)
              }else {
                var G__10308 = j__10303 + 2;
                j__10303 = G__10308;
                continue
              }
            }else {
              var G__10309 = j__10303 + 2;
              j__10303 = G__10309;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10310 = this;
  var h__2192__auto____10311 = this__10310.__hash;
  if(!(h__2192__auto____10311 == null)) {
    return h__2192__auto____10311
  }else {
    var h__2192__auto____10312 = cljs.core.hash_coll.call(null, coll);
    this__10310.__hash = h__2192__auto____10312;
    return h__2192__auto____10312
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10313 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10314 = this;
  var this__10315 = this;
  return cljs.core.pr_str.call(null, this__10315)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10316 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10317 = this;
  return cljs.core.first.call(null, this__10317.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10318 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10318.nodes, this__10318.i, cljs.core.next.call(null, this__10318.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10319 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10320 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10320.nodes, this__10320.i, this__10320.s, this__10320.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10321 = this;
  return this__10321.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10322 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10322.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10329 = nodes.length;
      var j__10330 = i;
      while(true) {
        if(j__10330 < len__10329) {
          var temp__3971__auto____10331 = nodes[j__10330];
          if(cljs.core.truth_(temp__3971__auto____10331)) {
            var nj__10332 = temp__3971__auto____10331;
            var temp__3971__auto____10333 = nj__10332.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10333)) {
              var ns__10334 = temp__3971__auto____10333;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10330 + 1, ns__10334, null)
            }else {
              var G__10335 = j__10330 + 1;
              j__10330 = G__10335;
              continue
            }
          }else {
            var G__10336 = j__10330 + 1;
            j__10330 = G__10336;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10339 = this;
  return new cljs.core.TransientHashMap({}, this__10339.root, this__10339.cnt, this__10339.has_nil_QMARK_, this__10339.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10340 = this;
  var h__2192__auto____10341 = this__10340.__hash;
  if(!(h__2192__auto____10341 == null)) {
    return h__2192__auto____10341
  }else {
    var h__2192__auto____10342 = cljs.core.hash_imap.call(null, coll);
    this__10340.__hash = h__2192__auto____10342;
    return h__2192__auto____10342
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10343 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10344 = this;
  if(k == null) {
    if(this__10344.has_nil_QMARK_) {
      return this__10344.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10344.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10344.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10345 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10346 = this__10345.has_nil_QMARK_;
      if(and__3822__auto____10346) {
        return v === this__10345.nil_val
      }else {
        return and__3822__auto____10346
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10345.meta, this__10345.has_nil_QMARK_ ? this__10345.cnt : this__10345.cnt + 1, this__10345.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10347 = new cljs.core.Box(false);
    var new_root__10348 = (this__10345.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10345.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10347);
    if(new_root__10348 === this__10345.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10345.meta, added_leaf_QMARK___10347.val ? this__10345.cnt + 1 : this__10345.cnt, new_root__10348, this__10345.has_nil_QMARK_, this__10345.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10349 = this;
  if(k == null) {
    return this__10349.has_nil_QMARK_
  }else {
    if(this__10349.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10349.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10372 = null;
  var G__10372__2 = function(this_sym10350, k) {
    var this__10352 = this;
    var this_sym10350__10353 = this;
    var coll__10354 = this_sym10350__10353;
    return coll__10354.cljs$core$ILookup$_lookup$arity$2(coll__10354, k)
  };
  var G__10372__3 = function(this_sym10351, k, not_found) {
    var this__10352 = this;
    var this_sym10351__10355 = this;
    var coll__10356 = this_sym10351__10355;
    return coll__10356.cljs$core$ILookup$_lookup$arity$3(coll__10356, k, not_found)
  };
  G__10372 = function(this_sym10351, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10372__2.call(this, this_sym10351, k);
      case 3:
        return G__10372__3.call(this, this_sym10351, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10372
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10337, args10338) {
  var this__10357 = this;
  return this_sym10337.call.apply(this_sym10337, [this_sym10337].concat(args10338.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10358 = this;
  var init__10359 = this__10358.has_nil_QMARK_ ? f.call(null, init, null, this__10358.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10359)) {
    return cljs.core.deref.call(null, init__10359)
  }else {
    if(!(this__10358.root == null)) {
      return this__10358.root.kv_reduce(f, init__10359)
    }else {
      if("\ufdd0'else") {
        return init__10359
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10360 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10361 = this;
  var this__10362 = this;
  return cljs.core.pr_str.call(null, this__10362)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10363 = this;
  if(this__10363.cnt > 0) {
    var s__10364 = !(this__10363.root == null) ? this__10363.root.inode_seq() : null;
    if(this__10363.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10363.nil_val], true), s__10364)
    }else {
      return s__10364
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10365 = this;
  return this__10365.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10366 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10367 = this;
  return new cljs.core.PersistentHashMap(meta, this__10367.cnt, this__10367.root, this__10367.has_nil_QMARK_, this__10367.nil_val, this__10367.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10368 = this;
  return this__10368.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10369 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10369.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10370 = this;
  if(k == null) {
    if(this__10370.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10370.meta, this__10370.cnt - 1, this__10370.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10370.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10371 = this__10370.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10371 === this__10370.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10370.meta, this__10370.cnt - 1, new_root__10371, this__10370.has_nil_QMARK_, this__10370.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10373 = ks.length;
  var i__10374 = 0;
  var out__10375 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10374 < len__10373) {
      var G__10376 = i__10374 + 1;
      var G__10377 = cljs.core.assoc_BANG_.call(null, out__10375, ks[i__10374], vs[i__10374]);
      i__10374 = G__10376;
      out__10375 = G__10377;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10375)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10378 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10379 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10380 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10381 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10382 = this;
  if(k == null) {
    if(this__10382.has_nil_QMARK_) {
      return this__10382.nil_val
    }else {
      return null
    }
  }else {
    if(this__10382.root == null) {
      return null
    }else {
      return this__10382.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10383 = this;
  if(k == null) {
    if(this__10383.has_nil_QMARK_) {
      return this__10383.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10383.root == null) {
      return not_found
    }else {
      return this__10383.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10384 = this;
  if(this__10384.edit) {
    return this__10384.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10385 = this;
  var tcoll__10386 = this;
  if(this__10385.edit) {
    if(function() {
      var G__10387__10388 = o;
      if(G__10387__10388) {
        if(function() {
          var or__3824__auto____10389 = G__10387__10388.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10389) {
            return or__3824__auto____10389
          }else {
            return G__10387__10388.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10387__10388.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10387__10388)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10387__10388)
      }
    }()) {
      return tcoll__10386.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10390 = cljs.core.seq.call(null, o);
      var tcoll__10391 = tcoll__10386;
      while(true) {
        var temp__3971__auto____10392 = cljs.core.first.call(null, es__10390);
        if(cljs.core.truth_(temp__3971__auto____10392)) {
          var e__10393 = temp__3971__auto____10392;
          var G__10404 = cljs.core.next.call(null, es__10390);
          var G__10405 = tcoll__10391.assoc_BANG_(cljs.core.key.call(null, e__10393), cljs.core.val.call(null, e__10393));
          es__10390 = G__10404;
          tcoll__10391 = G__10405;
          continue
        }else {
          return tcoll__10391
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10394 = this;
  var tcoll__10395 = this;
  if(this__10394.edit) {
    if(k == null) {
      if(this__10394.nil_val === v) {
      }else {
        this__10394.nil_val = v
      }
      if(this__10394.has_nil_QMARK_) {
      }else {
        this__10394.count = this__10394.count + 1;
        this__10394.has_nil_QMARK_ = true
      }
      return tcoll__10395
    }else {
      var added_leaf_QMARK___10396 = new cljs.core.Box(false);
      var node__10397 = (this__10394.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10394.root).inode_assoc_BANG_(this__10394.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10396);
      if(node__10397 === this__10394.root) {
      }else {
        this__10394.root = node__10397
      }
      if(added_leaf_QMARK___10396.val) {
        this__10394.count = this__10394.count + 1
      }else {
      }
      return tcoll__10395
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10398 = this;
  var tcoll__10399 = this;
  if(this__10398.edit) {
    if(k == null) {
      if(this__10398.has_nil_QMARK_) {
        this__10398.has_nil_QMARK_ = false;
        this__10398.nil_val = null;
        this__10398.count = this__10398.count - 1;
        return tcoll__10399
      }else {
        return tcoll__10399
      }
    }else {
      if(this__10398.root == null) {
        return tcoll__10399
      }else {
        var removed_leaf_QMARK___10400 = new cljs.core.Box(false);
        var node__10401 = this__10398.root.inode_without_BANG_(this__10398.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10400);
        if(node__10401 === this__10398.root) {
        }else {
          this__10398.root = node__10401
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10400[0])) {
          this__10398.count = this__10398.count - 1
        }else {
        }
        return tcoll__10399
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10402 = this;
  var tcoll__10403 = this;
  if(this__10402.edit) {
    this__10402.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10402.count, this__10402.root, this__10402.has_nil_QMARK_, this__10402.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10408 = node;
  var stack__10409 = stack;
  while(true) {
    if(!(t__10408 == null)) {
      var G__10410 = ascending_QMARK_ ? t__10408.left : t__10408.right;
      var G__10411 = cljs.core.conj.call(null, stack__10409, t__10408);
      t__10408 = G__10410;
      stack__10409 = G__10411;
      continue
    }else {
      return stack__10409
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10412 = this;
  var h__2192__auto____10413 = this__10412.__hash;
  if(!(h__2192__auto____10413 == null)) {
    return h__2192__auto____10413
  }else {
    var h__2192__auto____10414 = cljs.core.hash_coll.call(null, coll);
    this__10412.__hash = h__2192__auto____10414;
    return h__2192__auto____10414
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10415 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10416 = this;
  var this__10417 = this;
  return cljs.core.pr_str.call(null, this__10417)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10418 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10419 = this;
  if(this__10419.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10419.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10420 = this;
  return cljs.core.peek.call(null, this__10420.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10421 = this;
  var t__10422 = cljs.core.first.call(null, this__10421.stack);
  var next_stack__10423 = cljs.core.tree_map_seq_push.call(null, this__10421.ascending_QMARK_ ? t__10422.right : t__10422.left, cljs.core.next.call(null, this__10421.stack), this__10421.ascending_QMARK_);
  if(!(next_stack__10423 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10423, this__10421.ascending_QMARK_, this__10421.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10424 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10425 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10425.stack, this__10425.ascending_QMARK_, this__10425.cnt, this__10425.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10426 = this;
  return this__10426.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10428 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10428) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10428
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10430 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10430) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10430
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10434 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10434)) {
    return cljs.core.deref.call(null, init__10434)
  }else {
    var init__10435 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10434) : init__10434;
    if(cljs.core.reduced_QMARK_.call(null, init__10435)) {
      return cljs.core.deref.call(null, init__10435)
    }else {
      var init__10436 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10435) : init__10435;
      if(cljs.core.reduced_QMARK_.call(null, init__10436)) {
        return cljs.core.deref.call(null, init__10436)
      }else {
        return init__10436
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10439 = this;
  var h__2192__auto____10440 = this__10439.__hash;
  if(!(h__2192__auto____10440 == null)) {
    return h__2192__auto____10440
  }else {
    var h__2192__auto____10441 = cljs.core.hash_coll.call(null, coll);
    this__10439.__hash = h__2192__auto____10441;
    return h__2192__auto____10441
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10442 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10443 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10444 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10444.key, this__10444.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10492 = null;
  var G__10492__2 = function(this_sym10445, k) {
    var this__10447 = this;
    var this_sym10445__10448 = this;
    var node__10449 = this_sym10445__10448;
    return node__10449.cljs$core$ILookup$_lookup$arity$2(node__10449, k)
  };
  var G__10492__3 = function(this_sym10446, k, not_found) {
    var this__10447 = this;
    var this_sym10446__10450 = this;
    var node__10451 = this_sym10446__10450;
    return node__10451.cljs$core$ILookup$_lookup$arity$3(node__10451, k, not_found)
  };
  G__10492 = function(this_sym10446, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10492__2.call(this, this_sym10446, k);
      case 3:
        return G__10492__3.call(this, this_sym10446, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10492
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10437, args10438) {
  var this__10452 = this;
  return this_sym10437.call.apply(this_sym10437, [this_sym10437].concat(args10438.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10453 = this;
  return cljs.core.PersistentVector.fromArray([this__10453.key, this__10453.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10454 = this;
  return this__10454.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10455 = this;
  return this__10455.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10456 = this;
  var node__10457 = this;
  return ins.balance_right(node__10457)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10458 = this;
  var node__10459 = this;
  return new cljs.core.RedNode(this__10458.key, this__10458.val, this__10458.left, this__10458.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10460 = this;
  var node__10461 = this;
  return cljs.core.balance_right_del.call(null, this__10460.key, this__10460.val, this__10460.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10462 = this;
  var node__10463 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10464 = this;
  var node__10465 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10465, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10466 = this;
  var node__10467 = this;
  return cljs.core.balance_left_del.call(null, this__10466.key, this__10466.val, del, this__10466.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10468 = this;
  var node__10469 = this;
  return ins.balance_left(node__10469)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10470 = this;
  var node__10471 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10471, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10493 = null;
  var G__10493__0 = function() {
    var this__10472 = this;
    var this__10474 = this;
    return cljs.core.pr_str.call(null, this__10474)
  };
  G__10493 = function() {
    switch(arguments.length) {
      case 0:
        return G__10493__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10493
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10475 = this;
  var node__10476 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10476, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10477 = this;
  var node__10478 = this;
  return node__10478
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10479 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10480 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10481 = this;
  return cljs.core.list.call(null, this__10481.key, this__10481.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10482 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10483 = this;
  return this__10483.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10484 = this;
  return cljs.core.PersistentVector.fromArray([this__10484.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10485 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10485.key, this__10485.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10486 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10487 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10487.key, this__10487.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10488 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10489 = this;
  if(n === 0) {
    return this__10489.key
  }else {
    if(n === 1) {
      return this__10489.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10490 = this;
  if(n === 0) {
    return this__10490.key
  }else {
    if(n === 1) {
      return this__10490.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10491 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10496 = this;
  var h__2192__auto____10497 = this__10496.__hash;
  if(!(h__2192__auto____10497 == null)) {
    return h__2192__auto____10497
  }else {
    var h__2192__auto____10498 = cljs.core.hash_coll.call(null, coll);
    this__10496.__hash = h__2192__auto____10498;
    return h__2192__auto____10498
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10499 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10500 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10501 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10501.key, this__10501.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10549 = null;
  var G__10549__2 = function(this_sym10502, k) {
    var this__10504 = this;
    var this_sym10502__10505 = this;
    var node__10506 = this_sym10502__10505;
    return node__10506.cljs$core$ILookup$_lookup$arity$2(node__10506, k)
  };
  var G__10549__3 = function(this_sym10503, k, not_found) {
    var this__10504 = this;
    var this_sym10503__10507 = this;
    var node__10508 = this_sym10503__10507;
    return node__10508.cljs$core$ILookup$_lookup$arity$3(node__10508, k, not_found)
  };
  G__10549 = function(this_sym10503, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10549__2.call(this, this_sym10503, k);
      case 3:
        return G__10549__3.call(this, this_sym10503, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10549
}();
cljs.core.RedNode.prototype.apply = function(this_sym10494, args10495) {
  var this__10509 = this;
  return this_sym10494.call.apply(this_sym10494, [this_sym10494].concat(args10495.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10510 = this;
  return cljs.core.PersistentVector.fromArray([this__10510.key, this__10510.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10511 = this;
  return this__10511.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10512 = this;
  return this__10512.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10513 = this;
  var node__10514 = this;
  return new cljs.core.RedNode(this__10513.key, this__10513.val, this__10513.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10515 = this;
  var node__10516 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10517 = this;
  var node__10518 = this;
  return new cljs.core.RedNode(this__10517.key, this__10517.val, this__10517.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10519 = this;
  var node__10520 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10521 = this;
  var node__10522 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10522, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10523 = this;
  var node__10524 = this;
  return new cljs.core.RedNode(this__10523.key, this__10523.val, del, this__10523.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10525 = this;
  var node__10526 = this;
  return new cljs.core.RedNode(this__10525.key, this__10525.val, ins, this__10525.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10527 = this;
  var node__10528 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10527.left)) {
    return new cljs.core.RedNode(this__10527.key, this__10527.val, this__10527.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10527.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10527.right)) {
      return new cljs.core.RedNode(this__10527.right.key, this__10527.right.val, new cljs.core.BlackNode(this__10527.key, this__10527.val, this__10527.left, this__10527.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10527.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10528, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10550 = null;
  var G__10550__0 = function() {
    var this__10529 = this;
    var this__10531 = this;
    return cljs.core.pr_str.call(null, this__10531)
  };
  G__10550 = function() {
    switch(arguments.length) {
      case 0:
        return G__10550__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10550
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10532 = this;
  var node__10533 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10532.right)) {
    return new cljs.core.RedNode(this__10532.key, this__10532.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10532.left, null), this__10532.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10532.left)) {
      return new cljs.core.RedNode(this__10532.left.key, this__10532.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10532.left.left, null), new cljs.core.BlackNode(this__10532.key, this__10532.val, this__10532.left.right, this__10532.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10533, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10534 = this;
  var node__10535 = this;
  return new cljs.core.BlackNode(this__10534.key, this__10534.val, this__10534.left, this__10534.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10536 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10537 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10538 = this;
  return cljs.core.list.call(null, this__10538.key, this__10538.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10539 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10540 = this;
  return this__10540.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10541 = this;
  return cljs.core.PersistentVector.fromArray([this__10541.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10542 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10542.key, this__10542.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10543 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10544 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10544.key, this__10544.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10545 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10546 = this;
  if(n === 0) {
    return this__10546.key
  }else {
    if(n === 1) {
      return this__10546.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10547 = this;
  if(n === 0) {
    return this__10547.key
  }else {
    if(n === 1) {
      return this__10547.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10548 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10554 = comp.call(null, k, tree.key);
    if(c__10554 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10554 < 0) {
        var ins__10555 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10555 == null)) {
          return tree.add_left(ins__10555)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10556 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10556 == null)) {
            return tree.add_right(ins__10556)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10559 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10559)) {
            return new cljs.core.RedNode(app__10559.key, app__10559.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10559.left, null), new cljs.core.RedNode(right.key, right.val, app__10559.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10559, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10560 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10560)) {
              return new cljs.core.RedNode(app__10560.key, app__10560.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10560.left, null), new cljs.core.BlackNode(right.key, right.val, app__10560.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10560, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10566 = comp.call(null, k, tree.key);
    if(c__10566 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10566 < 0) {
        var del__10567 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10568 = !(del__10567 == null);
          if(or__3824__auto____10568) {
            return or__3824__auto____10568
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10567, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10567, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10569 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10570 = !(del__10569 == null);
            if(or__3824__auto____10570) {
              return or__3824__auto____10570
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10569)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10569, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10573 = tree.key;
  var c__10574 = comp.call(null, k, tk__10573);
  if(c__10574 === 0) {
    return tree.replace(tk__10573, v, tree.left, tree.right)
  }else {
    if(c__10574 < 0) {
      return tree.replace(tk__10573, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10573, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10577 = this;
  var h__2192__auto____10578 = this__10577.__hash;
  if(!(h__2192__auto____10578 == null)) {
    return h__2192__auto____10578
  }else {
    var h__2192__auto____10579 = cljs.core.hash_imap.call(null, coll);
    this__10577.__hash = h__2192__auto____10579;
    return h__2192__auto____10579
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10580 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10581 = this;
  var n__10582 = coll.entry_at(k);
  if(!(n__10582 == null)) {
    return n__10582.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10583 = this;
  var found__10584 = [null];
  var t__10585 = cljs.core.tree_map_add.call(null, this__10583.comp, this__10583.tree, k, v, found__10584);
  if(t__10585 == null) {
    var found_node__10586 = cljs.core.nth.call(null, found__10584, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10586.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10583.comp, cljs.core.tree_map_replace.call(null, this__10583.comp, this__10583.tree, k, v), this__10583.cnt, this__10583.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10583.comp, t__10585.blacken(), this__10583.cnt + 1, this__10583.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10587 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10621 = null;
  var G__10621__2 = function(this_sym10588, k) {
    var this__10590 = this;
    var this_sym10588__10591 = this;
    var coll__10592 = this_sym10588__10591;
    return coll__10592.cljs$core$ILookup$_lookup$arity$2(coll__10592, k)
  };
  var G__10621__3 = function(this_sym10589, k, not_found) {
    var this__10590 = this;
    var this_sym10589__10593 = this;
    var coll__10594 = this_sym10589__10593;
    return coll__10594.cljs$core$ILookup$_lookup$arity$3(coll__10594, k, not_found)
  };
  G__10621 = function(this_sym10589, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10621__2.call(this, this_sym10589, k);
      case 3:
        return G__10621__3.call(this, this_sym10589, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10621
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10575, args10576) {
  var this__10595 = this;
  return this_sym10575.call.apply(this_sym10575, [this_sym10575].concat(args10576.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10596 = this;
  if(!(this__10596.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10596.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10597 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10598 = this;
  if(this__10598.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10598.tree, false, this__10598.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10599 = this;
  var this__10600 = this;
  return cljs.core.pr_str.call(null, this__10600)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10601 = this;
  var coll__10602 = this;
  var t__10603 = this__10601.tree;
  while(true) {
    if(!(t__10603 == null)) {
      var c__10604 = this__10601.comp.call(null, k, t__10603.key);
      if(c__10604 === 0) {
        return t__10603
      }else {
        if(c__10604 < 0) {
          var G__10622 = t__10603.left;
          t__10603 = G__10622;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10623 = t__10603.right;
            t__10603 = G__10623;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10605 = this;
  if(this__10605.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10605.tree, ascending_QMARK_, this__10605.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10606 = this;
  if(this__10606.cnt > 0) {
    var stack__10607 = null;
    var t__10608 = this__10606.tree;
    while(true) {
      if(!(t__10608 == null)) {
        var c__10609 = this__10606.comp.call(null, k, t__10608.key);
        if(c__10609 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10607, t__10608), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10609 < 0) {
              var G__10624 = cljs.core.conj.call(null, stack__10607, t__10608);
              var G__10625 = t__10608.left;
              stack__10607 = G__10624;
              t__10608 = G__10625;
              continue
            }else {
              var G__10626 = stack__10607;
              var G__10627 = t__10608.right;
              stack__10607 = G__10626;
              t__10608 = G__10627;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10609 > 0) {
                var G__10628 = cljs.core.conj.call(null, stack__10607, t__10608);
                var G__10629 = t__10608.right;
                stack__10607 = G__10628;
                t__10608 = G__10629;
                continue
              }else {
                var G__10630 = stack__10607;
                var G__10631 = t__10608.left;
                stack__10607 = G__10630;
                t__10608 = G__10631;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10607 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10607, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10610 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10611 = this;
  return this__10611.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10612 = this;
  if(this__10612.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10612.tree, true, this__10612.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10613 = this;
  return this__10613.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10614 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10615 = this;
  return new cljs.core.PersistentTreeMap(this__10615.comp, this__10615.tree, this__10615.cnt, meta, this__10615.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10616 = this;
  return this__10616.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10617 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10617.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10618 = this;
  var found__10619 = [null];
  var t__10620 = cljs.core.tree_map_remove.call(null, this__10618.comp, this__10618.tree, k, found__10619);
  if(t__10620 == null) {
    if(cljs.core.nth.call(null, found__10619, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10618.comp, null, 0, this__10618.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10618.comp, t__10620.blacken(), this__10618.cnt - 1, this__10618.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10634 = cljs.core.seq.call(null, keyvals);
    var out__10635 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10634) {
        var G__10636 = cljs.core.nnext.call(null, in__10634);
        var G__10637 = cljs.core.assoc_BANG_.call(null, out__10635, cljs.core.first.call(null, in__10634), cljs.core.second.call(null, in__10634));
        in__10634 = G__10636;
        out__10635 = G__10637;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10635)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10638) {
    var keyvals = cljs.core.seq(arglist__10638);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10639) {
    var keyvals = cljs.core.seq(arglist__10639);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10643 = [];
    var obj__10644 = {};
    var kvs__10645 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10645) {
        ks__10643.push(cljs.core.first.call(null, kvs__10645));
        obj__10644[cljs.core.first.call(null, kvs__10645)] = cljs.core.second.call(null, kvs__10645);
        var G__10646 = cljs.core.nnext.call(null, kvs__10645);
        kvs__10645 = G__10646;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10643, obj__10644)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10647) {
    var keyvals = cljs.core.seq(arglist__10647);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10650 = cljs.core.seq.call(null, keyvals);
    var out__10651 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10650) {
        var G__10652 = cljs.core.nnext.call(null, in__10650);
        var G__10653 = cljs.core.assoc.call(null, out__10651, cljs.core.first.call(null, in__10650), cljs.core.second.call(null, in__10650));
        in__10650 = G__10652;
        out__10651 = G__10653;
        continue
      }else {
        return out__10651
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10654) {
    var keyvals = cljs.core.seq(arglist__10654);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10657 = cljs.core.seq.call(null, keyvals);
    var out__10658 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10657) {
        var G__10659 = cljs.core.nnext.call(null, in__10657);
        var G__10660 = cljs.core.assoc.call(null, out__10658, cljs.core.first.call(null, in__10657), cljs.core.second.call(null, in__10657));
        in__10657 = G__10659;
        out__10658 = G__10660;
        continue
      }else {
        return out__10658
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10661) {
    var comparator = cljs.core.first(arglist__10661);
    var keyvals = cljs.core.rest(arglist__10661);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10662_SHARP_, p2__10663_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10665 = p1__10662_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10665)) {
            return or__3824__auto____10665
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10663_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10666) {
    var maps = cljs.core.seq(arglist__10666);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10674 = function(m, e) {
        var k__10672 = cljs.core.first.call(null, e);
        var v__10673 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10672)) {
          return cljs.core.assoc.call(null, m, k__10672, f.call(null, cljs.core._lookup.call(null, m, k__10672, null), v__10673))
        }else {
          return cljs.core.assoc.call(null, m, k__10672, v__10673)
        }
      };
      var merge2__10676 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10674, function() {
          var or__3824__auto____10675 = m1;
          if(cljs.core.truth_(or__3824__auto____10675)) {
            return or__3824__auto____10675
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10676, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10677) {
    var f = cljs.core.first(arglist__10677);
    var maps = cljs.core.rest(arglist__10677);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10682 = cljs.core.ObjMap.EMPTY;
  var keys__10683 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10683) {
      var key__10684 = cljs.core.first.call(null, keys__10683);
      var entry__10685 = cljs.core._lookup.call(null, map, key__10684, "\ufdd0'cljs.core/not-found");
      var G__10686 = cljs.core.not_EQ_.call(null, entry__10685, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10682, key__10684, entry__10685) : ret__10682;
      var G__10687 = cljs.core.next.call(null, keys__10683);
      ret__10682 = G__10686;
      keys__10683 = G__10687;
      continue
    }else {
      return ret__10682
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10691 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10691.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10692 = this;
  var h__2192__auto____10693 = this__10692.__hash;
  if(!(h__2192__auto____10693 == null)) {
    return h__2192__auto____10693
  }else {
    var h__2192__auto____10694 = cljs.core.hash_iset.call(null, coll);
    this__10692.__hash = h__2192__auto____10694;
    return h__2192__auto____10694
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10695 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10696 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10696.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10717 = null;
  var G__10717__2 = function(this_sym10697, k) {
    var this__10699 = this;
    var this_sym10697__10700 = this;
    var coll__10701 = this_sym10697__10700;
    return coll__10701.cljs$core$ILookup$_lookup$arity$2(coll__10701, k)
  };
  var G__10717__3 = function(this_sym10698, k, not_found) {
    var this__10699 = this;
    var this_sym10698__10702 = this;
    var coll__10703 = this_sym10698__10702;
    return coll__10703.cljs$core$ILookup$_lookup$arity$3(coll__10703, k, not_found)
  };
  G__10717 = function(this_sym10698, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10717__2.call(this, this_sym10698, k);
      case 3:
        return G__10717__3.call(this, this_sym10698, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10717
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10689, args10690) {
  var this__10704 = this;
  return this_sym10689.call.apply(this_sym10689, [this_sym10689].concat(args10690.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10705 = this;
  return new cljs.core.PersistentHashSet(this__10705.meta, cljs.core.assoc.call(null, this__10705.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10706 = this;
  var this__10707 = this;
  return cljs.core.pr_str.call(null, this__10707)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10708 = this;
  return cljs.core.keys.call(null, this__10708.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10709 = this;
  return new cljs.core.PersistentHashSet(this__10709.meta, cljs.core.dissoc.call(null, this__10709.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10710 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10711 = this;
  var and__3822__auto____10712 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10712) {
    var and__3822__auto____10713 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10713) {
      return cljs.core.every_QMARK_.call(null, function(p1__10688_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10688_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10713
    }
  }else {
    return and__3822__auto____10712
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10714 = this;
  return new cljs.core.PersistentHashSet(meta, this__10714.hash_map, this__10714.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10715 = this;
  return this__10715.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10716 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10716.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10718 = cljs.core.count.call(null, items);
  var i__10719 = 0;
  var out__10720 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10719 < len__10718) {
      var G__10721 = i__10719 + 1;
      var G__10722 = cljs.core.conj_BANG_.call(null, out__10720, items[i__10719]);
      i__10719 = G__10721;
      out__10720 = G__10722;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10720)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10740 = null;
  var G__10740__2 = function(this_sym10726, k) {
    var this__10728 = this;
    var this_sym10726__10729 = this;
    var tcoll__10730 = this_sym10726__10729;
    if(cljs.core._lookup.call(null, this__10728.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10740__3 = function(this_sym10727, k, not_found) {
    var this__10728 = this;
    var this_sym10727__10731 = this;
    var tcoll__10732 = this_sym10727__10731;
    if(cljs.core._lookup.call(null, this__10728.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10740 = function(this_sym10727, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10740__2.call(this, this_sym10727, k);
      case 3:
        return G__10740__3.call(this, this_sym10727, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10740
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10724, args10725) {
  var this__10733 = this;
  return this_sym10724.call.apply(this_sym10724, [this_sym10724].concat(args10725.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10734 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10735 = this;
  if(cljs.core._lookup.call(null, this__10735.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10736 = this;
  return cljs.core.count.call(null, this__10736.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10737 = this;
  this__10737.transient_map = cljs.core.dissoc_BANG_.call(null, this__10737.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10738 = this;
  this__10738.transient_map = cljs.core.assoc_BANG_.call(null, this__10738.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10739 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10739.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10743 = this;
  var h__2192__auto____10744 = this__10743.__hash;
  if(!(h__2192__auto____10744 == null)) {
    return h__2192__auto____10744
  }else {
    var h__2192__auto____10745 = cljs.core.hash_iset.call(null, coll);
    this__10743.__hash = h__2192__auto____10745;
    return h__2192__auto____10745
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10746 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10747 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10747.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10773 = null;
  var G__10773__2 = function(this_sym10748, k) {
    var this__10750 = this;
    var this_sym10748__10751 = this;
    var coll__10752 = this_sym10748__10751;
    return coll__10752.cljs$core$ILookup$_lookup$arity$2(coll__10752, k)
  };
  var G__10773__3 = function(this_sym10749, k, not_found) {
    var this__10750 = this;
    var this_sym10749__10753 = this;
    var coll__10754 = this_sym10749__10753;
    return coll__10754.cljs$core$ILookup$_lookup$arity$3(coll__10754, k, not_found)
  };
  G__10773 = function(this_sym10749, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10773__2.call(this, this_sym10749, k);
      case 3:
        return G__10773__3.call(this, this_sym10749, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10773
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10741, args10742) {
  var this__10755 = this;
  return this_sym10741.call.apply(this_sym10741, [this_sym10741].concat(args10742.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10756 = this;
  return new cljs.core.PersistentTreeSet(this__10756.meta, cljs.core.assoc.call(null, this__10756.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10757 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10757.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10758 = this;
  var this__10759 = this;
  return cljs.core.pr_str.call(null, this__10759)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10760 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10760.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10761 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10761.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10762 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10763 = this;
  return cljs.core._comparator.call(null, this__10763.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10764 = this;
  return cljs.core.keys.call(null, this__10764.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10765 = this;
  return new cljs.core.PersistentTreeSet(this__10765.meta, cljs.core.dissoc.call(null, this__10765.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10766 = this;
  return cljs.core.count.call(null, this__10766.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10767 = this;
  var and__3822__auto____10768 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10768) {
    var and__3822__auto____10769 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10769) {
      return cljs.core.every_QMARK_.call(null, function(p1__10723_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10723_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10769
    }
  }else {
    return and__3822__auto____10768
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10770 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10770.tree_map, this__10770.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10771 = this;
  return this__10771.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10772 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10772.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10778__delegate = function(keys) {
      var in__10776 = cljs.core.seq.call(null, keys);
      var out__10777 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10776)) {
          var G__10779 = cljs.core.next.call(null, in__10776);
          var G__10780 = cljs.core.conj_BANG_.call(null, out__10777, cljs.core.first.call(null, in__10776));
          in__10776 = G__10779;
          out__10777 = G__10780;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10777)
        }
        break
      }
    };
    var G__10778 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10778__delegate.call(this, keys)
    };
    G__10778.cljs$lang$maxFixedArity = 0;
    G__10778.cljs$lang$applyTo = function(arglist__10781) {
      var keys = cljs.core.seq(arglist__10781);
      return G__10778__delegate(keys)
    };
    G__10778.cljs$lang$arity$variadic = G__10778__delegate;
    return G__10778
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10782) {
    var keys = cljs.core.seq(arglist__10782);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10784) {
    var comparator = cljs.core.first(arglist__10784);
    var keys = cljs.core.rest(arglist__10784);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10790 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10791 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10791)) {
        var e__10792 = temp__3971__auto____10791;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10792))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10790, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10783_SHARP_) {
      var temp__3971__auto____10793 = cljs.core.find.call(null, smap, p1__10783_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10793)) {
        var e__10794 = temp__3971__auto____10793;
        return cljs.core.second.call(null, e__10794)
      }else {
        return p1__10783_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10824 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10817, seen) {
        while(true) {
          var vec__10818__10819 = p__10817;
          var f__10820 = cljs.core.nth.call(null, vec__10818__10819, 0, null);
          var xs__10821 = vec__10818__10819;
          var temp__3974__auto____10822 = cljs.core.seq.call(null, xs__10821);
          if(temp__3974__auto____10822) {
            var s__10823 = temp__3974__auto____10822;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10820)) {
              var G__10825 = cljs.core.rest.call(null, s__10823);
              var G__10826 = seen;
              p__10817 = G__10825;
              seen = G__10826;
              continue
            }else {
              return cljs.core.cons.call(null, f__10820, step.call(null, cljs.core.rest.call(null, s__10823), cljs.core.conj.call(null, seen, f__10820)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10824.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10829 = cljs.core.PersistentVector.EMPTY;
  var s__10830 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10830)) {
      var G__10831 = cljs.core.conj.call(null, ret__10829, cljs.core.first.call(null, s__10830));
      var G__10832 = cljs.core.next.call(null, s__10830);
      ret__10829 = G__10831;
      s__10830 = G__10832;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10829)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10835 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10835) {
        return or__3824__auto____10835
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10836 = x.lastIndexOf("/");
      if(i__10836 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10836 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10839 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10839) {
      return or__3824__auto____10839
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10840 = x.lastIndexOf("/");
    if(i__10840 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10840)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10847 = cljs.core.ObjMap.EMPTY;
  var ks__10848 = cljs.core.seq.call(null, keys);
  var vs__10849 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10850 = ks__10848;
      if(and__3822__auto____10850) {
        return vs__10849
      }else {
        return and__3822__auto____10850
      }
    }()) {
      var G__10851 = cljs.core.assoc.call(null, map__10847, cljs.core.first.call(null, ks__10848), cljs.core.first.call(null, vs__10849));
      var G__10852 = cljs.core.next.call(null, ks__10848);
      var G__10853 = cljs.core.next.call(null, vs__10849);
      map__10847 = G__10851;
      ks__10848 = G__10852;
      vs__10849 = G__10853;
      continue
    }else {
      return map__10847
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10856__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10841_SHARP_, p2__10842_SHARP_) {
        return max_key.call(null, k, p1__10841_SHARP_, p2__10842_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10856 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10856__delegate.call(this, k, x, y, more)
    };
    G__10856.cljs$lang$maxFixedArity = 3;
    G__10856.cljs$lang$applyTo = function(arglist__10857) {
      var k = cljs.core.first(arglist__10857);
      var x = cljs.core.first(cljs.core.next(arglist__10857));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10857)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10857)));
      return G__10856__delegate(k, x, y, more)
    };
    G__10856.cljs$lang$arity$variadic = G__10856__delegate;
    return G__10856
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10858__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10854_SHARP_, p2__10855_SHARP_) {
        return min_key.call(null, k, p1__10854_SHARP_, p2__10855_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10858 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10858__delegate.call(this, k, x, y, more)
    };
    G__10858.cljs$lang$maxFixedArity = 3;
    G__10858.cljs$lang$applyTo = function(arglist__10859) {
      var k = cljs.core.first(arglist__10859);
      var x = cljs.core.first(cljs.core.next(arglist__10859));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10859)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10859)));
      return G__10858__delegate(k, x, y, more)
    };
    G__10858.cljs$lang$arity$variadic = G__10858__delegate;
    return G__10858
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10862 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10862) {
        var s__10863 = temp__3974__auto____10862;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10863), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10863)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10866 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10866) {
      var s__10867 = temp__3974__auto____10866;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10867)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10867), take_while.call(null, pred, cljs.core.rest.call(null, s__10867)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10869 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10869.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10881 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10882 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10882)) {
        var vec__10883__10884 = temp__3974__auto____10882;
        var e__10885 = cljs.core.nth.call(null, vec__10883__10884, 0, null);
        var s__10886 = vec__10883__10884;
        if(cljs.core.truth_(include__10881.call(null, e__10885))) {
          return s__10886
        }else {
          return cljs.core.next.call(null, s__10886)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10881, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10887 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10887)) {
      var vec__10888__10889 = temp__3974__auto____10887;
      var e__10890 = cljs.core.nth.call(null, vec__10888__10889, 0, null);
      var s__10891 = vec__10888__10889;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10890)) ? s__10891 : cljs.core.next.call(null, s__10891))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10903 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10904 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10904)) {
        var vec__10905__10906 = temp__3974__auto____10904;
        var e__10907 = cljs.core.nth.call(null, vec__10905__10906, 0, null);
        var s__10908 = vec__10905__10906;
        if(cljs.core.truth_(include__10903.call(null, e__10907))) {
          return s__10908
        }else {
          return cljs.core.next.call(null, s__10908)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10903, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10909 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10909)) {
      var vec__10910__10911 = temp__3974__auto____10909;
      var e__10912 = cljs.core.nth.call(null, vec__10910__10911, 0, null);
      var s__10913 = vec__10910__10911;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10912)) ? s__10913 : cljs.core.next.call(null, s__10913))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10914 = this;
  var h__2192__auto____10915 = this__10914.__hash;
  if(!(h__2192__auto____10915 == null)) {
    return h__2192__auto____10915
  }else {
    var h__2192__auto____10916 = cljs.core.hash_coll.call(null, rng);
    this__10914.__hash = h__2192__auto____10916;
    return h__2192__auto____10916
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10917 = this;
  if(this__10917.step > 0) {
    if(this__10917.start + this__10917.step < this__10917.end) {
      return new cljs.core.Range(this__10917.meta, this__10917.start + this__10917.step, this__10917.end, this__10917.step, null)
    }else {
      return null
    }
  }else {
    if(this__10917.start + this__10917.step > this__10917.end) {
      return new cljs.core.Range(this__10917.meta, this__10917.start + this__10917.step, this__10917.end, this__10917.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10918 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10919 = this;
  var this__10920 = this;
  return cljs.core.pr_str.call(null, this__10920)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10921 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10922 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10923 = this;
  if(this__10923.step > 0) {
    if(this__10923.start < this__10923.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10923.start > this__10923.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10924 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10924.end - this__10924.start) / this__10924.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10925 = this;
  return this__10925.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10926 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10926.meta, this__10926.start + this__10926.step, this__10926.end, this__10926.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10927 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10928 = this;
  return new cljs.core.Range(meta, this__10928.start, this__10928.end, this__10928.step, this__10928.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10929 = this;
  return this__10929.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10930 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10930.start + n * this__10930.step
  }else {
    if(function() {
      var and__3822__auto____10931 = this__10930.start > this__10930.end;
      if(and__3822__auto____10931) {
        return this__10930.step === 0
      }else {
        return and__3822__auto____10931
      }
    }()) {
      return this__10930.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10932 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10932.start + n * this__10932.step
  }else {
    if(function() {
      var and__3822__auto____10933 = this__10932.start > this__10932.end;
      if(and__3822__auto____10933) {
        return this__10932.step === 0
      }else {
        return and__3822__auto____10933
      }
    }()) {
      return this__10932.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10934 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10934.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10937 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10937) {
      var s__10938 = temp__3974__auto____10937;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10938), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10938)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10945 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10945) {
      var s__10946 = temp__3974__auto____10945;
      var fst__10947 = cljs.core.first.call(null, s__10946);
      var fv__10948 = f.call(null, fst__10947);
      var run__10949 = cljs.core.cons.call(null, fst__10947, cljs.core.take_while.call(null, function(p1__10939_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10948, f.call(null, p1__10939_SHARP_))
      }, cljs.core.next.call(null, s__10946)));
      return cljs.core.cons.call(null, run__10949, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10949), s__10946))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10964 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10964) {
        var s__10965 = temp__3971__auto____10964;
        return reductions.call(null, f, cljs.core.first.call(null, s__10965), cljs.core.rest.call(null, s__10965))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10966 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10966) {
        var s__10967 = temp__3974__auto____10966;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10967)), cljs.core.rest.call(null, s__10967))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10970 = null;
      var G__10970__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10970__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10970__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10970__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10970__4 = function() {
        var G__10971__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10971 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10971__delegate.call(this, x, y, z, args)
        };
        G__10971.cljs$lang$maxFixedArity = 3;
        G__10971.cljs$lang$applyTo = function(arglist__10972) {
          var x = cljs.core.first(arglist__10972);
          var y = cljs.core.first(cljs.core.next(arglist__10972));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10972)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10972)));
          return G__10971__delegate(x, y, z, args)
        };
        G__10971.cljs$lang$arity$variadic = G__10971__delegate;
        return G__10971
      }();
      G__10970 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10970__0.call(this);
          case 1:
            return G__10970__1.call(this, x);
          case 2:
            return G__10970__2.call(this, x, y);
          case 3:
            return G__10970__3.call(this, x, y, z);
          default:
            return G__10970__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10970.cljs$lang$maxFixedArity = 3;
      G__10970.cljs$lang$applyTo = G__10970__4.cljs$lang$applyTo;
      return G__10970
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10973 = null;
      var G__10973__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10973__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10973__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10973__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10973__4 = function() {
        var G__10974__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10974 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10974__delegate.call(this, x, y, z, args)
        };
        G__10974.cljs$lang$maxFixedArity = 3;
        G__10974.cljs$lang$applyTo = function(arglist__10975) {
          var x = cljs.core.first(arglist__10975);
          var y = cljs.core.first(cljs.core.next(arglist__10975));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10975)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10975)));
          return G__10974__delegate(x, y, z, args)
        };
        G__10974.cljs$lang$arity$variadic = G__10974__delegate;
        return G__10974
      }();
      G__10973 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10973__0.call(this);
          case 1:
            return G__10973__1.call(this, x);
          case 2:
            return G__10973__2.call(this, x, y);
          case 3:
            return G__10973__3.call(this, x, y, z);
          default:
            return G__10973__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10973.cljs$lang$maxFixedArity = 3;
      G__10973.cljs$lang$applyTo = G__10973__4.cljs$lang$applyTo;
      return G__10973
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10976 = null;
      var G__10976__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10976__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10976__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10976__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10976__4 = function() {
        var G__10977__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10977 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10977__delegate.call(this, x, y, z, args)
        };
        G__10977.cljs$lang$maxFixedArity = 3;
        G__10977.cljs$lang$applyTo = function(arglist__10978) {
          var x = cljs.core.first(arglist__10978);
          var y = cljs.core.first(cljs.core.next(arglist__10978));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10978)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10978)));
          return G__10977__delegate(x, y, z, args)
        };
        G__10977.cljs$lang$arity$variadic = G__10977__delegate;
        return G__10977
      }();
      G__10976 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10976__0.call(this);
          case 1:
            return G__10976__1.call(this, x);
          case 2:
            return G__10976__2.call(this, x, y);
          case 3:
            return G__10976__3.call(this, x, y, z);
          default:
            return G__10976__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10976.cljs$lang$maxFixedArity = 3;
      G__10976.cljs$lang$applyTo = G__10976__4.cljs$lang$applyTo;
      return G__10976
    }()
  };
  var juxt__4 = function() {
    var G__10979__delegate = function(f, g, h, fs) {
      var fs__10969 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10980 = null;
        var G__10980__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10950_SHARP_, p2__10951_SHARP_) {
            return cljs.core.conj.call(null, p1__10950_SHARP_, p2__10951_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10969)
        };
        var G__10980__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10952_SHARP_, p2__10953_SHARP_) {
            return cljs.core.conj.call(null, p1__10952_SHARP_, p2__10953_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10969)
        };
        var G__10980__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10954_SHARP_, p2__10955_SHARP_) {
            return cljs.core.conj.call(null, p1__10954_SHARP_, p2__10955_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10969)
        };
        var G__10980__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10956_SHARP_, p2__10957_SHARP_) {
            return cljs.core.conj.call(null, p1__10956_SHARP_, p2__10957_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10969)
        };
        var G__10980__4 = function() {
          var G__10981__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10958_SHARP_, p2__10959_SHARP_) {
              return cljs.core.conj.call(null, p1__10958_SHARP_, cljs.core.apply.call(null, p2__10959_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10969)
          };
          var G__10981 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10981__delegate.call(this, x, y, z, args)
          };
          G__10981.cljs$lang$maxFixedArity = 3;
          G__10981.cljs$lang$applyTo = function(arglist__10982) {
            var x = cljs.core.first(arglist__10982);
            var y = cljs.core.first(cljs.core.next(arglist__10982));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10982)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10982)));
            return G__10981__delegate(x, y, z, args)
          };
          G__10981.cljs$lang$arity$variadic = G__10981__delegate;
          return G__10981
        }();
        G__10980 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10980__0.call(this);
            case 1:
              return G__10980__1.call(this, x);
            case 2:
              return G__10980__2.call(this, x, y);
            case 3:
              return G__10980__3.call(this, x, y, z);
            default:
              return G__10980__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10980.cljs$lang$maxFixedArity = 3;
        G__10980.cljs$lang$applyTo = G__10980__4.cljs$lang$applyTo;
        return G__10980
      }()
    };
    var G__10979 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10979__delegate.call(this, f, g, h, fs)
    };
    G__10979.cljs$lang$maxFixedArity = 3;
    G__10979.cljs$lang$applyTo = function(arglist__10983) {
      var f = cljs.core.first(arglist__10983);
      var g = cljs.core.first(cljs.core.next(arglist__10983));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10983)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10983)));
      return G__10979__delegate(f, g, h, fs)
    };
    G__10979.cljs$lang$arity$variadic = G__10979__delegate;
    return G__10979
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10986 = cljs.core.next.call(null, coll);
        coll = G__10986;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10985 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10985) {
          return n > 0
        }else {
          return and__3822__auto____10985
        }
      }())) {
        var G__10987 = n - 1;
        var G__10988 = cljs.core.next.call(null, coll);
        n = G__10987;
        coll = G__10988;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10990 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10990), s)) {
    if(cljs.core.count.call(null, matches__10990) === 1) {
      return cljs.core.first.call(null, matches__10990)
    }else {
      return cljs.core.vec.call(null, matches__10990)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10992 = re.exec(s);
  if(matches__10992 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10992) === 1) {
      return cljs.core.first.call(null, matches__10992)
    }else {
      return cljs.core.vec.call(null, matches__10992)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10997 = cljs.core.re_find.call(null, re, s);
  var match_idx__10998 = s.search(re);
  var match_str__10999 = cljs.core.coll_QMARK_.call(null, match_data__10997) ? cljs.core.first.call(null, match_data__10997) : match_data__10997;
  var post_match__11000 = cljs.core.subs.call(null, s, match_idx__10998 + cljs.core.count.call(null, match_str__10999));
  if(cljs.core.truth_(match_data__10997)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10997, re_seq.call(null, re, post_match__11000))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11007__11008 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11009 = cljs.core.nth.call(null, vec__11007__11008, 0, null);
  var flags__11010 = cljs.core.nth.call(null, vec__11007__11008, 1, null);
  var pattern__11011 = cljs.core.nth.call(null, vec__11007__11008, 2, null);
  return new RegExp(pattern__11011, flags__11010)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11001_SHARP_) {
    return print_one.call(null, p1__11001_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11021 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11021)) {
            var and__3822__auto____11025 = function() {
              var G__11022__11023 = obj;
              if(G__11022__11023) {
                if(function() {
                  var or__3824__auto____11024 = G__11022__11023.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11024) {
                    return or__3824__auto____11024
                  }else {
                    return G__11022__11023.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11022__11023.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11022__11023)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11022__11023)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11025)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11025
            }
          }else {
            return and__3822__auto____11021
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11026 = !(obj == null);
          if(and__3822__auto____11026) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11026
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11027__11028 = obj;
          if(G__11027__11028) {
            if(function() {
              var or__3824__auto____11029 = G__11027__11028.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11029) {
                return or__3824__auto____11029
              }else {
                return G__11027__11028.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11027__11028.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11027__11028)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11027__11028)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11049 = new goog.string.StringBuffer;
  var G__11050__11051 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11050__11051) {
    var string__11052 = cljs.core.first.call(null, G__11050__11051);
    var G__11050__11053 = G__11050__11051;
    while(true) {
      sb__11049.append(string__11052);
      var temp__3974__auto____11054 = cljs.core.next.call(null, G__11050__11053);
      if(temp__3974__auto____11054) {
        var G__11050__11055 = temp__3974__auto____11054;
        var G__11068 = cljs.core.first.call(null, G__11050__11055);
        var G__11069 = G__11050__11055;
        string__11052 = G__11068;
        G__11050__11053 = G__11069;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11056__11057 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11056__11057) {
    var obj__11058 = cljs.core.first.call(null, G__11056__11057);
    var G__11056__11059 = G__11056__11057;
    while(true) {
      sb__11049.append(" ");
      var G__11060__11061 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11058, opts));
      if(G__11060__11061) {
        var string__11062 = cljs.core.first.call(null, G__11060__11061);
        var G__11060__11063 = G__11060__11061;
        while(true) {
          sb__11049.append(string__11062);
          var temp__3974__auto____11064 = cljs.core.next.call(null, G__11060__11063);
          if(temp__3974__auto____11064) {
            var G__11060__11065 = temp__3974__auto____11064;
            var G__11070 = cljs.core.first.call(null, G__11060__11065);
            var G__11071 = G__11060__11065;
            string__11062 = G__11070;
            G__11060__11063 = G__11071;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11066 = cljs.core.next.call(null, G__11056__11059);
      if(temp__3974__auto____11066) {
        var G__11056__11067 = temp__3974__auto____11066;
        var G__11072 = cljs.core.first.call(null, G__11056__11067);
        var G__11073 = G__11056__11067;
        obj__11058 = G__11072;
        G__11056__11059 = G__11073;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11049
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11075 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11075.append("\n");
  return[cljs.core.str(sb__11075)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11094__11095 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11094__11095) {
    var string__11096 = cljs.core.first.call(null, G__11094__11095);
    var G__11094__11097 = G__11094__11095;
    while(true) {
      cljs.core.string_print.call(null, string__11096);
      var temp__3974__auto____11098 = cljs.core.next.call(null, G__11094__11097);
      if(temp__3974__auto____11098) {
        var G__11094__11099 = temp__3974__auto____11098;
        var G__11112 = cljs.core.first.call(null, G__11094__11099);
        var G__11113 = G__11094__11099;
        string__11096 = G__11112;
        G__11094__11097 = G__11113;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11100__11101 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11100__11101) {
    var obj__11102 = cljs.core.first.call(null, G__11100__11101);
    var G__11100__11103 = G__11100__11101;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11104__11105 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11102, opts));
      if(G__11104__11105) {
        var string__11106 = cljs.core.first.call(null, G__11104__11105);
        var G__11104__11107 = G__11104__11105;
        while(true) {
          cljs.core.string_print.call(null, string__11106);
          var temp__3974__auto____11108 = cljs.core.next.call(null, G__11104__11107);
          if(temp__3974__auto____11108) {
            var G__11104__11109 = temp__3974__auto____11108;
            var G__11114 = cljs.core.first.call(null, G__11104__11109);
            var G__11115 = G__11104__11109;
            string__11106 = G__11114;
            G__11104__11107 = G__11115;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11110 = cljs.core.next.call(null, G__11100__11103);
      if(temp__3974__auto____11110) {
        var G__11100__11111 = temp__3974__auto____11110;
        var G__11116 = cljs.core.first.call(null, G__11100__11111);
        var G__11117 = G__11100__11111;
        obj__11102 = G__11116;
        G__11100__11103 = G__11117;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11118) {
    var objs = cljs.core.seq(arglist__11118);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11119) {
    var objs = cljs.core.seq(arglist__11119);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11120) {
    var objs = cljs.core.seq(arglist__11120);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11121) {
    var objs = cljs.core.seq(arglist__11121);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11122) {
    var objs = cljs.core.seq(arglist__11122);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11123) {
    var objs = cljs.core.seq(arglist__11123);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11124) {
    var objs = cljs.core.seq(arglist__11124);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11125) {
    var objs = cljs.core.seq(arglist__11125);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11126) {
    var fmt = cljs.core.first(arglist__11126);
    var args = cljs.core.rest(arglist__11126);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11127 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11127, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11128 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11128, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11129 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11129, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11130 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11130)) {
        var nspc__11131 = temp__3974__auto____11130;
        return[cljs.core.str(nspc__11131), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11132 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11132)) {
          var nspc__11133 = temp__3974__auto____11132;
          return[cljs.core.str(nspc__11133), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11134 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11134, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11136 = function(n, len) {
    var ns__11135 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11135) < len) {
        var G__11138 = [cljs.core.str("0"), cljs.core.str(ns__11135)].join("");
        ns__11135 = G__11138;
        continue
      }else {
        return ns__11135
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11136.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11136.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11136.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11136.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11136.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11136.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11137 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11137, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11139 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11140 = this;
  var G__11141__11142 = cljs.core.seq.call(null, this__11140.watches);
  if(G__11141__11142) {
    var G__11144__11146 = cljs.core.first.call(null, G__11141__11142);
    var vec__11145__11147 = G__11144__11146;
    var key__11148 = cljs.core.nth.call(null, vec__11145__11147, 0, null);
    var f__11149 = cljs.core.nth.call(null, vec__11145__11147, 1, null);
    var G__11141__11150 = G__11141__11142;
    var G__11144__11151 = G__11144__11146;
    var G__11141__11152 = G__11141__11150;
    while(true) {
      var vec__11153__11154 = G__11144__11151;
      var key__11155 = cljs.core.nth.call(null, vec__11153__11154, 0, null);
      var f__11156 = cljs.core.nth.call(null, vec__11153__11154, 1, null);
      var G__11141__11157 = G__11141__11152;
      f__11156.call(null, key__11155, this$, oldval, newval);
      var temp__3974__auto____11158 = cljs.core.next.call(null, G__11141__11157);
      if(temp__3974__auto____11158) {
        var G__11141__11159 = temp__3974__auto____11158;
        var G__11166 = cljs.core.first.call(null, G__11141__11159);
        var G__11167 = G__11141__11159;
        G__11144__11151 = G__11166;
        G__11141__11152 = G__11167;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11160 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11160.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11161 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11161.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11162 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11162.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11163 = this;
  return this__11163.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11164 = this;
  return this__11164.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11165 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11179__delegate = function(x, p__11168) {
      var map__11174__11175 = p__11168;
      var map__11174__11176 = cljs.core.seq_QMARK_.call(null, map__11174__11175) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11174__11175) : map__11174__11175;
      var validator__11177 = cljs.core._lookup.call(null, map__11174__11176, "\ufdd0'validator", null);
      var meta__11178 = cljs.core._lookup.call(null, map__11174__11176, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11178, validator__11177, null)
    };
    var G__11179 = function(x, var_args) {
      var p__11168 = null;
      if(goog.isDef(var_args)) {
        p__11168 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11179__delegate.call(this, x, p__11168)
    };
    G__11179.cljs$lang$maxFixedArity = 1;
    G__11179.cljs$lang$applyTo = function(arglist__11180) {
      var x = cljs.core.first(arglist__11180);
      var p__11168 = cljs.core.rest(arglist__11180);
      return G__11179__delegate(x, p__11168)
    };
    G__11179.cljs$lang$arity$variadic = G__11179__delegate;
    return G__11179
  }();
  atom = function(x, var_args) {
    var p__11168 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11184 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11184)) {
    var validate__11185 = temp__3974__auto____11184;
    if(cljs.core.truth_(validate__11185.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11186 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11186, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11187__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11187 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11187__delegate.call(this, a, f, x, y, z, more)
    };
    G__11187.cljs$lang$maxFixedArity = 5;
    G__11187.cljs$lang$applyTo = function(arglist__11188) {
      var a = cljs.core.first(arglist__11188);
      var f = cljs.core.first(cljs.core.next(arglist__11188));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11188)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11188))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11188)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11188)))));
      return G__11187__delegate(a, f, x, y, z, more)
    };
    G__11187.cljs$lang$arity$variadic = G__11187__delegate;
    return G__11187
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11189) {
    var iref = cljs.core.first(arglist__11189);
    var f = cljs.core.first(cljs.core.next(arglist__11189));
    var args = cljs.core.rest(cljs.core.next(arglist__11189));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11190 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11190.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11191 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11191.state, function(p__11192) {
    var map__11193__11194 = p__11192;
    var map__11193__11195 = cljs.core.seq_QMARK_.call(null, map__11193__11194) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11193__11194) : map__11193__11194;
    var curr_state__11196 = map__11193__11195;
    var done__11197 = cljs.core._lookup.call(null, map__11193__11195, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11197)) {
      return curr_state__11196
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11191.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11218__11219 = options;
    var map__11218__11220 = cljs.core.seq_QMARK_.call(null, map__11218__11219) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11218__11219) : map__11218__11219;
    var keywordize_keys__11221 = cljs.core._lookup.call(null, map__11218__11220, "\ufdd0'keywordize-keys", null);
    var keyfn__11222 = cljs.core.truth_(keywordize_keys__11221) ? cljs.core.keyword : cljs.core.str;
    var f__11237 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____11236 = function iter__11230(s__11231) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11231__11234 = s__11231;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11231__11234)) {
                        var k__11235 = cljs.core.first.call(null, s__11231__11234);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11222.call(null, k__11235), thisfn.call(null, x[k__11235])], true), iter__11230.call(null, cljs.core.rest.call(null, s__11231__11234)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____11236.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11237.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11238) {
    var x = cljs.core.first(arglist__11238);
    var options = cljs.core.rest(arglist__11238);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11243 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11247__delegate = function(args) {
      var temp__3971__auto____11244 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11243), args, null);
      if(cljs.core.truth_(temp__3971__auto____11244)) {
        var v__11245 = temp__3971__auto____11244;
        return v__11245
      }else {
        var ret__11246 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11243, cljs.core.assoc, args, ret__11246);
        return ret__11246
      }
    };
    var G__11247 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11247__delegate.call(this, args)
    };
    G__11247.cljs$lang$maxFixedArity = 0;
    G__11247.cljs$lang$applyTo = function(arglist__11248) {
      var args = cljs.core.seq(arglist__11248);
      return G__11247__delegate(args)
    };
    G__11247.cljs$lang$arity$variadic = G__11247__delegate;
    return G__11247
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11250 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11250)) {
        var G__11251 = ret__11250;
        f = G__11251;
        continue
      }else {
        return ret__11250
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11252__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11252 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11252__delegate.call(this, f, args)
    };
    G__11252.cljs$lang$maxFixedArity = 1;
    G__11252.cljs$lang$applyTo = function(arglist__11253) {
      var f = cljs.core.first(arglist__11253);
      var args = cljs.core.rest(arglist__11253);
      return G__11252__delegate(f, args)
    };
    G__11252.cljs$lang$arity$variadic = G__11252__delegate;
    return G__11252
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11255 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11255, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11255, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11264 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11264) {
      return or__3824__auto____11264
    }else {
      var or__3824__auto____11265 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11265) {
        return or__3824__auto____11265
      }else {
        var and__3822__auto____11266 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11266) {
          var and__3822__auto____11267 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11267) {
            var and__3822__auto____11268 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11268) {
              var ret__11269 = true;
              var i__11270 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11271 = cljs.core.not.call(null, ret__11269);
                  if(or__3824__auto____11271) {
                    return or__3824__auto____11271
                  }else {
                    return i__11270 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11269
                }else {
                  var G__11272 = isa_QMARK_.call(null, h, child.call(null, i__11270), parent.call(null, i__11270));
                  var G__11273 = i__11270 + 1;
                  ret__11269 = G__11272;
                  i__11270 = G__11273;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11268
            }
          }else {
            return and__3822__auto____11267
          }
        }else {
          return and__3822__auto____11266
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11282 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11283 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11284 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11285 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11286 = cljs.core.contains_QMARK_.call(null, tp__11282.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11284.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11284.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11282, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11285.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11283, parent, ta__11284), "\ufdd0'descendants":tf__11285.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11284, tag, td__11283)})
    }();
    if(cljs.core.truth_(or__3824__auto____11286)) {
      return or__3824__auto____11286
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11291 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11292 = cljs.core.truth_(parentMap__11291.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11291.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11293 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11292)) ? cljs.core.assoc.call(null, parentMap__11291, tag, childsParents__11292) : cljs.core.dissoc.call(null, parentMap__11291, tag);
    var deriv_seq__11294 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11274_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11274_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11274_SHARP_), cljs.core.second.call(null, p1__11274_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11293)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11291.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11275_SHARP_, p2__11276_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11275_SHARP_, p2__11276_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11294))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11302 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11304 = cljs.core.truth_(function() {
    var and__3822__auto____11303 = xprefs__11302;
    if(cljs.core.truth_(and__3822__auto____11303)) {
      return xprefs__11302.call(null, y)
    }else {
      return and__3822__auto____11303
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11304)) {
    return or__3824__auto____11304
  }else {
    var or__3824__auto____11306 = function() {
      var ps__11305 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11305) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11305), prefer_table))) {
          }else {
          }
          var G__11309 = cljs.core.rest.call(null, ps__11305);
          ps__11305 = G__11309;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11306)) {
      return or__3824__auto____11306
    }else {
      var or__3824__auto____11308 = function() {
        var ps__11307 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11307) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11307), y, prefer_table))) {
            }else {
            }
            var G__11310 = cljs.core.rest.call(null, ps__11307);
            ps__11307 = G__11310;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11308)) {
        return or__3824__auto____11308
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11312 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11312)) {
    return or__3824__auto____11312
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11330 = cljs.core.reduce.call(null, function(be, p__11322) {
    var vec__11323__11324 = p__11322;
    var k__11325 = cljs.core.nth.call(null, vec__11323__11324, 0, null);
    var ___11326 = cljs.core.nth.call(null, vec__11323__11324, 1, null);
    var e__11327 = vec__11323__11324;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11325)) {
      var be2__11329 = cljs.core.truth_(function() {
        var or__3824__auto____11328 = be == null;
        if(or__3824__auto____11328) {
          return or__3824__auto____11328
        }else {
          return cljs.core.dominates.call(null, k__11325, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11327 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11329), k__11325, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11325), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11329)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11329
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11330)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11330));
      return cljs.core.second.call(null, best_entry__11330)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11335 = mf;
    if(and__3822__auto____11335) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11335
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____11336 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11337 = cljs.core._reset[goog.typeOf(x__2363__auto____11336)];
      if(or__3824__auto____11337) {
        return or__3824__auto____11337
      }else {
        var or__3824__auto____11338 = cljs.core._reset["_"];
        if(or__3824__auto____11338) {
          return or__3824__auto____11338
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11343 = mf;
    if(and__3822__auto____11343) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11343
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____11344 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11345 = cljs.core._add_method[goog.typeOf(x__2363__auto____11344)];
      if(or__3824__auto____11345) {
        return or__3824__auto____11345
      }else {
        var or__3824__auto____11346 = cljs.core._add_method["_"];
        if(or__3824__auto____11346) {
          return or__3824__auto____11346
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11351 = mf;
    if(and__3822__auto____11351) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11351
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11352 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11353 = cljs.core._remove_method[goog.typeOf(x__2363__auto____11352)];
      if(or__3824__auto____11353) {
        return or__3824__auto____11353
      }else {
        var or__3824__auto____11354 = cljs.core._remove_method["_"];
        if(or__3824__auto____11354) {
          return or__3824__auto____11354
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11359 = mf;
    if(and__3822__auto____11359) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11359
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____11360 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11361 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____11360)];
      if(or__3824__auto____11361) {
        return or__3824__auto____11361
      }else {
        var or__3824__auto____11362 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11362) {
          return or__3824__auto____11362
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11367 = mf;
    if(and__3822__auto____11367) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11367
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11368 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11369 = cljs.core._get_method[goog.typeOf(x__2363__auto____11368)];
      if(or__3824__auto____11369) {
        return or__3824__auto____11369
      }else {
        var or__3824__auto____11370 = cljs.core._get_method["_"];
        if(or__3824__auto____11370) {
          return or__3824__auto____11370
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11375 = mf;
    if(and__3822__auto____11375) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11375
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____11376 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11377 = cljs.core._methods[goog.typeOf(x__2363__auto____11376)];
      if(or__3824__auto____11377) {
        return or__3824__auto____11377
      }else {
        var or__3824__auto____11378 = cljs.core._methods["_"];
        if(or__3824__auto____11378) {
          return or__3824__auto____11378
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11383 = mf;
    if(and__3822__auto____11383) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11383
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____11384 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11385 = cljs.core._prefers[goog.typeOf(x__2363__auto____11384)];
      if(or__3824__auto____11385) {
        return or__3824__auto____11385
      }else {
        var or__3824__auto____11386 = cljs.core._prefers["_"];
        if(or__3824__auto____11386) {
          return or__3824__auto____11386
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11391 = mf;
    if(and__3822__auto____11391) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11391
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____11392 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11393 = cljs.core._dispatch[goog.typeOf(x__2363__auto____11392)];
      if(or__3824__auto____11393) {
        return or__3824__auto____11393
      }else {
        var or__3824__auto____11394 = cljs.core._dispatch["_"];
        if(or__3824__auto____11394) {
          return or__3824__auto____11394
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11397 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11398 = cljs.core._get_method.call(null, mf, dispatch_val__11397);
  if(cljs.core.truth_(target_fn__11398)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11397)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11398, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11399 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11400 = this;
  cljs.core.swap_BANG_.call(null, this__11400.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11400.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11400.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11400.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11401 = this;
  cljs.core.swap_BANG_.call(null, this__11401.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11401.method_cache, this__11401.method_table, this__11401.cached_hierarchy, this__11401.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11402 = this;
  cljs.core.swap_BANG_.call(null, this__11402.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11402.method_cache, this__11402.method_table, this__11402.cached_hierarchy, this__11402.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11403 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11403.cached_hierarchy), cljs.core.deref.call(null, this__11403.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11403.method_cache, this__11403.method_table, this__11403.cached_hierarchy, this__11403.hierarchy)
  }
  var temp__3971__auto____11404 = cljs.core.deref.call(null, this__11403.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11404)) {
    var target_fn__11405 = temp__3971__auto____11404;
    return target_fn__11405
  }else {
    var temp__3971__auto____11406 = cljs.core.find_and_cache_best_method.call(null, this__11403.name, dispatch_val, this__11403.hierarchy, this__11403.method_table, this__11403.prefer_table, this__11403.method_cache, this__11403.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11406)) {
      var target_fn__11407 = temp__3971__auto____11406;
      return target_fn__11407
    }else {
      return cljs.core.deref.call(null, this__11403.method_table).call(null, this__11403.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11408 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11408.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11408.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11408.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11408.method_cache, this__11408.method_table, this__11408.cached_hierarchy, this__11408.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11409 = this;
  return cljs.core.deref.call(null, this__11409.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11410 = this;
  return cljs.core.deref.call(null, this__11410.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11411 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11411.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11413__delegate = function(_, args) {
    var self__11412 = this;
    return cljs.core._dispatch.call(null, self__11412, args)
  };
  var G__11413 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11413__delegate.call(this, _, args)
  };
  G__11413.cljs$lang$maxFixedArity = 1;
  G__11413.cljs$lang$applyTo = function(arglist__11414) {
    var _ = cljs.core.first(arglist__11414);
    var args = cljs.core.rest(arglist__11414);
    return G__11413__delegate(_, args)
  };
  G__11413.cljs$lang$arity$variadic = G__11413__delegate;
  return G__11413
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11415 = this;
  return cljs.core._dispatch.call(null, self__11415, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11416 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11418, _) {
  var this__11417 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11417.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11419 = this;
  var and__3822__auto____11420 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11420) {
    return this__11419.uuid === other.uuid
  }else {
    return and__3822__auto____11420
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11421 = this;
  var this__11422 = this;
  return cljs.core.pr_str.call(null, this__11422)
};
cljs.core.UUID;
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____7336 = this$;
    if(and__3822__auto____7336) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____7336
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2363__auto____7337 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7338 = clojure.browser.event.event_types[goog.typeOf(x__2363__auto____7337)];
      if(or__3824__auto____7338) {
        return or__3824__auto____7338
      }else {
        var or__3824__auto____7339 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____7339) {
          return or__3824__auto____7339
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__7340) {
    var vec__7341__7342 = p__7340;
    var k__7343 = cljs.core.nth.call(null, vec__7341__7342, 0, null);
    var v__7344 = cljs.core.nth.call(null, vec__7341__7342, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__7343.toLowerCase()), v__7344], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__7345) {
    var vec__7346__7347 = p__7345;
    var k__7348 = cljs.core.nth.call(null, vec__7346__7347, 0, null);
    var v__7349 = cljs.core.nth.call(null, vec__7346__7347, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__7348.toLowerCase()), v__7349], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__7350) {
  var vec__7351__7352 = p__7350;
  var k__7353 = cljs.core.nth.call(null, vec__7351__7352, 0, null);
  var v__7354 = cljs.core.nth.call(null, vec__7351__7352, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__7353.toLowerCase()), v__7354], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____7371 = this$;
      if(and__3822__auto____7371) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____7371
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2363__auto____7372 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7373 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____7372)];
        if(or__3824__auto____7373) {
          return or__3824__auto____7373
        }else {
          var or__3824__auto____7374 = clojure.browser.net.connect["_"];
          if(or__3824__auto____7374) {
            return or__3824__auto____7374
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____7375 = this$;
      if(and__3822__auto____7375) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____7375
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2363__auto____7376 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7377 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____7376)];
        if(or__3824__auto____7377) {
          return or__3824__auto____7377
        }else {
          var or__3824__auto____7378 = clojure.browser.net.connect["_"];
          if(or__3824__auto____7378) {
            return or__3824__auto____7378
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____7379 = this$;
      if(and__3822__auto____7379) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____7379
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2363__auto____7380 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7381 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____7380)];
        if(or__3824__auto____7381) {
          return or__3824__auto____7381
        }else {
          var or__3824__auto____7382 = clojure.browser.net.connect["_"];
          if(or__3824__auto____7382) {
            return or__3824__auto____7382
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____7383 = this$;
      if(and__3822__auto____7383) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____7383
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2363__auto____7384 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7385 = clojure.browser.net.connect[goog.typeOf(x__2363__auto____7384)];
        if(or__3824__auto____7385) {
          return or__3824__auto____7385
        }else {
          var or__3824__auto____7386 = clojure.browser.net.connect["_"];
          if(or__3824__auto____7386) {
            return or__3824__auto____7386
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____7407 = this$;
      if(and__3822__auto____7407) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____7407
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2363__auto____7408 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7409 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____7408)];
        if(or__3824__auto____7409) {
          return or__3824__auto____7409
        }else {
          var or__3824__auto____7410 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____7410) {
            return or__3824__auto____7410
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____7411 = this$;
      if(and__3822__auto____7411) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____7411
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2363__auto____7412 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7413 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____7412)];
        if(or__3824__auto____7413) {
          return or__3824__auto____7413
        }else {
          var or__3824__auto____7414 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____7414) {
            return or__3824__auto____7414
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____7415 = this$;
      if(and__3822__auto____7415) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____7415
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2363__auto____7416 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7417 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____7416)];
        if(or__3824__auto____7417) {
          return or__3824__auto____7417
        }else {
          var or__3824__auto____7418 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____7418) {
            return or__3824__auto____7418
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____7419 = this$;
      if(and__3822__auto____7419) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____7419
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2363__auto____7420 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7421 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____7420)];
        if(or__3824__auto____7421) {
          return or__3824__auto____7421
        }else {
          var or__3824__auto____7422 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____7422) {
            return or__3824__auto____7422
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____7423 = this$;
      if(and__3822__auto____7423) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____7423
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2363__auto____7424 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7425 = clojure.browser.net.transmit[goog.typeOf(x__2363__auto____7424)];
        if(or__3824__auto____7425) {
          return or__3824__auto____7425
        }else {
          var or__3824__auto____7426 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____7426) {
            return or__3824__auto____7426
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____7431 = this$;
    if(and__3822__auto____7431) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____7431
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2363__auto____7432 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7433 = clojure.browser.net.close[goog.typeOf(x__2363__auto____7432)];
      if(or__3824__auto____7433) {
        return or__3824__auto____7433
      }else {
        var or__3824__auto____7434 = clojure.browser.net.close["_"];
        if(or__3824__auto____7434) {
          return or__3824__auto____7434
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__7435) {
    var vec__7436__7437 = p__7435;
    var k__7438 = cljs.core.nth.call(null, vec__7436__7437, 0, null);
    var v__7439 = cljs.core.nth.call(null, vec__7436__7437, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__7438.toLowerCase()), v__7439], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__7440) {
  var vec__7441__7442 = p__7440;
  var k__7443 = cljs.core.nth.call(null, vec__7441__7442, 0, null);
  var v__7444 = cljs.core.nth.call(null, vec__7441__7442, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__7443.toLowerCase()), v__7444], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____7453 = this$;
      if(and__3822__auto____7453) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____7453
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2363__auto____7454 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7455 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____7454)];
        if(or__3824__auto____7455) {
          return or__3824__auto____7455
        }else {
          var or__3824__auto____7456 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____7456) {
            return or__3824__auto____7456
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____7457 = this$;
      if(and__3822__auto____7457) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____7457
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2363__auto____7458 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7459 = clojure.browser.net.register_service[goog.typeOf(x__2363__auto____7458)];
        if(or__3824__auto____7459) {
          return or__3824__auto____7459
        }else {
          var or__3824__auto____7460 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____7460) {
            return or__3824__auto____7460
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____7472 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____7472)) {
      var config__7473 = temp__3974__auto____7472;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__7473))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__7474) {
      var vec__7475__7476 = p__7474;
      var k__7477 = cljs.core.nth.call(null, vec__7475__7476, 0, null);
      var v__7478 = cljs.core.nth.call(null, vec__7475__7476, 1, null);
      var temp__3971__auto____7479 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__7477, null);
      if(cljs.core.truth_(temp__3971__auto____7479)) {
        var field__7480 = temp__3971__auto____7479;
        var G__7481__7482 = sum;
        G__7481__7482[field__7480] = v__7478;
        return G__7481__7482
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.dom");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("goog.dom");
clojure.browser.dom.append = function() {
  var append__delegate = function(parent, children) {
    cljs.core.apply.call(null, goog.dom.append, parent, children);
    return parent
  };
  var append = function(parent, var_args) {
    var children = null;
    if(goog.isDef(var_args)) {
      children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return append__delegate.call(this, parent, children)
  };
  append.cljs$lang$maxFixedArity = 1;
  append.cljs$lang$applyTo = function(arglist__11423) {
    var parent = cljs.core.first(arglist__11423);
    var children = cljs.core.rest(arglist__11423);
    return append__delegate(parent, children)
  };
  append.cljs$lang$arity$variadic = append__delegate;
  return append
}();
clojure.browser.dom.DOMBuilder = {};
clojure.browser.dom._element = function() {
  var _element = null;
  var _element__1 = function(this$) {
    if(function() {
      var and__3822__auto____11436 = this$;
      if(and__3822__auto____11436) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$1
      }else {
        return and__3822__auto____11436
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$1(this$)
    }else {
      var x__2363__auto____11437 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11438 = clojure.browser.dom._element[goog.typeOf(x__2363__auto____11437)];
        if(or__3824__auto____11438) {
          return or__3824__auto____11438
        }else {
          var or__3824__auto____11439 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11439) {
            return or__3824__auto____11439
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _element__2 = function(this$, attrs_or_children) {
    if(function() {
      var and__3822__auto____11440 = this$;
      if(and__3822__auto____11440) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$2
      }else {
        return and__3822__auto____11440
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$2(this$, attrs_or_children)
    }else {
      var x__2363__auto____11441 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11442 = clojure.browser.dom._element[goog.typeOf(x__2363__auto____11441)];
        if(or__3824__auto____11442) {
          return or__3824__auto____11442
        }else {
          var or__3824__auto____11443 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11443) {
            return or__3824__auto____11443
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$, attrs_or_children)
    }
  };
  var _element__3 = function(this$, attrs, children) {
    if(function() {
      var and__3822__auto____11444 = this$;
      if(and__3822__auto____11444) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$3
      }else {
        return and__3822__auto____11444
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$3(this$, attrs, children)
    }else {
      var x__2363__auto____11445 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11446 = clojure.browser.dom._element[goog.typeOf(x__2363__auto____11445)];
        if(or__3824__auto____11446) {
          return or__3824__auto____11446
        }else {
          var or__3824__auto____11447 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11447) {
            return or__3824__auto____11447
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$, attrs, children)
    }
  };
  _element = function(this$, attrs, children) {
    switch(arguments.length) {
      case 1:
        return _element__1.call(this, this$);
      case 2:
        return _element__2.call(this, this$, attrs);
      case 3:
        return _element__3.call(this, this$, attrs, children)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _element.cljs$lang$arity$1 = _element__1;
  _element.cljs$lang$arity$2 = _element__2;
  _element.cljs$lang$arity$3 = _element__3;
  return _element
}();
clojure.browser.dom.log = function() {
  var log__delegate = function(args) {
    return console.log(cljs.core.apply.call(null, cljs.core.pr_str, args))
  };
  var log = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, args)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11448) {
    var args = cljs.core.seq(arglist__11448);
    return log__delegate(args)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
clojure.browser.dom.log_obj = function log_obj(obj) {
  return console.log(obj)
};
Element.prototype.clojure$browser$dom$DOMBuilder$ = true;
Element.prototype.clojure$browser$dom$DOMBuilder$_element$arity$1 = function(this$) {
  clojure.browser.dom.log.call(null, "js/Element (-element ", this$, ")");
  return this$
};
cljs.core.PersistentVector.prototype.clojure$browser$dom$DOMBuilder$ = true;
cljs.core.PersistentVector.prototype.clojure$browser$dom$DOMBuilder$_element$arity$1 = function(this$) {
  clojure.browser.dom.log.call(null, "PersistentVector (-element ", this$, ")");
  var tag__11449 = cljs.core.first.call(null, this$);
  var attrs__11450 = cljs.core.second.call(null, this$);
  var children__11451 = cljs.core.drop.call(null, 2, this$);
  if(cljs.core.map_QMARK_.call(null, attrs__11450)) {
    return clojure.browser.dom._element.call(null, tag__11449, attrs__11450, children__11451)
  }else {
    return clojure.browser.dom._element.call(null, tag__11449, null, cljs.core.rest.call(null, this$))
  }
};
clojure.browser.dom.DOMBuilder["string"] = true;
clojure.browser.dom._element["string"] = function() {
  var G__11464 = null;
  var G__11464__1 = function(this$) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, ")");
    if(cljs.core.keyword_QMARK_.call(null, this$)) {
      return goog.dom.createElement(cljs.core.name.call(null, this$))
    }else {
      if("\ufdd0'else") {
        return goog.dom.createTextNode(cljs.core.name.call(null, this$))
      }else {
        return null
      }
    }
  };
  var G__11464__2 = function(this$, attrs_or_children) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, " ", attrs_or_children, ")");
    var attrs__11452 = cljs.core.first.call(null, attrs_or_children);
    if(cljs.core.map_QMARK_.call(null, attrs__11452)) {
      return clojure.browser.dom._element.call(null, this$, attrs__11452, cljs.core.rest.call(null, attrs_or_children))
    }else {
      return clojure.browser.dom._element.call(null, this$, null, attrs_or_children)
    }
  };
  var G__11464__3 = function(this$, attrs, children) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, " ", attrs, " ", children, ")");
    var str_attrs__11463 = cljs.core.truth_(function() {
      var and__3822__auto____11453 = cljs.core.map_QMARK_.call(null, attrs);
      if(and__3822__auto____11453) {
        return cljs.core.seq.call(null, attrs)
      }else {
        return and__3822__auto____11453
      }
    }()) ? cljs.core.reduce.call(null, function(o, p__11454) {
      var vec__11455__11456 = p__11454;
      var k__11457 = cljs.core.nth.call(null, vec__11455__11456, 0, null);
      var v__11458 = cljs.core.nth.call(null, vec__11455__11456, 1, null);
      var o__11459 = o == null ? {} : o;
      clojure.browser.dom.log.call(null, "o = ", o__11459);
      clojure.browser.dom.log.call(null, "k = ", k__11457);
      clojure.browser.dom.log.call(null, "v = ", v__11458);
      if(function() {
        var or__3824__auto____11460 = cljs.core.keyword_QMARK_.call(null, k__11457);
        if(or__3824__auto____11460) {
          return or__3824__auto____11460
        }else {
          return cljs.core.string_QMARK_.call(null, k__11457)
        }
      }()) {
        var G__11461__11462 = o__11459;
        G__11461__11462[cljs.core.name.call(null, k__11457)] = v__11458;
        return G__11461__11462
      }else {
        return null
      }
    }, {}, attrs) : null;
    clojure.browser.dom.log_obj.call(null, str_attrs__11463);
    if(cljs.core.seq.call(null, children)) {
      return cljs.core.apply.call(null, goog.dom.createDom, cljs.core.name.call(null, this$), str_attrs__11463, cljs.core.map.call(null, clojure.browser.dom._element, children))
    }else {
      return goog.dom.createDom(cljs.core.name.call(null, this$), str_attrs__11463)
    }
  };
  G__11464 = function(this$, attrs, children) {
    switch(arguments.length) {
      case 1:
        return G__11464__1.call(this, this$);
      case 2:
        return G__11464__2.call(this, this$, attrs);
      case 3:
        return G__11464__3.call(this, this$, attrs, children)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11464
}();
clojure.browser.dom.element = function() {
  var element = null;
  var element__1 = function(tag_or_text) {
    clojure.browser.dom.log.call(null, "(element ", tag_or_text, ")");
    return clojure.browser.dom._element.call(null, tag_or_text)
  };
  var element__2 = function() {
    var G__11467__delegate = function(tag, children) {
      clojure.browser.dom.log.call(null, "(element ", tag, " ", children, ")");
      var attrs__11466 = cljs.core.first.call(null, children);
      if(cljs.core.map_QMARK_.call(null, attrs__11466)) {
        return clojure.browser.dom._element.call(null, tag, attrs__11466, cljs.core.rest.call(null, children))
      }else {
        return clojure.browser.dom._element.call(null, tag, null, children)
      }
    };
    var G__11467 = function(tag, var_args) {
      var children = null;
      if(goog.isDef(var_args)) {
        children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11467__delegate.call(this, tag, children)
    };
    G__11467.cljs$lang$maxFixedArity = 1;
    G__11467.cljs$lang$applyTo = function(arglist__11468) {
      var tag = cljs.core.first(arglist__11468);
      var children = cljs.core.rest(arglist__11468);
      return G__11467__delegate(tag, children)
    };
    G__11467.cljs$lang$arity$variadic = G__11467__delegate;
    return G__11467
  }();
  element = function(tag, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return element__1.call(this, tag);
      default:
        return element__2.cljs$lang$arity$variadic(tag, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  element.cljs$lang$maxFixedArity = 1;
  element.cljs$lang$applyTo = element__2.cljs$lang$applyTo;
  element.cljs$lang$arity$1 = element__1;
  element.cljs$lang$arity$variadic = element__2.cljs$lang$arity$variadic;
  return element
}();
clojure.browser.dom.remove_children = function remove_children(id) {
  var parent__11470 = goog.dom.getElement(cljs.core.name.call(null, id));
  return goog.dom.removeChildren(parent__11470)
};
clojure.browser.dom.get_element = function get_element(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
clojure.browser.dom.html__GT_dom = function html__GT_dom(s) {
  return goog.dom.htmlToDocumentFragment(s)
};
clojure.browser.dom.insert_at = function insert_at(parent, child, index) {
  return goog.dom.insertChildAt(parent, child, index)
};
clojure.browser.dom.ensure_element = function ensure_element(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return clojure.browser.dom.get_element.call(null, e)
  }else {
    if(cljs.core.string_QMARK_.call(null, e)) {
      return clojure.browser.dom.html__GT_dom.call(null, e)
    }else {
      if("\ufdd0'else") {
        return e
      }else {
        return null
      }
    }
  }
};
clojure.browser.dom.replace_node = function replace_node(old_node, new_node) {
  var old_node__11473 = clojure.browser.dom.ensure_element.call(null, old_node);
  var new_node__11474 = clojure.browser.dom.ensure_element.call(null, new_node);
  goog.dom.replaceNode(new_node__11474, old_node__11473);
  return new_node__11474
};
clojure.browser.dom.set_text = function set_text(e, s) {
  return goog.dom.setTextContent(clojure.browser.dom.ensure_element.call(null, e), s)
};
clojure.browser.dom.get_value = function get_value(e) {
  return clojure.browser.dom.ensure_element.call(null, e).value
};
clojure.browser.dom.set_properties = function set_properties(e, m) {
  return goog.dom.setProperties(clojure.browser.dom.ensure_element.call(null, e), cljs.core.apply.call(null, goog.object.create, cljs.core.interleave.call(null, cljs.core.keys.call(null, m), cljs.core.vals.call(null, m))))
};
clojure.browser.dom.set_value = function set_value(e, v) {
  return clojure.browser.dom.set_properties.call(null, e, cljs.core.ObjMap.fromObject(["value"], {"value":v}))
};
clojure.browser.dom.click_element = function click_element(e) {
  return clojure.browser.dom.ensure_element.call(null, e).click(cljs.core.List.EMPTY)
};
goog.provide("rdfa.dom");
goog.require("cljs.core");
rdfa.dom.DomAccess = {};
rdfa.dom.get_name = function get_name(this$) {
  if(function() {
    var and__3822__auto____11479 = this$;
    if(and__3822__auto____11479) {
      return this$.rdfa$dom$DomAccess$get_name$arity$1
    }else {
      return and__3822__auto____11479
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_name$arity$1(this$)
  }else {
    var x__2363__auto____11480 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11481 = rdfa.dom.get_name[goog.typeOf(x__2363__auto____11480)];
      if(or__3824__auto____11481) {
        return or__3824__auto____11481
      }else {
        var or__3824__auto____11482 = rdfa.dom.get_name["_"];
        if(or__3824__auto____11482) {
          return or__3824__auto____11482
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-name", this$);
        }
      }
    }().call(null, this$)
  }
};
rdfa.dom.get_attr = function get_attr(this$, attr_name) {
  if(function() {
    var and__3822__auto____11487 = this$;
    if(and__3822__auto____11487) {
      return this$.rdfa$dom$DomAccess$get_attr$arity$2
    }else {
      return and__3822__auto____11487
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_attr$arity$2(this$, attr_name)
  }else {
    var x__2363__auto____11488 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11489 = rdfa.dom.get_attr[goog.typeOf(x__2363__auto____11488)];
      if(or__3824__auto____11489) {
        return or__3824__auto____11489
      }else {
        var or__3824__auto____11490 = rdfa.dom.get_attr["_"];
        if(or__3824__auto____11490) {
          return or__3824__auto____11490
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-attr", this$);
        }
      }
    }().call(null, this$, attr_name)
  }
};
rdfa.dom.get_ns_map = function get_ns_map(this$) {
  if(function() {
    var and__3822__auto____11495 = this$;
    if(and__3822__auto____11495) {
      return this$.rdfa$dom$DomAccess$get_ns_map$arity$1
    }else {
      return and__3822__auto____11495
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_ns_map$arity$1(this$)
  }else {
    var x__2363__auto____11496 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11497 = rdfa.dom.get_ns_map[goog.typeOf(x__2363__auto____11496)];
      if(or__3824__auto____11497) {
        return or__3824__auto____11497
      }else {
        var or__3824__auto____11498 = rdfa.dom.get_ns_map["_"];
        if(or__3824__auto____11498) {
          return or__3824__auto____11498
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-ns-map", this$);
        }
      }
    }().call(null, this$)
  }
};
rdfa.dom.is_root_QMARK_ = function is_root_QMARK_(this$) {
  if(function() {
    var and__3822__auto____11503 = this$;
    if(and__3822__auto____11503) {
      return this$.rdfa$dom$DomAccess$is_root_QMARK_$arity$1
    }else {
      return and__3822__auto____11503
    }
  }()) {
    return this$.rdfa$dom$DomAccess$is_root_QMARK_$arity$1(this$)
  }else {
    var x__2363__auto____11504 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11505 = rdfa.dom.is_root_QMARK_[goog.typeOf(x__2363__auto____11504)];
      if(or__3824__auto____11505) {
        return or__3824__auto____11505
      }else {
        var or__3824__auto____11506 = rdfa.dom.is_root_QMARK_["_"];
        if(or__3824__auto____11506) {
          return or__3824__auto____11506
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.is-root?", this$);
        }
      }
    }().call(null, this$)
  }
};
rdfa.dom.find_by_tag = function find_by_tag(this$, tag) {
  if(function() {
    var and__3822__auto____11511 = this$;
    if(and__3822__auto____11511) {
      return this$.rdfa$dom$DomAccess$find_by_tag$arity$2
    }else {
      return and__3822__auto____11511
    }
  }()) {
    return this$.rdfa$dom$DomAccess$find_by_tag$arity$2(this$, tag)
  }else {
    var x__2363__auto____11512 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11513 = rdfa.dom.find_by_tag[goog.typeOf(x__2363__auto____11512)];
      if(or__3824__auto____11513) {
        return or__3824__auto____11513
      }else {
        var or__3824__auto____11514 = rdfa.dom.find_by_tag["_"];
        if(or__3824__auto____11514) {
          return or__3824__auto____11514
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.find-by-tag", this$);
        }
      }
    }().call(null, this$, tag)
  }
};
rdfa.dom.get_child_elements = function get_child_elements(this$) {
  if(function() {
    var and__3822__auto____11519 = this$;
    if(and__3822__auto____11519) {
      return this$.rdfa$dom$DomAccess$get_child_elements$arity$1
    }else {
      return and__3822__auto____11519
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_child_elements$arity$1(this$)
  }else {
    var x__2363__auto____11520 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11521 = rdfa.dom.get_child_elements[goog.typeOf(x__2363__auto____11520)];
      if(or__3824__auto____11521) {
        return or__3824__auto____11521
      }else {
        var or__3824__auto____11522 = rdfa.dom.get_child_elements["_"];
        if(or__3824__auto____11522) {
          return or__3824__auto____11522
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-child-elements", this$);
        }
      }
    }().call(null, this$)
  }
};
rdfa.dom.get_text = function get_text(this$) {
  if(function() {
    var and__3822__auto____11527 = this$;
    if(and__3822__auto____11527) {
      return this$.rdfa$dom$DomAccess$get_text$arity$1
    }else {
      return and__3822__auto____11527
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_text$arity$1(this$)
  }else {
    var x__2363__auto____11528 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11529 = rdfa.dom.get_text[goog.typeOf(x__2363__auto____11528)];
      if(or__3824__auto____11529) {
        return or__3824__auto____11529
      }else {
        var or__3824__auto____11530 = rdfa.dom.get_text["_"];
        if(or__3824__auto____11530) {
          return or__3824__auto____11530
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-text", this$);
        }
      }
    }().call(null, this$)
  }
};
rdfa.dom.get_inner_xml = function get_inner_xml(this$, xmlns_map, lang) {
  if(function() {
    var and__3822__auto____11535 = this$;
    if(and__3822__auto____11535) {
      return this$.rdfa$dom$DomAccess$get_inner_xml$arity$3
    }else {
      return and__3822__auto____11535
    }
  }()) {
    return this$.rdfa$dom$DomAccess$get_inner_xml$arity$3(this$, xmlns_map, lang)
  }else {
    var x__2363__auto____11536 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11537 = rdfa.dom.get_inner_xml[goog.typeOf(x__2363__auto____11536)];
      if(or__3824__auto____11537) {
        return or__3824__auto____11537
      }else {
        var or__3824__auto____11538 = rdfa.dom.get_inner_xml["_"];
        if(or__3824__auto____11538) {
          return or__3824__auto____11538
        }else {
          throw cljs.core.missing_protocol.call(null, "DomAccess.get-inner-xml", this$);
        }
      }
    }().call(null, this$, xmlns_map, lang)
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11599 = s;
      var limit__11600 = limit;
      var parts__11601 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11600, 1)) {
          return cljs.core.conj.call(null, parts__11601, s__11599)
        }else {
          var temp__3971__auto____11602 = cljs.core.re_find.call(null, re, s__11599);
          if(cljs.core.truth_(temp__3971__auto____11602)) {
            var m__11603 = temp__3971__auto____11602;
            var index__11604 = s__11599.indexOf(m__11603);
            var G__11605 = s__11599.substring(index__11604 + cljs.core.count.call(null, m__11603));
            var G__11606 = limit__11600 - 1;
            var G__11607 = cljs.core.conj.call(null, parts__11601, s__11599.substring(0, index__11604));
            s__11599 = G__11605;
            limit__11600 = G__11606;
            parts__11601 = G__11607;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11601, s__11599)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11611 = s.length;
  while(true) {
    if(index__11611 === 0) {
      return""
    }else {
      var ch__11612 = cljs.core._lookup.call(null, s, index__11611 - 1, null);
      if(function() {
        var or__3824__auto____11613 = cljs.core._EQ_.call(null, ch__11612, "\n");
        if(or__3824__auto____11613) {
          return or__3824__auto____11613
        }else {
          return cljs.core._EQ_.call(null, ch__11612, "\r")
        }
      }()) {
        var G__11614 = index__11611 - 1;
        index__11611 = G__11614;
        continue
      }else {
        return s.substring(0, index__11611)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11618 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11619 = cljs.core.not.call(null, s__11618);
    if(or__3824__auto____11619) {
      return or__3824__auto____11619
    }else {
      var or__3824__auto____11620 = cljs.core._EQ_.call(null, "", s__11618);
      if(or__3824__auto____11620) {
        return or__3824__auto____11620
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11618)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11627 = new goog.string.StringBuffer;
  var length__11628 = s.length;
  var index__11629 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11628, index__11629)) {
      return buffer__11627.toString()
    }else {
      var ch__11630 = s.charAt(index__11629);
      var temp__3971__auto____11631 = cljs.core._lookup.call(null, cmap, ch__11630, null);
      if(cljs.core.truth_(temp__3971__auto____11631)) {
        var replacement__11632 = temp__3971__auto____11631;
        buffer__11627.append([cljs.core.str(replacement__11632)].join(""))
      }else {
        buffer__11627.append(ch__11630)
      }
      var G__11633 = index__11629 + 1;
      index__11629 = G__11633;
      continue
    }
    break
  }
};
goog.provide("rdfa.stddom");
goog.require("cljs.core");
goog.require("rdfa.dom");
goog.require("goog.dom");
goog.require("clojure.string");
rdfa.stddom.node_list = function node_list(nl) {
  if(!(nl == null)) {
    var index__11541 = nl.length - 1;
    var nodes__11542 = null;
    while(true) {
      if(cljs.core._EQ_.call(null, index__11541, -1)) {
        return nodes__11542
      }else {
        var G__11543 = index__11541 - 1;
        var G__11544 = cljs.core.cons.call(null, nl.item(index__11541), nodes__11542);
        index__11541 = G__11543;
        nodes__11542 = G__11544;
        continue
      }
      break
    }
  }else {
    return null
  }
};
rdfa.stddom.serialize_to_xml = function serialize_to_xml(node) {
  try {
    return(new XMLSerializer).serializeToString(node)
  }catch(e11550) {
    if(cljs.core.instance_QMARK_.call(null, Exception, e11550)) {
      var e__11551 = e11550;
      try {
        return node.xml
      }catch(e11552) {
        if(cljs.core.instance_QMARK_.call(null, Exception, e11552)) {
          var e__11553 = e11552;
          return null
        }else {
          if("\ufdd0'else") {
            throw e11552;
          }else {
            return null
          }
        }
      }
    }else {
      if("\ufdd0'else") {
        throw e11550;
      }else {
        return null
      }
    }
  }
};
Node.prototype.rdfa$dom$DomAccess$ = true;
Node.prototype.rdfa$dom$DomAccess$get_name$arity$1 = function(this$) {
  return this$.nodeName
};
Node.prototype.rdfa$dom$DomAccess$get_attr$arity$2 = function(this$, attr_name) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11554 = this$.hasAttribute;
    if(cljs.core.truth_(and__3822__auto____11554)) {
      return this$.hasAttribute(attr_name)
    }else {
      return and__3822__auto____11554
    }
  }())) {
    return this$.getAttribute(attr_name)
  }else {
    return null
  }
};
Node.prototype.rdfa$dom$DomAccess$get_ns_map$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
    var iter__2462__auto____11561 = function iter__11555(s__11556) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11556__11559 = s__11556;
        while(true) {
          if(cljs.core.seq.call(null, s__11556__11559)) {
            var attr__11560 = cljs.core.first.call(null, s__11556__11559);
            if(cljs.core._EQ_.call(null, cljs.core.subs.call(null, rdfa.dom.get_name.call(null, attr__11560), 0, 6), "xmlns:")) {
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.subs.call(null, rdfa.dom.get_name.call(null, attr__11560), 6), attr__11560.value], true), iter__11555.call(null, cljs.core.rest.call(null, s__11556__11559)))
            }else {
              var G__11588 = cljs.core.rest.call(null, s__11556__11559);
              s__11556__11559 = G__11588;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____11561.call(null, rdfa.stddom.node_list.call(null, this$.attributes))
  }())
};
Node.prototype.rdfa$dom$DomAccess$is_root_QMARK_$arity$1 = function(this$) {
  var temp__3971__auto____11562 = this$.ownerDocument;
  if(cljs.core.truth_(temp__3971__auto____11562)) {
    var owner_document__11563 = temp__3971__auto____11562;
    return cljs.core._EQ_.call(null, this$, owner_document__11563.documentElement)
  }else {
    return null
  }
};
Node.prototype.rdfa$dom$DomAccess$find_by_tag$arity$2 = function(this$, tag) {
  return rdfa.stddom.node_list.call(null, this$.getElementsByTagName(tag))
};
Node.prototype.rdfa$dom$DomAccess$get_child_elements$arity$1 = function(this$) {
  return cljs.core.filter.call(null, function(p1__11545_SHARP_) {
    return cljs.core._EQ_.call(null, p1__11545_SHARP_.nodeType, Node.ELEMENT_NODE)
  }, rdfa.stddom.node_list.call(null, this$.childNodes))
};
Node.prototype.rdfa$dom$DomAccess$get_text$arity$1 = function(this$) {
  var get_values__11564 = function get_values(node) {
    return cljs.core.cons.call(null, cljs.core._EQ_.call(null, node.nodeType, Node.TEXT_NODE) ? node.nodeValue : null, cljs.core.map.call(null, get_values, rdfa.stddom.node_list.call(null, node.childNodes)))
  };
  return clojure.string.join.call(null, cljs.core.flatten.call(null, get_values__11564.call(null, this$)))
};
Node.prototype.rdfa$dom$DomAccess$get_inner_xml$arity$3 = function(this$, xmlns_map, lang) {
  var nodes__11565 = rdfa.stddom.node_list.call(null, this$.childNodes);
  var frag__11566 = goog.dom.htmlToDocumentFragment("");
  while(true) {
    if(cljs.core.seq.call(null, nodes__11565)) {
      var G__11589 = cljs.core.rest.call(null, nodes__11565);
      var G__11590 = function() {
        var node__11567 = cljs.core.first.call(null, nodes__11565);
        if(cljs.core._EQ_.call(null, node__11567.nodeType, Node.ELEMENT_NODE)) {
          if(cljs.core.truth_(cljs.core.not_empty.call(null, lang))) {
            node__11567.setAttribute("xml:lang", lang)
          }else {
          }
          var G__11568__11569 = cljs.core.seq.call(null, xmlns_map);
          if(G__11568__11569) {
            var G__11571__11573 = cljs.core.first.call(null, G__11568__11569);
            var vec__11572__11574 = G__11571__11573;
            var pfx__11575 = cljs.core.nth.call(null, vec__11572__11574, 0, null);
            var iri__11576 = cljs.core.nth.call(null, vec__11572__11574, 1, null);
            var G__11568__11577 = G__11568__11569;
            var G__11571__11578 = G__11571__11573;
            var G__11568__11579 = G__11568__11577;
            while(true) {
              var vec__11580__11581 = G__11571__11578;
              var pfx__11582 = cljs.core.nth.call(null, vec__11580__11581, 0, null);
              var iri__11583 = cljs.core.nth.call(null, vec__11580__11581, 1, null);
              var G__11568__11584 = G__11568__11579;
              var qname__11585 = [cljs.core.str("xmlns"), cljs.core.str(cljs.core.truth_(pfx__11582) ? ":" : null), cljs.core.str(pfx__11582)].join("");
              node__11567.setAttribute(qname__11585, iri__11583);
              var temp__3974__auto____11586 = cljs.core.next.call(null, G__11568__11584);
              if(temp__3974__auto____11586) {
                var G__11568__11587 = temp__3974__auto____11586;
                var G__11591 = cljs.core.first.call(null, G__11568__11587);
                var G__11592 = G__11568__11587;
                G__11571__11578 = G__11591;
                G__11568__11579 = G__11592;
                continue
              }else {
              }
              break
            }
          }else {
          }
          frag__11566.appendChild(node__11567)
        }else {
        }
        return frag__11566
      }();
      nodes__11565 = G__11589;
      frag__11566 = G__11590;
      continue
    }else {
      return rdfa.stddom.serialize_to_xml.call(null, frag__11566)
    }
    break
  }
};
goog.provide("rdfa.profiles");
goog.require("cljs.core");
goog.require("rdfa.dom");
var xsd__12443 = "http://www.w3.org/2001/XMLSchema#";
rdfa.profiles.xsd_COLON_date = [cljs.core.str(xsd__12443), cljs.core.str("date")].join("");
rdfa.profiles.xsd_COLON_time = [cljs.core.str(xsd__12443), cljs.core.str("time")].join("");
rdfa.profiles.xsd_COLON_dateTime = [cljs.core.str(xsd__12443), cljs.core.str("dateTime")].join("");
rdfa.profiles.xsd_COLON_duration = [cljs.core.str(xsd__12443), cljs.core.str("duration")].join("");
rdfa.profiles.xsd_COLON_gYear = [cljs.core.str(xsd__12443), cljs.core.str("gYear")].join("");
rdfa.profiles.xsd_COLON_gYearMonth = [cljs.core.str(xsd__12443), cljs.core.str("gYearMonth")].join("");
rdfa.profiles.xml_context = cljs.core.ObjMap.fromObject(["\ufdd0'iri", "\ufdd0'prefix-map", "\ufdd0'term-map", "\ufdd0'vocab"], {"\ufdd0'iri":"http://www.w3.org/2011/rdfa-context/rdfa-1.1", "\ufdd0'prefix-map":cljs.core.ObjMap.fromObject(["cc", "schema", "grddl", "rev", "owl", "ical", "wdr", "vcard", "xhv", "dcterms", "xsd", "sioc", "gr", "rdfa", "wdrs", "foaf", "rif", "skosxl", "rdf", "ma", "void", "v", "xml", "ctag", "og", "skos", "dc", "rdfs"], {"cc":"http://creativecommons.org/ns#", "schema":"http://schema.org/", 
"grddl":"http://www.w3.org/2003/g/data-view#", "rev":"http://purl.org/stuff/rev#", "owl":"http://www.w3.org/2002/07/owl#", "ical":"http://www.w3.org/2002/12/cal/icaltzd#", "wdr":"http://www.w3.org/2007/05/powder#", "vcard":"http://www.w3.org/2006/vcard/ns#", "xhv":"http://www.w3.org/1999/xhtml/vocab#", "dcterms":"http://purl.org/dc/terms/", "xsd":"http://www.w3.org/2001/XMLSchema#", "sioc":"http://rdfs.org/sioc/ns#", "gr":"http://purl.org/goodrelations/v1#", "rdfa":"http://www.w3.org/ns/rdfa#", "wdrs":"http://www.w3.org/2007/05/powder-s#", 
"foaf":"http://xmlns.com/foaf/0.1/", "rif":"http://www.w3.org/2007/rif#", "skosxl":"http://www.w3.org/2008/05/skos-xl#", "rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#", "ma":"http://www.w3.org/ns/ma-ont#", "void":"http://rdfs.org/ns/void#", "v":"http://rdf.data-vocabulary.org/#", "xml":"http://www.w3.org/XML/1998/namespace", "ctag":"http://commontag.org/ns#", "og":"http://ogp.me/ns#", "skos":"http://www.w3.org/2004/02/skos/core#", "dc":"http://purl.org/dc/terms/", "rdfs":"http://www.w3.org/2000/01/rdf-schema#"}), 
"\ufdd0'term-map":cljs.core.ObjMap.fromObject(["describedby", "license", "role"], {"describedby":"http://www.w3.org/2007/05/powder-s#describedby", "license":"http://www.w3.org/1999/xhtml/vocab#license", "role":"http://www.w3.org/1999/xhtml/vocab#role"}), "\ufdd0'vocab":null});
rdfa.profiles.xhtml_context = cljs.core.ObjMap.fromObject(["\ufdd0'iri", "\ufdd0'prefix-map", "\ufdd0'term-map", "\ufdd0'vocab"], {"\ufdd0'iri":"http://www.w3.org/2011/rdfa-context/xhtml-rdfa-1.1", "\ufdd0'prefix-map":(new cljs.core.Keyword("\ufdd0'prefix-map")).call(null, rdfa.profiles.xml_context), "\ufdd0'term-map":cljs.core.merge.call(null, (new cljs.core.Keyword("\ufdd0'term-map")).call(null, rdfa.profiles.xml_context), cljs.core.ObjMap.fromObject(["license", "help", "start", "subsection", "meta", 
"section", "copyright", "p3pv1", "appendix", "chapter", "stylesheet", "first", "index", "prev", "next", "top", "bookmark", "last", "cite", "previous", "icon", "alternate", "contents", "up", "glossary"], {"license":"http://www.w3.org/1999/xhtml/vocab#license", "help":"http://www.w3.org/1999/xhtml/vocab#help", "start":"http://www.w3.org/1999/xhtml/vocab#start", "subsection":"http://www.w3.org/1999/xhtml/vocab#subsection", "meta":"http://www.w3.org/1999/xhtml/vocab#meta", "section":"http://www.w3.org/1999/xhtml/vocab#section", 
"copyright":"http://www.w3.org/1999/xhtml/vocab#copyright", "p3pv1":"http://www.w3.org/1999/xhtml/vocab#p3pv1", "appendix":"http://www.w3.org/1999/xhtml/vocab#appendix", "chapter":"http://www.w3.org/1999/xhtml/vocab#chapter", "stylesheet":"http://www.w3.org/1999/xhtml/vocab#stylesheet", "first":"http://www.w3.org/1999/xhtml/vocab#first", "index":"http://www.w3.org/1999/xhtml/vocab#index", "prev":"http://www.w3.org/1999/xhtml/vocab#prev", "next":"http://www.w3.org/1999/xhtml/vocab#next", "top":"http://www.w3.org/1999/xhtml/vocab#top", 
"bookmark":"http://www.w3.org/1999/xhtml/vocab#bookmark", "last":"http://www.w3.org/1999/xhtml/vocab#last", "cite":"http://www.w3.org/1999/xhtml/vocab#cite", "previous":"http://www.w3.org/1999/xhtml/vocab#previous", "icon":"http://www.w3.org/1999/xhtml/vocab#icon", "alternate":"http://www.w3.org/1999/xhtml/vocab#alternate", "contents":"http://www.w3.org/1999/xhtml/vocab#contents", "up":"http://www.w3.org/1999/xhtml/vocab#up", "glossary":"http://www.w3.org/1999/xhtml/vocab#glossary"})), "\ufdd0'vocab":null});
rdfa.profiles.contexts = cljs.core.ObjMap.fromObject(["\ufdd0'xml", "\ufdd0'xhtml", "\ufdd0'html"], {"\ufdd0'xml":rdfa.profiles.xml_context, "\ufdd0'xhtml":rdfa.profiles.xhtml_context, "\ufdd0'html":rdfa.profiles.xhtml_context});
rdfa.profiles.detect_host_language = function() {
  var detect_host_language__delegate = function(p__12444) {
    var map__12452__12453 = p__12444;
    var map__12452__12454 = cljs.core.seq_QMARK_.call(null, map__12452__12453) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12452__12453) : map__12452__12453;
    var xmlns__12455 = cljs.core._lookup.call(null, map__12452__12454, "\ufdd0'xmlns", null);
    var doctype__12456 = cljs.core._lookup.call(null, map__12452__12454, "\ufdd0'doctype", null);
    var mime_type__12457 = cljs.core._lookup.call(null, map__12452__12454, "\ufdd0'mime-type", null);
    var location__12458 = cljs.core._lookup.call(null, map__12452__12454, "\ufdd0'location", null);
    if(cljs.core.truth_(location__12458.endsWith(".html"))) {
      return"\ufdd0'html"
    }else {
      if(cljs.core.truth_(location__12458.endsWith(".xhtml"))) {
        return"\ufdd0'xhtml"
      }else {
        if("\ufdd0'else") {
          return"\ufdd0'xml"
        }else {
          return null
        }
      }
    }
  };
  var detect_host_language = function(var_args) {
    var p__12444 = null;
    if(goog.isDef(var_args)) {
      p__12444 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return detect_host_language__delegate.call(this, p__12444)
  };
  detect_host_language.cljs$lang$maxFixedArity = 0;
  detect_host_language.cljs$lang$applyTo = function(arglist__12459) {
    var p__12444 = cljs.core.seq(arglist__12459);
    return detect_host_language__delegate(p__12444)
  };
  detect_host_language.cljs$lang$arity$variadic = detect_host_language__delegate;
  return detect_host_language
}();
rdfa.profiles.get_host_env = function get_host_env(profile, root) {
  var base__12466 = function() {
    var temp__3971__auto____12464 = cljs.core.first.call(null, rdfa.dom.find_by_tag.call(null, root, "base"));
    if(cljs.core.truth_(temp__3971__auto____12464)) {
      var el__12465 = temp__3971__auto____12464;
      return rdfa.dom.get_attr.call(null, el__12465, "href")
    }else {
      return null
    }
  }();
  var context__12467 = rdfa.profiles.contexts.call(null, profile);
  return cljs.core.assoc.call(null, context__12467, "\ufdd0'profile", profile, "\ufdd0'base", base__12466)
};
rdfa.profiles.get_datetime_datatype = function get_datetime_datatype(repr) {
  if(repr == null) {
    return null
  }else {
    if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\d{4,}$/, repr))) {
      return rdfa.profiles.xsd_COLON_gYear
    }else {
      if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\d{4,}-\d\d$/, repr))) {
        return rdfa.profiles.xsd_COLON_gYearMonth
      }else {
        if(cljs.core.truth_(cljs.core.re_matches.call(null, /^T?\d{2}:\d{2}.*/, repr))) {
          return rdfa.profiles.xsd_COLON_time
        }else {
          if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\d{4,}-\d\d-\d\dT\d{2}.*/, repr))) {
            return rdfa.profiles.xsd_COLON_dateTime
          }else {
            if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\d{4,}-\d\d-\d\d.*/, repr))) {
              return rdfa.profiles.xsd_COLON_date
            }else {
              if(cljs.core.truth_(cljs.core.re_matches.call(null, /^P\d+[YMDTHMS0-9]*/, repr))) {
                return rdfa.profiles.xsd_COLON_duration
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
rdfa.profiles.extended_data = function extended_data(env, data) {
  var profile__12483 = env.call(null, "\ufdd0'profile");
  var resources__12484 = data.call(null, "\ufdd0'resources");
  var el__12485 = data.call(null, "\ufdd0'element");
  var tag__12486 = rdfa.dom.get_name.call(null, el__12485);
  var datetime__12488 = function() {
    var or__3824__auto____12487 = rdfa.dom.get_attr.call(null, el__12485, "datetime");
    if(cljs.core.truth_(or__3824__auto____12487)) {
      return or__3824__auto____12487
    }else {
      if(cljs.core._EQ_.call(null, tag__12486, "time")) {
        return rdfa.dom.get_text.call(null, el__12485)
      }else {
        return null
      }
    }
  }();
  return cljs.core.assoc.call(null, data, "\ufdd0'base", cljs.core._EQ_.call(null, profile__12483, "\ufdd0'xml") ? rdfa.dom.get_attr.call(null, el__12485, "xml:base") : null, "\ufdd0'about", function() {
    var or__3824__auto____12489 = data.call(null, "\ufdd0'about");
    if(cljs.core.truth_(or__3824__auto____12489)) {
      return or__3824__auto____12489
    }else {
      if(cljs.core.truth_(function() {
        var and__3822__auto____12491 = function() {
          var or__3824__auto____12490 = cljs.core._EQ_.call(null, tag__12486, "head");
          if(or__3824__auto____12490) {
            return or__3824__auto____12490
          }else {
            return cljs.core._EQ_.call(null, tag__12486, "body")
          }
        }();
        if(cljs.core.truth_(and__3822__auto____12491)) {
          return cljs.core.empty_QMARK_.call(null, resources__12484)
        }else {
          return and__3822__auto____12491
        }
      }())) {
        return(new cljs.core.Keyword("\ufdd0'id")).call(null, env.call(null, "\ufdd0'parent-object"))
      }else {
        return null
      }
    }
  }(), "\ufdd0'lang", function() {
    var or__3824__auto____12492 = data.call(null, "\ufdd0'lang");
    if(cljs.core.truth_(or__3824__auto____12492)) {
      return or__3824__auto____12492
    }else {
      return rdfa.dom.get_attr.call(null, el__12485, "lang")
    }
  }(), "\ufdd0'content", function() {
    var or__3824__auto____12493 = datetime__12488;
    if(cljs.core.truth_(or__3824__auto____12493)) {
      return or__3824__auto____12493
    }else {
      var or__3824__auto____12494 = cljs.core._EQ_.call(null, tag__12486, "data") ? rdfa.dom.get_attr.call(null, el__12485, "value") : null;
      if(cljs.core.truth_(or__3824__auto____12494)) {
        return or__3824__auto____12494
      }else {
        return data.call(null, "\ufdd0'content")
      }
    }
  }(), "\ufdd0'datatype", function() {
    var or__3824__auto____12495 = data.call(null, "\ufdd0'datatype");
    if(cljs.core.truth_(or__3824__auto____12495)) {
      return or__3824__auto____12495
    }else {
      return rdfa.profiles.get_datetime_datatype.call(null, datetime__12488)
    }
  }(), "\ufdd0'resources", function() {
    var temp__3971__auto____12496 = rdfa.dom.get_attr.call(null, el__12485, "data");
    if(cljs.core.truth_(temp__3971__auto____12496)) {
      var data_res__12497 = temp__3971__auto____12496;
      return cljs.core.conj.call(null, resources__12484, data_res__12497)
    }else {
      return resources__12484
    }
  }())
};
goog.provide("rdfa.utils");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.Uri.reDisallowedInRelativePath_ = /[\#\?]/;
rdfa.utils.resolve_iri = function resolve_iri(iref, base) {
  if(cljs.core.truth_(cljs.core.not_empty.call(null, iref))) {
    return(new goog.Uri(base)).resolve(new goog.Uri(iref)).toString()
  }else {
    return base
  }
};
goog.provide("rdfa.core");
goog.require("cljs.core");
goog.require("rdfa.profiles");
goog.require("rdfa.utils");
goog.require("rdfa.dom");
goog.require("clojure.string");
rdfa.core.BNode = function(id, __meta, __extmap) {
  this.id = id;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
rdfa.core.BNode.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__11676 = this;
  var h__2192__auto____11677 = this__11676.__hash;
  if(!(h__2192__auto____11677 == null)) {
    return h__2192__auto____11677
  }else {
    var h__2192__auto____11678 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__11676.__hash = h__2192__auto____11678;
    return h__2192__auto____11678
  }
};
rdfa.core.BNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__11679 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
rdfa.core.BNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k11674, else__2326__auto__) {
  var this__11680 = this;
  if(k11674 === "\ufdd0'id") {
    return this__11680.id
  }else {
    if("\ufdd0'else") {
      return cljs.core._lookup.call(null, this__11680.__extmap, k11674, else__2326__auto__)
    }else {
      return null
    }
  }
};
rdfa.core.BNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__11673) {
  var this__11681 = this;
  var pred__11682__11685 = cljs.core.identical_QMARK_;
  var expr__11683__11686 = k__2331__auto__;
  if(pred__11682__11685.call(null, "\ufdd0'id", expr__11683__11686)) {
    return new rdfa.core.BNode(G__11673, this__11681.__meta, this__11681.__extmap, null)
  }else {
    return new rdfa.core.BNode(this__11681.id, this__11681.__meta, cljs.core.assoc.call(null, this__11681.__extmap, k__2331__auto__, G__11673), null)
  }
};
rdfa.core.BNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__11687 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
rdfa.core.BNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__11688 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'id", this__11688.id)], true), this__11688.__extmap))
};
rdfa.core.BNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__11689 = this;
  var pr_pair__2339__auto____11690 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____11690, [cljs.core.str("#"), cljs.core.str("BNode"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'id", this__11689.id)], true), this__11689.__extmap))
};
rdfa.core.BNode.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__11691 = this;
  return 1 + cljs.core.count.call(null, this__11691.__extmap)
};
rdfa.core.BNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__11692 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____11693 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____11693)) {
      var and__3822__auto____11694 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____11694) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____11694
      }
    }else {
      return and__3822__auto____11693
    }
  }())) {
    return true
  }else {
    return false
  }
};
rdfa.core.BNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__11673) {
  var this__11695 = this;
  return new rdfa.core.BNode(this__11695.id, G__11673, this__11695.__extmap, this__11695.__hash)
};
rdfa.core.BNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__11696 = this;
  return this__11696.__meta
};
rdfa.core.BNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__11697 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'id"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__11697.__meta), k__2333__auto__)
  }else {
    return new rdfa.core.BNode(this__11697.id, this__11697.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11697.__extmap, k__2333__auto__)), null)
  }
};
rdfa.core.BNode.cljs$lang$type = true;
rdfa.core.BNode.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "rdfa.core/BNode")
};
rdfa.core.__GT_BNode = function __GT_BNode(id) {
  return new rdfa.core.BNode(id)
};
rdfa.core.map__GT_BNode = function map__GT_BNode(G__11675) {
  return new rdfa.core.BNode((new cljs.core.Keyword("\ufdd0'id")).call(null, G__11675), null, cljs.core.dissoc.call(null, G__11675, "\ufdd0'id"))
};
rdfa.core.BNode;
rdfa.core.IRI = function(id, __meta, __extmap) {
  this.id = id;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
rdfa.core.IRI.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__11701 = this;
  var h__2192__auto____11702 = this__11701.__hash;
  if(!(h__2192__auto____11702 == null)) {
    return h__2192__auto____11702
  }else {
    var h__2192__auto____11703 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__11701.__hash = h__2192__auto____11703;
    return h__2192__auto____11703
  }
};
rdfa.core.IRI.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__11704 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
rdfa.core.IRI.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k11699, else__2326__auto__) {
  var this__11705 = this;
  if(k11699 === "\ufdd0'id") {
    return this__11705.id
  }else {
    if("\ufdd0'else") {
      return cljs.core._lookup.call(null, this__11705.__extmap, k11699, else__2326__auto__)
    }else {
      return null
    }
  }
};
rdfa.core.IRI.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__11698) {
  var this__11706 = this;
  var pred__11707__11710 = cljs.core.identical_QMARK_;
  var expr__11708__11711 = k__2331__auto__;
  if(pred__11707__11710.call(null, "\ufdd0'id", expr__11708__11711)) {
    return new rdfa.core.IRI(G__11698, this__11706.__meta, this__11706.__extmap, null)
  }else {
    return new rdfa.core.IRI(this__11706.id, this__11706.__meta, cljs.core.assoc.call(null, this__11706.__extmap, k__2331__auto__, G__11698), null)
  }
};
rdfa.core.IRI.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__11712 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
rdfa.core.IRI.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__11713 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'id", this__11713.id)], true), this__11713.__extmap))
};
rdfa.core.IRI.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__11714 = this;
  var pr_pair__2339__auto____11715 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____11715, [cljs.core.str("#"), cljs.core.str("IRI"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'id", this__11714.id)], true), this__11714.__extmap))
};
rdfa.core.IRI.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__11716 = this;
  return 1 + cljs.core.count.call(null, this__11716.__extmap)
};
rdfa.core.IRI.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__11717 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____11718 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____11718)) {
      var and__3822__auto____11719 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____11719) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____11719
      }
    }else {
      return and__3822__auto____11718
    }
  }())) {
    return true
  }else {
    return false
  }
};
rdfa.core.IRI.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__11698) {
  var this__11720 = this;
  return new rdfa.core.IRI(this__11720.id, G__11698, this__11720.__extmap, this__11720.__hash)
};
rdfa.core.IRI.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__11721 = this;
  return this__11721.__meta
};
rdfa.core.IRI.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__11722 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'id"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__11722.__meta), k__2333__auto__)
  }else {
    return new rdfa.core.IRI(this__11722.id, this__11722.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11722.__extmap, k__2333__auto__)), null)
  }
};
rdfa.core.IRI.cljs$lang$type = true;
rdfa.core.IRI.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "rdfa.core/IRI")
};
rdfa.core.__GT_IRI = function __GT_IRI(id) {
  return new rdfa.core.IRI(id)
};
rdfa.core.map__GT_IRI = function map__GT_IRI(G__11700) {
  return new rdfa.core.IRI((new cljs.core.Keyword("\ufdd0'id")).call(null, G__11700), null, cljs.core.dissoc.call(null, G__11700, "\ufdd0'id"))
};
rdfa.core.IRI;
rdfa.core.Literal = function(value, tag, __meta, __extmap) {
  this.value = value;
  this.tag = tag;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
rdfa.core.Literal.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2318__auto__) {
  var this__11726 = this;
  var h__2192__auto____11727 = this__11726.__hash;
  if(!(h__2192__auto____11727 == null)) {
    return h__2192__auto____11727
  }else {
    var h__2192__auto____11728 = cljs.core.hash_imap.call(null, this__2318__auto__);
    this__11726.__hash = h__2192__auto____11728;
    return h__2192__auto____11728
  }
};
rdfa.core.Literal.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2323__auto__, k__2324__auto__) {
  var this__11729 = this;
  return this__2323__auto__.cljs$core$ILookup$_lookup$arity$3(this__2323__auto__, k__2324__auto__, null)
};
rdfa.core.Literal.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2325__auto__, k11724, else__2326__auto__) {
  var this__11730 = this;
  if(k11724 === "\ufdd0'value") {
    return this__11730.value
  }else {
    if(k11724 === "\ufdd0'tag") {
      return this__11730.tag
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__11730.__extmap, k11724, else__2326__auto__)
      }else {
        return null
      }
    }
  }
};
rdfa.core.Literal.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2330__auto__, k__2331__auto__, G__11723) {
  var this__11731 = this;
  var pred__11732__11735 = cljs.core.identical_QMARK_;
  var expr__11733__11736 = k__2331__auto__;
  if(pred__11732__11735.call(null, "\ufdd0'value", expr__11733__11736)) {
    return new rdfa.core.Literal(G__11723, this__11731.tag, this__11731.__meta, this__11731.__extmap, null)
  }else {
    if(pred__11732__11735.call(null, "\ufdd0'tag", expr__11733__11736)) {
      return new rdfa.core.Literal(this__11731.value, G__11723, this__11731.__meta, this__11731.__extmap, null)
    }else {
      return new rdfa.core.Literal(this__11731.value, this__11731.tag, this__11731.__meta, cljs.core.assoc.call(null, this__11731.__extmap, k__2331__auto__, G__11723), null)
    }
  }
};
rdfa.core.Literal.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2328__auto__, entry__2329__auto__) {
  var this__11737 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2329__auto__)) {
    return this__2328__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2328__auto__, cljs.core._nth.call(null, entry__2329__auto__, 0), cljs.core._nth.call(null, entry__2329__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2328__auto__, entry__2329__auto__)
  }
};
rdfa.core.Literal.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2335__auto__) {
  var this__11738 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'value", this__11738.value), cljs.core.vector.call(null, "\ufdd0'tag", this__11738.tag)], true), this__11738.__extmap))
};
rdfa.core.Literal.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2337__auto__, opts__2338__auto__) {
  var this__11739 = this;
  var pr_pair__2339__auto____11740 = function(keyval__2340__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2338__auto__, keyval__2340__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2339__auto____11740, [cljs.core.str("#"), cljs.core.str("Literal"), cljs.core.str("{")].join(""), ", ", "}", opts__2338__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'value", this__11739.value), cljs.core.vector.call(null, "\ufdd0'tag", this__11739.tag)], true), this__11739.__extmap))
};
rdfa.core.Literal.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2327__auto__) {
  var this__11741 = this;
  return 2 + cljs.core.count.call(null, this__11741.__extmap)
};
rdfa.core.Literal.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2319__auto__, other__2320__auto__) {
  var this__11742 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____11743 = other__2320__auto__;
    if(cljs.core.truth_(and__3822__auto____11743)) {
      var and__3822__auto____11744 = this__2319__auto__.constructor === other__2320__auto__.constructor;
      if(and__3822__auto____11744) {
        return cljs.core.equiv_map.call(null, this__2319__auto__, other__2320__auto__)
      }else {
        return and__3822__auto____11744
      }
    }else {
      return and__3822__auto____11743
    }
  }())) {
    return true
  }else {
    return false
  }
};
rdfa.core.Literal.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2322__auto__, G__11723) {
  var this__11745 = this;
  return new rdfa.core.Literal(this__11745.value, this__11745.tag, G__11723, this__11745.__extmap, this__11745.__hash)
};
rdfa.core.Literal.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2321__auto__) {
  var this__11746 = this;
  return this__11746.__meta
};
rdfa.core.Literal.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2332__auto__, k__2333__auto__) {
  var this__11747 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["\ufdd0'value", "\ufdd0'tag"]), k__2333__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2332__auto__), this__11747.__meta), k__2333__auto__)
  }else {
    return new rdfa.core.Literal(this__11747.value, this__11747.tag, this__11747.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11747.__extmap, k__2333__auto__)), null)
  }
};
rdfa.core.Literal.cljs$lang$type = true;
rdfa.core.Literal.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "rdfa.core/Literal")
};
rdfa.core.__GT_Literal = function __GT_Literal(value, tag) {
  return new rdfa.core.Literal(value, tag)
};
rdfa.core.map__GT_Literal = function map__GT_Literal(G__11725) {
  return new rdfa.core.Literal((new cljs.core.Keyword("\ufdd0'value")).call(null, G__11725), (new cljs.core.Keyword("\ufdd0'tag")).call(null, G__11725), null, cljs.core.dissoc.call(null, G__11725, "\ufdd0'value", "\ufdd0'tag"))
};
rdfa.core.Literal;
rdfa.core.gen_bnode_prefix = "GEN";
rdfa.core.bnode_counter = cljs.core.atom.call(null, 0);
rdfa.core.next_bnode = function next_bnode() {
  cljs.core.swap_BANG_.call(null, rdfa.core.bnode_counter, cljs.core.inc);
  return new rdfa.core.BNode([cljs.core.str(rdfa.core.gen_bnode_prefix), cljs.core.str(cljs.core.deref.call(null, rdfa.core.bnode_counter))].join(""))
};
var rdf__11748 = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
rdfa.core.rdf_COLON_type = new rdfa.core.IRI([cljs.core.str(rdf__11748), cljs.core.str("type")].join(""));
rdfa.core.rdf_COLON_XMLLiteral = new rdfa.core.IRI([cljs.core.str(rdf__11748), cljs.core.str("XMLLiteral")].join(""));
rdfa.core.rdf_COLON_first = new rdfa.core.IRI([cljs.core.str(rdf__11748), cljs.core.str("first")].join(""));
rdfa.core.rdf_COLON_rest = new rdfa.core.IRI([cljs.core.str(rdf__11748), cljs.core.str("rest")].join(""));
rdfa.core.rdf_COLON_nil = new rdfa.core.IRI([cljs.core.str(rdf__11748), cljs.core.str("nil")].join(""));
var rdfa__11749 = "http://www.w3.org/ns/rdfa#";
rdfa.core.rdfa_COLON_usesVocabulary = new rdfa.core.IRI([cljs.core.str(rdfa__11749), cljs.core.str("usesVocabulary")].join(""));
rdfa.core.rdfa_COLON_Error = new rdfa.core.IRI([cljs.core.str(rdfa__11749), cljs.core.str("Error")].join(""));
rdfa.core.rdfa_COLON_Warning = new rdfa.core.IRI([cljs.core.str(rdfa__11749), cljs.core.str("Warning")].join(""));
rdfa.core.dc_COLON_description = new rdfa.core.IRI("http://purl.org/dc/terms/description");
rdfa.core.xhv = "http://www.w3.org/1999/xhtml/vocab#";
rdfa.core.to_iri = function to_iri(s, base) {
  return new rdfa.core.IRI(rdfa.utils.resolve_iri.call(null, s, base))
};
rdfa.core.parse_safe_curie = function parse_safe_curie(repr) {
  var match__11751 = cljs.core.re_matches.call(null, /^\[(.*?)\]$/, repr);
  return cljs.core.PersistentVector.fromArray([cljs.core.truth_(match__11751) ? match__11751.call(null, 1) : repr, cljs.core.vector_QMARK_.call(null, match__11751)], true)
};
rdfa.core.expand_term_or_curie = function() {
  var expand_term_or_curie = null;
  var expand_term_or_curie__2 = function(env, repr) {
    return expand_term_or_curie.call(null, repr, env.call(null, "\ufdd0'base"), env.call(null, "\ufdd0'prefix-map"), env.call(null, "\ufdd0'term-map"), env.call(null, "\ufdd0'vocab"))
  };
  var expand_term_or_curie__3 = function(repr, base, prefix_map) {
    return expand_term_or_curie.call(null, repr, base, prefix_map, null, null)
  };
  var expand_term_or_curie__5 = function(repr, base, prefix_map, term_map, vocab) {
    var vec__11771__11772 = rdfa.core.parse_safe_curie.call(null, repr);
    var repr__11773 = cljs.core.nth.call(null, vec__11771__11772, 0, null);
    var is_safe__11774 = cljs.core.nth.call(null, vec__11771__11772, 1, null);
    if(cljs.core.empty_QMARK_.call(null, repr__11773)) {
      return cljs.core.PersistentVector.fromArray([null, null], true)
    }else {
      if(repr__11773.indexOf(":") > -1) {
        var vec__11775__11776 = clojure.string.split.call(null, repr__11773, /:/, 2);
        var pfx__11777 = cljs.core.nth.call(null, vec__11775__11776, 0, null);
        var term__11778 = cljs.core.nth.call(null, vec__11775__11776, 1, null);
        var is_empty__11779 = cljs.core.empty_QMARK_.call(null, pfx__11777);
        var is_bnode__11780 = !is_empty__11779 ? cljs.core._EQ_.call(null, pfx__11777, "_") : null;
        var pfx_vocab__11781 = cljs.core.not.call(null, is_bnode__11780) ? prefix_map.call(null, pfx__11777) : null;
        if(cljs.core.truth_(function() {
          var and__3822__auto____11784 = function() {
            var or__3824__auto____11782 = pfx_vocab__11781;
            if(cljs.core.truth_(or__3824__auto____11782)) {
              return or__3824__auto____11782
            }else {
              var or__3824__auto____11783 = is_bnode__11780;
              if(cljs.core.truth_(or__3824__auto____11783)) {
                return or__3824__auto____11783
              }else {
                return is_bnode__11780
              }
            }
          }();
          if(cljs.core.truth_(and__3822__auto____11784)) {
            return cljs.core._EQ_.call(null, cljs.core.subs.call(null, term__11778, 0, 2), term__11778, "//")
          }else {
            return and__3822__auto____11784
          }
        }())) {
          return cljs.core.PersistentVector.fromArray([null, cljs.core.ObjMap.fromObject(["\ufdd0'malformed-curie"], {"\ufdd0'malformed-curie":repr__11773})], true)
        }else {
          if(is_empty__11779) {
            return cljs.core.PersistentVector.fromArray([new rdfa.core.IRI([cljs.core.str(rdfa.core.xhv), cljs.core.str(term__11778)].join("")), null], true)
          }else {
            if(cljs.core.truth_(is_bnode__11780)) {
              return cljs.core.PersistentVector.fromArray([new rdfa.core.BNode(function() {
                var or__3824__auto____11785 = cljs.core.not_empty.call(null, term__11778);
                if(cljs.core.truth_(or__3824__auto____11785)) {
                  return or__3824__auto____11785
                }else {
                  return rdfa.core.gen_bnode_prefix
                }
              }()), null], true)
            }else {
              if(cljs.core.truth_(pfx_vocab__11781)) {
                return cljs.core.PersistentVector.fromArray([new rdfa.core.IRI([cljs.core.str(pfx_vocab__11781), cljs.core.str(term__11778)].join("")), null], true)
              }else {
                if("\ufdd0'else") {
                  var temp__3971__auto____11786 = cljs.core.not.call(null, is_safe__11774) ? rdfa.core.to_iri.call(null, repr__11773, "") : null;
                  if(cljs.core.truth_(temp__3971__auto____11786)) {
                    var iri__11787 = temp__3971__auto____11786;
                    return cljs.core.PersistentVector.fromArray([iri__11787, null], true)
                  }else {
                    return cljs.core.PersistentVector.fromArray([null, cljs.core.ObjMap.fromObject(["\ufdd0'undefined-prefix"], {"\ufdd0'undefined-prefix":pfx__11777})], true)
                  }
                }else {
                  return null
                }
              }
            }
          }
        }
      }else {
        if(cljs.core.truth_(cljs.core.not_empty.call(null, vocab))) {
          return cljs.core.PersistentVector.fromArray([rdfa.core.to_iri.call(null, [cljs.core.str(vocab), cljs.core.str(repr__11773)].join(""), base), null], true)
        }else {
          if(term_map == null) {
            return cljs.core.PersistentVector.fromArray([null, null], true)
          }else {
            if("\ufdd0'else") {
              var temp__3971__auto____11788 = term_map.call(null, clojure.string.lower_case.call(null, repr__11773));
              if(cljs.core.truth_(temp__3971__auto____11788)) {
                var iri__11789 = temp__3971__auto____11788;
                return cljs.core.PersistentVector.fromArray([rdfa.core.to_iri.call(null, iri__11789, base), null], true)
              }else {
                return cljs.core.PersistentVector.fromArray([null, cljs.core.ObjMap.fromObject(["\ufdd0'undefined-term"], {"\ufdd0'undefined-term":repr__11773})], true)
              }
            }else {
              return null
            }
          }
        }
      }
    }
  };
  expand_term_or_curie = function(repr, base, prefix_map, term_map, vocab) {
    switch(arguments.length) {
      case 2:
        return expand_term_or_curie__2.call(this, repr, base);
      case 3:
        return expand_term_or_curie__3.call(this, repr, base, prefix_map);
      case 5:
        return expand_term_or_curie__5.call(this, repr, base, prefix_map, term_map, vocab)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expand_term_or_curie.cljs$lang$arity$2 = expand_term_or_curie__2;
  expand_term_or_curie.cljs$lang$arity$3 = expand_term_or_curie__3;
  expand_term_or_curie.cljs$lang$arity$5 = expand_term_or_curie__5;
  return expand_term_or_curie
}();
rdfa.core.to_curie_or_iri = function to_curie_or_iri(env, repr) {
  var is_safe__11798 = cljs.core._EQ_.call(null, cljs.core.first.call(null, repr), "[");
  var vec__11797__11799 = rdfa.core.expand_term_or_curie.call(null, repr, env.call(null, "\ufdd0'base"), env.call(null, "\ufdd0'prefix-map"));
  var iri__11800 = cljs.core.nth.call(null, vec__11797__11799, 0, null);
  var err__11801 = cljs.core.nth.call(null, vec__11797__11799, 1, null);
  var res__11803 = function() {
    var or__3824__auto____11802 = iri__11800;
    if(cljs.core.truth_(or__3824__auto____11802)) {
      return or__3824__auto____11802
    }else {
      if(!is_safe__11798) {
        return rdfa.core.to_iri.call(null, repr, env.call(null, "\ufdd0'base"))
      }else {
        return null
      }
    }
  }();
  return cljs.core.PersistentVector.fromArray([res__11803, err__11801], true)
};
rdfa.core.to_node = function to_node(env, repr) {
  return rdfa.core.expand_term_or_curie.call(null, env, repr)
};
rdfa.core.to_nodes = function to_nodes(env, expr) {
  if(cljs.core.truth_(cljs.core.not_empty.call(null, expr))) {
    var tokens__11812 = clojure.string.split.call(null, clojure.string.trim.call(null, expr), /\s+/);
    var coll__11813 = cljs.core.map.call(null, function(p1__11804_SHARP_) {
      return rdfa.core.to_node.call(null, env, p1__11804_SHARP_)
    }, tokens__11812);
    var nodes__11814 = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(p1__11805_SHARP_) {
      return cljs.core.first.call(null, p1__11805_SHARP_)
    }, coll__11813));
    var errs__11815 = cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(p1__11806_SHARP_) {
      return cljs.core.second.call(null, p1__11806_SHARP_)
    }, coll__11813));
    return cljs.core.PersistentVector.fromArray([nodes__11814, errs__11815], true)
  }else {
    return null
  }
};
rdfa.core.parse_prefix = function parse_prefix(prefix) {
  if(cljs.core.empty_QMARK_.call(null, prefix)) {
    return null
  }else {
    var initial__11818 = cljs.core.apply.call(null, cljs.core.hash_map, clojure.string.split.call(null, clojure.string.trim.call(null, prefix), /:?\s+/));
    var valid_prefix_QMARK___11819 = function(p1__11807_SHARP_) {
      return cljs.core.re_matches.call(null, /^[\w_][\w_\-\.]*$/, p1__11807_SHARP_)
    };
    return cljs.core.select_keys.call(null, initial__11818, cljs.core.filter.call(null, valid_prefix_QMARK___11819, cljs.core.keys.call(null, initial__11818)))
  }
};
rdfa.core.init_env = function init_env(location, p__11821) {
  var map__11834__11835 = p__11821;
  var map__11834__11836 = cljs.core.seq_QMARK_.call(null, map__11834__11835) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11834__11835) : map__11834__11835;
  var prefix_map__11837 = cljs.core._lookup.call(null, map__11834__11836, "\ufdd0'prefix-map", null);
  var term_map__11838 = cljs.core._lookup.call(null, map__11834__11836, "\ufdd0'term-map", null);
  var vocab__11839 = cljs.core._lookup.call(null, map__11834__11836, "\ufdd0'vocab", null);
  var base__11840 = cljs.core._lookup.call(null, map__11834__11836, "\ufdd0'base", null);
  var profile__11841 = cljs.core._lookup.call(null, map__11834__11836, "\ufdd0'profile", null);
  var base__11843 = function() {
    var or__3824__auto____11842 = base__11840;
    if(cljs.core.truth_(or__3824__auto____11842)) {
      return or__3824__auto____11842
    }else {
      return location
    }
  }();
  var base__11845 = function() {
    var i__11844 = base__11843.indexOf("#");
    if(i__11844 > -1) {
      return cljs.core.subs.call(null, base__11843, 0, i__11844)
    }else {
      return base__11843
    }
  }();
  return cljs.core.ObjMap.fromObject(["\ufdd0'xmlns-map", "\ufdd0'list-map", "\ufdd0'profile", "\ufdd0'parent-object", "\ufdd0'term-map", "\ufdd0'incomplete", "\ufdd0'incomplete-subject", "\ufdd0'vocab", "\ufdd0'lang", "\ufdd0'base", "\ufdd0'prefix-map"], {"\ufdd0'xmlns-map":null, "\ufdd0'list-map":cljs.core.ObjMap.EMPTY, "\ufdd0'profile":profile__11841, "\ufdd0'parent-object":new rdfa.core.IRI(base__11845), "\ufdd0'term-map":term_map__11838, "\ufdd0'incomplete":cljs.core.ObjMap.EMPTY, "\ufdd0'incomplete-subject":null, 
  "\ufdd0'vocab":vocab__11839, "\ufdd0'lang":null, "\ufdd0'base":base__11845, "\ufdd0'prefix-map":prefix_map__11837})
};
rdfa.core.get_data = function get_data(el) {
  var attr__11854 = function(p1__11820_SHARP_) {
    return rdfa.dom.get_attr.call(null, el, p1__11820_SHARP_)
  };
  var xmlns_map__11855 = rdfa.dom.get_ns_map.call(null, el);
  var prefix_map__11856 = rdfa.core.parse_prefix.call(null, attr__11854.call(null, "prefix"));
  return cljs.core.ObjMap.fromObject(["\ufdd0'resources", "\ufdd0'is-root", "\ufdd0'xmlns-map", "\ufdd0'inlist", "\ufdd0'typeof", "\ufdd0'content", "\ufdd0'about", "\ufdd0'datatype", "\ufdd0'vocab", "\ufdd0'lang", "\ufdd0'property", "\ufdd0'base", "\ufdd0'prefix-map", "\ufdd0'rev", "\ufdd0'element", "\ufdd0'rel"], {"\ufdd0'resources":cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.PersistentVector.fromArray([attr__11854.call(null, "resource"), attr__11854.call(null, "href"), attr__11854.call(null, 
  "src")], true)), "\ufdd0'is-root":rdfa.dom.is_root_QMARK_.call(null, el), "\ufdd0'xmlns-map":function() {
    var temp__3971__auto____11857 = attr__11854.call(null, "xmlns");
    if(cljs.core.truth_(temp__3971__auto____11857)) {
      var xmlns__11858 = temp__3971__auto____11857;
      return cljs.core.assoc.call(null, xmlns_map__11855, null, xmlns__11858)
    }else {
      return xmlns_map__11855
    }
  }(), "\ufdd0'inlist":attr__11854.call(null, "inlist"), "\ufdd0'typeof":attr__11854.call(null, "typeof"), "\ufdd0'content":attr__11854.call(null, "content"), "\ufdd0'about":attr__11854.call(null, "about"), "\ufdd0'datatype":attr__11854.call(null, "datatype"), "\ufdd0'vocab":attr__11854.call(null, "vocab"), "\ufdd0'lang":function() {
    var or__3824__auto____11859 = attr__11854.call(null, "xml:lang");
    if(cljs.core.truth_(or__3824__auto____11859)) {
      return or__3824__auto____11859
    }else {
      return attr__11854.call(null, "lang")
    }
  }(), "\ufdd0'property":attr__11854.call(null, "property"), "\ufdd0'base":null, "\ufdd0'prefix-map":cljs.core.merge.call(null, xmlns_map__11855, prefix_map__11856), "\ufdd0'rev":attr__11854.call(null, "rev"), "\ufdd0'element":el, "\ufdd0'rel":attr__11854.call(null, "rel")})
};
rdfa.core.update_mappings = function update_mappings(env, data) {
  var env__11875 = function() {
    var temp__3971__auto____11873 = data.call(null, "\ufdd0'base");
    if(cljs.core.truth_(temp__3971__auto____11873)) {
      var base__11874 = temp__3971__auto____11873;
      return cljs.core.assoc.call(null, env, "\ufdd0'base", base__11874)
    }else {
      return env
    }
  }();
  var env__11878 = function() {
    var temp__3971__auto____11876 = data.call(null, "\ufdd0'lang");
    if(cljs.core.truth_(temp__3971__auto____11876)) {
      var lang__11877 = temp__3971__auto____11876;
      return cljs.core.assoc.call(null, env__11875, "\ufdd0'lang", lang__11877)
    }else {
      return env__11875
    }
  }();
  var env__11879 = cljs.core.update_in.call(null, env__11878, cljs.core.PersistentVector.fromArray(["\ufdd0'xmlns-map"], true), function(p1__11846_SHARP_) {
    return cljs.core.merge.call(null, p1__11846_SHARP_, data.call(null, "\ufdd0'xmlns-map"))
  });
  var env__11880 = cljs.core.update_in.call(null, env__11879, cljs.core.PersistentVector.fromArray(["\ufdd0'prefix-map"], true), function(p1__11847_SHARP_) {
    return cljs.core.merge.call(null, p1__11847_SHARP_, data.call(null, "\ufdd0'prefix-map"))
  });
  var env__11883 = function() {
    var temp__3971__auto____11881 = data.call(null, "\ufdd0'vocab");
    if(cljs.core.truth_(temp__3971__auto____11881)) {
      var vocab__11882 = temp__3971__auto____11881;
      return cljs.core.assoc.call(null, env__11880, "\ufdd0'vocab", cljs.core.empty_QMARK_.call(null, vocab__11882) ? null : rdfa.utils.resolve_iri.call(null, vocab__11882, env__11880.call(null, "\ufdd0'base")))
    }else {
      return env__11880
    }
  }();
  return env__11883
};
rdfa.core.get_resolved_resource = function get_resolved_resource(env, candidates) {
  var resolved__11886 = cljs.core.map.call(null, function(p1__11860_SHARP_) {
    return rdfa.core.to_curie_or_iri.call(null, env, p1__11860_SHARP_)
  }, candidates);
  var or__3824__auto____11887 = cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__11861_SHARP_) {
    return cljs.core.first.call(null, p1__11861_SHARP_)
  }, resolved__11886));
  if(cljs.core.truth_(or__3824__auto____11887)) {
    return or__3824__auto____11887
  }else {
    return cljs.core.first.call(null, resolved__11886)
  }
};
rdfa.core.get_subject = function get_subject(env, data) {
  var new_pred__11906 = function() {
    var or__3824__auto____11904 = data.call(null, "\ufdd0'rel");
    if(cljs.core.truth_(or__3824__auto____11904)) {
      return or__3824__auto____11904
    }else {
      var or__3824__auto____11905 = data.call(null, "\ufdd0'rev");
      if(cljs.core.truth_(or__3824__auto____11905)) {
        return or__3824__auto____11905
      }else {
        return data.call(null, "\ufdd0'property")
      }
    }
  }();
  var about_and_err__11909 = function() {
    var temp__3971__auto____11907 = data.call(null, "\ufdd0'about");
    if(cljs.core.truth_(temp__3971__auto____11907)) {
      var about__11908 = temp__3971__auto____11907;
      return rdfa.core.to_curie_or_iri.call(null, env, about__11908)
    }else {
      return null
    }
  }();
  var resource_and_err__11910 = rdfa.core.get_resolved_resource.call(null, env, data.call(null, "\ufdd0'resources"));
  var use_resource__11915 = function() {
    var and__3822__auto____11911 = cljs.core.not.call(null, cljs.core.first.call(null, about_and_err__11909));
    if(and__3822__auto____11911) {
      var or__3824__auto____11914 = function() {
        var and__3822__auto____11912 = data.call(null, "\ufdd0'property");
        if(cljs.core.truth_(and__3822__auto____11912)) {
          var or__3824__auto____11913 = data.call(null, "\ufdd0'content");
          if(cljs.core.truth_(or__3824__auto____11913)) {
            return or__3824__auto____11913
          }else {
            return data.call(null, "\ufdd0'datatype")
          }
        }else {
          return and__3822__auto____11912
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11914)) {
        return or__3824__auto____11914
      }else {
        return cljs.core.not.call(null, new_pred__11906)
      }
    }else {
      return and__3822__auto____11911
    }
  }();
  var subject__11917 = function() {
    var or__3824__auto____11916 = cljs.core.truth_(use_resource__11915) ? resource_and_err__11910 : about_and_err__11909;
    if(cljs.core.truth_(or__3824__auto____11916)) {
      return or__3824__auto____11916
    }else {
      if(cljs.core.truth_(data.call(null, "\ufdd0'is-root"))) {
        return cljs.core.PersistentVector.fromArray([null, null], true)
      }else {
        return null
      }
    }
  }();
  if(cljs.core.truth_(subject__11917)) {
    return subject__11917
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11918 = data.call(null, "\ufdd0'typeof");
      if(cljs.core.truth_(and__3822__auto____11918)) {
        var and__3822__auto____11919 = cljs.core.not.call(null, new_pred__11906);
        if(and__3822__auto____11919) {
          return cljs.core.not.call(null, cljs.core.first.call(null, resource_and_err__11910))
        }else {
          return and__3822__auto____11919
        }
      }else {
        return and__3822__auto____11918
      }
    }())) {
      return cljs.core.PersistentVector.fromArray([rdfa.core.next_bnode.call(null), null], true)
    }else {
      return null
    }
  }
};
rdfa.core.get_literal = function get_literal(env, data) {
  var el__11942 = data.call(null, "\ufdd0'element");
  var as_literal__11951 = function() {
    var and__3822__auto____11943 = data.call(null, "\ufdd0'property");
    if(cljs.core.truth_(and__3822__auto____11943)) {
      var or__3824__auto____11946 = function() {
        var and__3822__auto____11944 = data.call(null, "\ufdd0'datatype");
        if(cljs.core.truth_(and__3822__auto____11944)) {
          return cljs.core.not.call(null, function() {
            var or__3824__auto____11945 = data.call(null, "\ufdd0'rel");
            if(cljs.core.truth_(or__3824__auto____11945)) {
              return or__3824__auto____11945
            }else {
              return data.call(null, "\ufdd0'rev")
            }
          }())
        }else {
          return and__3822__auto____11944
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11946)) {
        return or__3824__auto____11946
      }else {
        var or__3824__auto____11948 = function() {
          var or__3824__auto____11947 = data.call(null, "\ufdd0'rel");
          if(cljs.core.truth_(or__3824__auto____11947)) {
            return or__3824__auto____11947
          }else {
            return data.call(null, "\ufdd0'rev")
          }
        }();
        if(cljs.core.truth_(or__3824__auto____11948)) {
          return or__3824__auto____11948
        }else {
          return cljs.core.not.call(null, function() {
            var or__3824__auto____11949 = cljs.core.not_empty.call(null, data.call(null, "\ufdd0'resources"));
            if(cljs.core.truth_(or__3824__auto____11949)) {
              return or__3824__auto____11949
            }else {
              var and__3822__auto____11950 = data.call(null, "\ufdd0'typeof");
              if(cljs.core.truth_(and__3822__auto____11950)) {
                return cljs.core.not.call(null, data.call(null, "\ufdd0'about"))
              }else {
                return and__3822__auto____11950
              }
            }
          }())
        }
      }
    }else {
      return and__3822__auto____11943
    }
  }();
  var vec__11941__11954 = function() {
    var temp__3971__auto____11952 = cljs.core.not_empty.call(null, data.call(null, "\ufdd0'datatype"));
    if(cljs.core.truth_(temp__3971__auto____11952)) {
      var dt__11953 = temp__3971__auto____11952;
      return rdfa.core.to_node.call(null, env, dt__11953)
    }else {
      return null
    }
  }();
  var datatype__11955 = cljs.core.nth.call(null, vec__11941__11954, 0, null);
  var dt_err__11956 = cljs.core.nth.call(null, vec__11941__11954, 1, null);
  var as_xml__11957 = cljs.core._EQ_.call(null, datatype__11955, rdfa.core.rdf_COLON_XMLLiteral);
  var repr__11959 = function() {
    var or__3824__auto____11958 = data.call(null, "\ufdd0'content");
    if(cljs.core.truth_(or__3824__auto____11958)) {
      return or__3824__auto____11958
    }else {
      if(cljs.core.truth_(as_literal__11951)) {
        if(as_xml__11957) {
          return rdfa.dom.get_inner_xml.call(null, el__11942, env.call(null, "\ufdd0'xmlns-map"), env.call(null, "\ufdd0'lang"))
        }else {
          return rdfa.dom.get_text.call(null, el__11942)
        }
      }else {
        return null
      }
    }
  }();
  return cljs.core.PersistentVector.fromArray([cljs.core.truth_(repr__11959) ? new rdfa.core.Literal(repr__11959, function() {
    var or__3824__auto____11960 = datatype__11955;
    if(cljs.core.truth_(or__3824__auto____11960)) {
      return or__3824__auto____11960
    }else {
      var or__3824__auto____11961 = data.call(null, "\ufdd0'lang");
      if(cljs.core.truth_(or__3824__auto____11961)) {
        return or__3824__auto____11961
      }else {
        return env.call(null, "\ufdd0'lang")
      }
    }
  }()) : null, dt_err__11956], true)
};
rdfa.core.get_object = function get_object(env, data) {
  var link__11976 = function() {
    var or__3824__auto____11975 = data.call(null, "\ufdd0'rel");
    if(cljs.core.truth_(or__3824__auto____11975)) {
      return or__3824__auto____11975
    }else {
      return data.call(null, "\ufdd0'rev")
    }
  }();
  var prop__11977 = data.call(null, "\ufdd0'property");
  var typeof__11978 = data.call(null, "\ufdd0'typeof");
  var resources__11979 = data.call(null, "\ufdd0'resources");
  if(cljs.core.truth_(function() {
    var and__3822__auto____11980 = cljs.core.not.call(null, link__11976);
    if(and__3822__auto____11980) {
      var and__3822__auto____11981 = prop__11977;
      if(cljs.core.truth_(and__3822__auto____11981)) {
        var or__3824__auto____11982 = data.call(null, "\ufdd0'content");
        if(cljs.core.truth_(or__3824__auto____11982)) {
          return or__3824__auto____11982
        }else {
          return data.call(null, "\ufdd0'datatype")
        }
      }else {
        return and__3822__auto____11981
      }
    }else {
      return and__3822__auto____11980
    }
  }())) {
    return null
  }else {
    if(cljs.core.truth_(cljs.core.not_empty.call(null, resources__11979))) {
      return rdfa.core.get_resolved_resource.call(null, env, resources__11979)
    }else {
      if(cljs.core.truth_(function() {
        var or__3824__auto____11985 = function() {
          var and__3822__auto____11983 = link__11976;
          if(cljs.core.truth_(and__3822__auto____11983)) {
            var and__3822__auto____11984 = cljs.core.not.call(null, data.call(null, "\ufdd0'about"));
            if(and__3822__auto____11984) {
              return typeof__11978
            }else {
              return and__3822__auto____11984
            }
          }else {
            return and__3822__auto____11983
          }
        }();
        if(cljs.core.truth_(or__3824__auto____11985)) {
          return or__3824__auto____11985
        }else {
          var and__3822__auto____11986 = prop__11977;
          if(cljs.core.truth_(and__3822__auto____11986)) {
            return typeof__11978
          }else {
            return and__3822__auto____11986
          }
        }
      }())) {
        return cljs.core.PersistentVector.fromArray([rdfa.core.next_bnode.call(null), null], true)
      }else {
        return null
      }
    }
  }
};
rdfa.core.get_props_rels_revs_lists = function get_props_rels_revs_lists(env, data) {
  var inlist__12006 = data.call(null, "\ufdd0'inlist");
  var to_predicates__12007 = function(repr) {
    return cljs.core.filter.call(null, function(p1__11962_SHARP_) {
      return cljs.core.not_EQ_.call(null, cljs.core.type.call(null, cljs.core.first.call(null, p1__11962_SHARP_)), rdfa.core.BNode)
    }, rdfa.core.to_nodes.call(null, env, repr))
  };
  var vec__12003__12008 = to_predicates__12007.call(null, data.call(null, "\ufdd0'property"));
  var props__12009 = cljs.core.nth.call(null, vec__12003__12008, 0, null);
  var prop_errs__12010 = cljs.core.nth.call(null, vec__12003__12008, 1, null);
  var vec__12004__12011 = to_predicates__12007.call(null, data.call(null, "\ufdd0'rel"));
  var rels__12012 = cljs.core.nth.call(null, vec__12004__12011, 0, null);
  var rel_errs__12013 = cljs.core.nth.call(null, vec__12004__12011, 1, null);
  var vec__12005__12014 = to_predicates__12007.call(null, data.call(null, "\ufdd0'rev"));
  var revs__12015 = cljs.core.nth.call(null, vec__12005__12014, 0, null);
  var rev_errs__12016 = cljs.core.nth.call(null, vec__12005__12014, 1, null);
  var errs__12017 = cljs.core.concat.call(null, prop_errs__12010, rel_errs__12013, rev_errs__12016);
  return cljs.core.PersistentVector.fromArray([cljs.core.truth_(inlist__12006) ? cljs.core.PersistentVector.fromArray([null, null, revs__12015, function() {
    var or__3824__auto____12018 = props__12009;
    if(cljs.core.truth_(or__3824__auto____12018)) {
      return or__3824__auto____12018
    }else {
      return rels__12012
    }
  }()], true) : cljs.core.PersistentVector.fromArray([props__12009, rels__12012, revs__12015, null], true), errs__12017], true)
};
rdfa.core.parse_element = function parse_element(parent_env, el) {
  var data__12055 = rdfa.profiles.extended_data.call(null, parent_env, rdfa.core.get_data.call(null, el));
  var env__12056 = rdfa.core.update_mappings.call(null, parent_env, data__12055);
  var vec__12049__12057 = rdfa.core.get_subject.call(null, env__12056, data__12055);
  var subject__12058 = cljs.core.nth.call(null, vec__12049__12057, 0, null);
  var s_err__12059 = cljs.core.nth.call(null, vec__12049__12057, 1, null);
  var vec__12050__12060 = rdfa.core.get_props_rels_revs_lists.call(null, env__12056, data__12055);
  var vec__12051__12061 = cljs.core.nth.call(null, vec__12050__12060, 0, null);
  var props__12062 = cljs.core.nth.call(null, vec__12051__12061, 0, null);
  var rels__12063 = cljs.core.nth.call(null, vec__12051__12061, 1, null);
  var revs__12064 = cljs.core.nth.call(null, vec__12051__12061, 2, null);
  var list_ps__12065 = cljs.core.nth.call(null, vec__12051__12061, 3, null);
  var p_errs__12066 = cljs.core.nth.call(null, vec__12050__12060, 1, null);
  var vec__12052__12067 = rdfa.core.get_object.call(null, env__12056, data__12055);
  var object_resource__12068 = cljs.core.nth.call(null, vec__12052__12067, 0, null);
  var o_err__12069 = cljs.core.nth.call(null, vec__12052__12067, 1, null);
  var vec__12053__12070 = rdfa.core.get_literal.call(null, env__12056, data__12055);
  var object_literal__12071 = cljs.core.nth.call(null, vec__12053__12070, 0, null);
  var dt_err__12072 = cljs.core.nth.call(null, vec__12053__12070, 1, null);
  var vec__12054__12075 = function() {
    var temp__3971__auto____12073 = data__12055.call(null, "\ufdd0'typeof");
    if(cljs.core.truth_(temp__3971__auto____12073)) {
      var typeof__12074 = temp__3971__auto____12073;
      return rdfa.core.to_nodes.call(null, env__12056, typeof__12074)
    }else {
      return null
    }
  }();
  var types__12076 = cljs.core.nth.call(null, vec__12054__12075, 0, null);
  var t_errs__12077 = cljs.core.nth.call(null, vec__12054__12075, 1, null);
  var errs__12078 = cljs.core.concat.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.PersistentVector.fromArray([s_err__12059, o_err__12069, dt_err__12072], true)), p_errs__12066, t_errs__12077);
  return cljs.core.PersistentVector.fromArray([subject__12058, types__12076, object_resource__12068, object_literal__12071, props__12062, rels__12063, revs__12064, list_ps__12065, env__12056, data__12055, errs__12078], true)
};
rdfa.core.get_hanging = function get_hanging(data) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____12085 = function() {
      var or__3824__auto____12084 = data.call(null, "\ufdd0'rel");
      if(cljs.core.truth_(or__3824__auto____12084)) {
        return or__3824__auto____12084
      }else {
        return data.call(null, "\ufdd0'rev")
      }
    }();
    if(cljs.core.truth_(and__3822__auto____12085)) {
      var and__3822__auto____12086 = cljs.core.empty_QMARK_.call(null, data.call(null, "\ufdd0'resources"));
      if(and__3822__auto____12086) {
        var and__3822__auto____12088 = function() {
          var or__3824__auto____12087 = data.call(null, "\ufdd0'about");
          if(cljs.core.truth_(or__3824__auto____12087)) {
            return or__3824__auto____12087
          }else {
            return cljs.core.not.call(null, data.call(null, "\ufdd0'typeof"))
          }
        }();
        if(cljs.core.truth_(and__3822__auto____12088)) {
          return cljs.core.not.call(null, data.call(null, "\ufdd0'inlist"))
        }else {
          return and__3822__auto____12088
        }
      }else {
        return and__3822__auto____12086
      }
    }else {
      return and__3822__auto____12085
    }
  }())) {
    return rdfa.core.next_bnode.call(null)
  }else {
    return null
  }
};
rdfa.core.create_warning_triples = function create_warning_triples(warning) {
  var warn_node__12091 = rdfa.core.next_bnode.call(null);
  var descr__12092 = new rdfa.core.Literal([cljs.core.str(warning)].join(""), "en");
  return cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([warn_node__12091, rdfa.core.rdf_COLON_type, rdfa.core.rdfa_COLON_Warning], true), cljs.core.PersistentVector.fromArray([warn_node__12091, rdfa.core.dc_COLON_description, descr__12092], true)], true)
};
rdfa.core.process_element = function process_element(parent_env, el) {
  var vec__12205__12206 = rdfa.core.parse_element.call(null, parent_env, el);
  var subject__12207 = cljs.core.nth.call(null, vec__12205__12206, 0, null);
  var types__12208 = cljs.core.nth.call(null, vec__12205__12206, 1, null);
  var o_resource__12209 = cljs.core.nth.call(null, vec__12205__12206, 2, null);
  var o_literal__12210 = cljs.core.nth.call(null, vec__12205__12206, 3, null);
  var props__12211 = cljs.core.nth.call(null, vec__12205__12206, 4, null);
  var rels__12212 = cljs.core.nth.call(null, vec__12205__12206, 5, null);
  var revs__12213 = cljs.core.nth.call(null, vec__12205__12206, 6, null);
  var list_ps__12214 = cljs.core.nth.call(null, vec__12205__12206, 7, null);
  var env__12215 = cljs.core.nth.call(null, vec__12205__12206, 8, null);
  var data__12216 = cljs.core.nth.call(null, vec__12205__12206, 9, null);
  var errs__12217 = cljs.core.nth.call(null, vec__12205__12206, 10, null);
  var parent_o__12218 = env__12215.call(null, "\ufdd0'parent-object");
  var incomplete_s__12219 = env__12215.call(null, "\ufdd0'incomplete-subject");
  var incomplete__12220 = env__12215.call(null, "\ufdd0'incomplete");
  var has_about__12221 = data__12216.call(null, "\ufdd0'about");
  var has_p__12224 = function() {
    var or__3824__auto____12222 = data__12216.call(null, "\ufdd0'property");
    if(cljs.core.truth_(or__3824__auto____12222)) {
      return or__3824__auto____12222
    }else {
      var or__3824__auto____12223 = data__12216.call(null, "\ufdd0'rel");
      if(cljs.core.truth_(or__3824__auto____12223)) {
        return or__3824__auto____12223
      }else {
        return data__12216.call(null, "\ufdd0'rev")
      }
    }
  }();
  var completing_s__12227 = function() {
    var or__3824__auto____12225 = subject__12207;
    if(cljs.core.truth_(or__3824__auto____12225)) {
      return or__3824__auto____12225
    }else {
      var or__3824__auto____12226 = cljs.core.truth_(has_p__12224) ? incomplete_s__12219 : null;
      if(cljs.core.truth_(or__3824__auto____12226)) {
        return or__3824__auto____12226
      }else {
        return o_resource__12209
      }
    }
  }();
  var active_s__12230 = function() {
    var or__3824__auto____12228 = subject__12207;
    if(cljs.core.truth_(or__3824__auto____12228)) {
      return or__3824__auto____12228
    }else {
      var or__3824__auto____12229 = cljs.core.truth_(has_p__12224) ? incomplete_s__12219 : null;
      if(cljs.core.truth_(or__3824__auto____12229)) {
        return or__3824__auto____12229
      }else {
        return parent_o__12218
      }
    }
  }();
  var active_o__12232 = function() {
    var or__3824__auto____12231 = o_resource__12209;
    if(cljs.core.truth_(or__3824__auto____12231)) {
      return or__3824__auto____12231
    }else {
      return o_literal__12210
    }
  }();
  var inherited_o_r__12236 = cljs.core.truth_(function() {
    var or__3824__auto____12233 = cljs.core.not.call(null, data__12216.call(null, "\ufdd0'property"));
    if(or__3824__auto____12233) {
      return or__3824__auto____12233
    }else {
      var or__3824__auto____12234 = data__12216.call(null, "\ufdd0'typeof");
      if(cljs.core.truth_(or__3824__auto____12234)) {
        return or__3824__auto____12234
      }else {
        var or__3824__auto____12235 = data__12216.call(null, "\ufdd0'rel");
        if(cljs.core.truth_(or__3824__auto____12235)) {
          return or__3824__auto____12235
        }else {
          return data__12216.call(null, "\ufdd0'rev")
        }
      }
    }
  }()) ? o_resource__12209 : null;
  var next_parent_o__12238 = function() {
    var or__3824__auto____12237 = inherited_o_r__12236;
    if(cljs.core.truth_(or__3824__auto____12237)) {
      return or__3824__auto____12237
    }else {
      return active_s__12230
    }
  }();
  var next_incomplete_s__12240 = cljs.core.not.call(null, function() {
    var or__3824__auto____12239 = subject__12207;
    if(cljs.core.truth_(or__3824__auto____12239)) {
      return or__3824__auto____12239
    }else {
      return has_p__12224
    }
  }()) ? incomplete_s__12219 : rdfa.core.get_hanging.call(null, data__12216);
  var new_list_map__12256 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.concat.call(null, function() {
    var iter__2462__auto____12247 = function iter__12241(s__12242) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12242__12245 = s__12242;
        while(true) {
          if(cljs.core.seq.call(null, s__12242__12245)) {
            var p__12246 = cljs.core.first.call(null, s__12242__12245);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([p__12246, cljs.core.truth_(active_o__12232) ? cljs.core.PersistentVector.fromArray([active_o__12232], true) : cljs.core.PersistentVector.EMPTY], true), iter__12241.call(null, cljs.core.rest.call(null, s__12242__12245)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12247.call(null, list_ps__12214)
  }(), cljs.core.truth_(function() {
    var or__3824__auto____12248 = subject__12207;
    if(cljs.core.truth_(or__3824__auto____12248)) {
      return or__3824__auto____12248
    }else {
      return o_resource__12209
    }
  }()) ? function() {
    var iter__2462__auto____12255 = function iter__12249(s__12250) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12250__12253 = s__12250;
        while(true) {
          if(cljs.core.seq.call(null, s__12250__12253)) {
            var p__12254 = cljs.core.first.call(null, s__12250__12253);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([p__12254, cljs.core.PersistentVector.fromArray([next_parent_o__12238], true)], true), iter__12249.call(null, cljs.core.rest.call(null, s__12250__12253)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12255.call(null, incomplete__12220.call(null, "\ufdd0'list-ps"))
  }() : null));
  var regular_triples__12278 = cljs.core.concat.call(null, cljs.core.truth_(o_literal__12210) ? function() {
    var iter__2462__auto____12263 = function iter__12257(s__12258) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12258__12261 = s__12258;
        while(true) {
          if(cljs.core.seq.call(null, s__12258__12261)) {
            var p__12262 = cljs.core.first.call(null, s__12258__12261);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([active_s__12230, p__12262, o_literal__12210], true), iter__12257.call(null, cljs.core.rest.call(null, s__12258__12261)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12263.call(null, props__12211)
  }() : null, cljs.core.truth_(o_resource__12209) ? cljs.core.concat.call(null, function() {
    var iter__2462__auto____12270 = function iter__12264(s__12265) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12265__12268 = s__12265;
        while(true) {
          if(cljs.core.seq.call(null, s__12265__12268)) {
            var p__12269 = cljs.core.first.call(null, s__12265__12268);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([active_s__12230, p__12269, o_resource__12209], true), iter__12264.call(null, cljs.core.rest.call(null, s__12265__12268)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12270.call(null, cljs.core.truth_(o_literal__12210) ? rels__12212 : cljs.core.concat.call(null, props__12211, rels__12212))
  }(), function() {
    var iter__2462__auto____12277 = function iter__12271(s__12272) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12272__12275 = s__12272;
        while(true) {
          if(cljs.core.seq.call(null, s__12272__12275)) {
            var p__12276 = cljs.core.first.call(null, s__12272__12275);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([o_resource__12209, p__12276, active_s__12230], true), iter__12271.call(null, cljs.core.rest.call(null, s__12272__12275)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12277.call(null, revs__12213)
  }()) : null);
  var type_triples__12288 = function() {
    var ts__12280 = cljs.core.truth_(function() {
      var or__3824__auto____12279 = has_about__12221;
      if(cljs.core.truth_(or__3824__auto____12279)) {
        return or__3824__auto____12279
      }else {
        return cljs.core.not.call(null, o_resource__12209)
      }
    }()) ? active_s__12230 : o_resource__12209;
    var iter__2462__auto____12287 = function iter__12281(s__12282) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12282__12285 = s__12282;
        while(true) {
          if(cljs.core.seq.call(null, s__12282__12285)) {
            var t__12286 = cljs.core.first.call(null, s__12282__12285);
            return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([ts__12280, rdfa.core.rdf_COLON_type, t__12286], true), iter__12281.call(null, cljs.core.rest.call(null, s__12282__12285)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12287.call(null, types__12208)
  }();
  var completed_triples__12308 = cljs.core.truth_(completing_s__12227) ? function() {
    var map__12289__12290 = incomplete__12220;
    var map__12289__12291 = cljs.core.seq_QMARK_.call(null, map__12289__12290) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12289__12290) : map__12289__12290;
    var rels__12292 = cljs.core._lookup.call(null, map__12289__12291, "\ufdd0'rels", null);
    var revs__12293 = cljs.core._lookup.call(null, map__12289__12291, "\ufdd0'revs", null);
    return cljs.core.concat.call(null, function() {
      var iter__2462__auto____12300 = function iter__12294(s__12295) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__12295__12298 = s__12295;
          while(true) {
            if(cljs.core.seq.call(null, s__12295__12298)) {
              var rel__12299 = cljs.core.first.call(null, s__12295__12298);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([parent_o__12218, rel__12299, completing_s__12227], true), iter__12294.call(null, cljs.core.rest.call(null, s__12295__12298)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2462__auto____12300.call(null, rels__12292)
    }(), function() {
      var iter__2462__auto____12307 = function iter__12301(s__12302) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__12302__12305 = s__12302;
          while(true) {
            if(cljs.core.seq.call(null, s__12302__12305)) {
              var rev__12306 = cljs.core.first.call(null, s__12302__12305);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([completing_s__12227, rev__12306, parent_o__12218], true), iter__12301.call(null, cljs.core.rest.call(null, s__12302__12305)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2462__auto____12307.call(null, revs__12293)
    }())
  }() : null;
  var vocab_triples__12309 = cljs.core.truth_(cljs.core.not_empty.call(null, data__12216.call(null, "\ufdd0'vocab"))) ? cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new rdfa.core.IRI(env__12215.call(null, "\ufdd0'base")), rdfa.core.rdfa_COLON_usesVocabulary, new rdfa.core.IRI(env__12215.call(null, "\ufdd0'vocab"))], true)], true) : null;
  var proc_triples__12310 = cljs.core.mapcat.call(null, rdfa.core.create_warning_triples, errs__12217);
  var next_incomplete__12314 = cljs.core.truth_(function() {
    var and__3822__auto____12313 = function() {
      var or__3824__auto____12311 = rels__12212;
      if(cljs.core.truth_(or__3824__auto____12311)) {
        return or__3824__auto____12311
      }else {
        var or__3824__auto____12312 = revs__12213;
        if(cljs.core.truth_(or__3824__auto____12312)) {
          return or__3824__auto____12312
        }else {
          return list_ps__12214
        }
      }
    }();
    if(cljs.core.truth_(and__3822__auto____12313)) {
      return cljs.core.not.call(null, active_o__12232)
    }else {
      return and__3822__auto____12313
    }
  }()) ? cljs.core.ObjMap.fromObject(["\ufdd0'rels", "\ufdd0'revs", "\ufdd0'list-ps"], {"\ufdd0'rels":rels__12212, "\ufdd0'revs":revs__12213, "\ufdd0'list-ps":list_ps__12214}) : cljs.core.truth_(cljs.core.not_empty.call(null, completed_triples__12308)) ? cljs.core.ObjMap.EMPTY : "\ufdd0'else" ? incomplete__12220 : null;
  var env__12315 = cljs.core.assoc.call(null, env__12215, "\ufdd0'incomplete", next_incomplete__12314, "\ufdd0'incomplete-subject", next_incomplete_s__12240, "\ufdd0'parent-object", next_parent_o__12238, "\ufdd0'list-map", new_list_map__12256);
  var env__12316 = cljs.core.not_EQ_.call(null, parent_o__12218, next_parent_o__12238) ? cljs.core.assoc_in.call(null, env__12315, cljs.core.PersistentVector.fromArray(["\ufdd0'incomplete", "\ufdd0'list-ps"], true), cljs.core.ObjMap.EMPTY) : env__12315;
  return cljs.core.PersistentVector.fromArray([env__12316, data__12216, cljs.core.concat.call(null, type_triples__12288, completed_triples__12308, regular_triples__12278, vocab_triples__12309), proc_triples__12310], true)
};
rdfa.core.gen_list_triples = function gen_list_triples(s, p, l) {
  var s__12323 = s;
  var p__12324 = p;
  var l__12325 = l;
  var triples__12326 = null;
  while(true) {
    if(cljs.core.empty_QMARK_.call(null, l__12325)) {
      return cljs.core.conj.call(null, triples__12326, cljs.core.PersistentVector.fromArray([s__12323, p__12324, rdfa.core.rdf_COLON_nil], true))
    }else {
      var node__12327 = rdfa.core.next_bnode.call(null);
      var triples__12328 = cljs.core.concat.call(null, triples__12326, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([s__12323, p__12324, node__12327], true), cljs.core.PersistentVector.fromArray([node__12327, rdfa.core.rdf_COLON_first, cljs.core.first.call(null, l__12325)], true)], true));
      var G__12329 = node__12327;
      var G__12330 = rdfa.core.rdf_COLON_rest;
      var G__12331 = cljs.core.rest.call(null, l__12325);
      var G__12332 = triples__12328;
      s__12323 = G__12329;
      p__12324 = G__12330;
      l__12325 = G__12331;
      triples__12326 = G__12332;
      continue
    }
    break
  }
};
rdfa.core.combine_element_visits = function combine_element_visits(p__12333, child) {
  var vec__12348__12349 = p__12333;
  var prev_env__12350 = cljs.core.nth.call(null, vec__12348__12349, 0, null);
  var prev_triples__12351 = cljs.core.nth.call(null, vec__12348__12349, 1, null);
  var prev_proc_triples__12352 = cljs.core.nth.call(null, vec__12348__12349, 2, null);
  var map__12353__12355 = rdfa.core.visit_element.call(null, prev_env__12350, child);
  var map__12353__12356 = cljs.core.seq_QMARK_.call(null, map__12353__12355) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12353__12355) : map__12353__12355;
  var map__12354__12357 = cljs.core._lookup.call(null, map__12353__12356, "\ufdd0'env", null);
  var map__12354__12358 = cljs.core.seq_QMARK_.call(null, map__12354__12357) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12354__12357) : map__12354__12357;
  var list_map__12359 = cljs.core._lookup.call(null, map__12354__12358, "\ufdd0'list-map", null);
  var triples__12360 = cljs.core._lookup.call(null, map__12353__12356, "\ufdd0'triples", null);
  var proc_triples__12361 = cljs.core._lookup.call(null, map__12353__12356, "\ufdd0'proc-triples", null);
  return cljs.core.PersistentVector.fromArray([cljs.core.empty_QMARK_.call(null, list_map__12359) ? prev_env__12350 : cljs.core.assoc.call(null, prev_env__12350, "\ufdd0'list-map", list_map__12359), cljs.core.concat.call(null, prev_triples__12351, triples__12360), cljs.core.concat.call(null, prev_proc_triples__12352, proc_triples__12361)], true)
};
rdfa.core.visit_element = function visit_element(parent_env, el) {
  var vec__12399__12402 = rdfa.core.process_element.call(null, parent_env, el);
  var env__12403 = cljs.core.nth.call(null, vec__12399__12402, 0, null);
  var data__12404 = cljs.core.nth.call(null, vec__12399__12402, 1, null);
  var triples__12405 = cljs.core.nth.call(null, vec__12399__12402, 2, null);
  var proc_triples__12406 = cljs.core.nth.call(null, vec__12399__12402, 3, null);
  var has_about__12407 = data__12404.call(null, "\ufdd0'about");
  var s__12408 = env__12403.call(null, "\ufdd0'parent-object");
  var changed_s__12409 = cljs.core.not_EQ_.call(null, s__12408, parent_env.call(null, "\ufdd0'parent-object"));
  var new_list_map__12410 = env__12403.call(null, "\ufdd0'list-map");
  var current_list_map__12411 = cljs.core.merge_with.call(null, cljs.core.concat, parent_env.call(null, "\ufdd0'list-map"), cljs.core.truth_(has_about__12407) ? cljs.core.ObjMap.EMPTY : new_list_map__12410);
  var local_env__12412 = cljs.core.assoc.call(null, env__12403, "\ufdd0'list-map", changed_s__12409 ? cljs.core.truth_(has_about__12407) ? new_list_map__12410 : cljs.core.ObjMap.EMPTY : current_list_map__12411);
  var vec__12400__12413 = cljs.core.reduce.call(null, rdfa.core.combine_element_visits, cljs.core.PersistentVector.fromArray([local_env__12412, null, null], true), rdfa.dom.get_child_elements.call(null, el));
  var map__12401__12414 = cljs.core.nth.call(null, vec__12400__12413, 0, null);
  var map__12401__12415 = cljs.core.seq_QMARK_.call(null, map__12401__12414) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12401__12414) : map__12401__12414;
  var combined_list_map__12416 = cljs.core._lookup.call(null, map__12401__12415, "\ufdd0'list-map", null);
  var child_triples__12417 = cljs.core.nth.call(null, vec__12400__12413, 1, null);
  var child_proc_triples__12418 = cljs.core.nth.call(null, vec__12400__12413, 2, null);
  var list_triples__12434 = cljs.core.apply.call(null, cljs.core.concat, function() {
    var iter__2462__auto____12433 = function iter__12419(s__12420) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__12420__12427 = s__12420;
        while(true) {
          if(cljs.core.seq.call(null, s__12420__12427)) {
            var vec__12428__12429 = cljs.core.first.call(null, s__12420__12427);
            var p__12430 = cljs.core.nth.call(null, vec__12428__12429, 0, null);
            var l__12431 = cljs.core.nth.call(null, vec__12428__12429, 1, null);
            if(function() {
              var or__3824__auto____12432 = changed_s__12409;
              if(or__3824__auto____12432) {
                return or__3824__auto____12432
              }else {
                return!cljs.core.contains_QMARK_.call(null, current_list_map__12411, p__12430)
              }
            }()) {
              return cljs.core.cons.call(null, rdfa.core.gen_list_triples.call(null, s__12408, p__12430, l__12431), iter__12419.call(null, cljs.core.rest.call(null, s__12420__12427)))
            }else {
              var G__12436 = cljs.core.rest.call(null, s__12420__12427);
              s__12420__12427 = G__12436;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____12433.call(null, combined_list_map__12416)
  }());
  var result_env__12435 = cljs.core.assoc.call(null, env__12403, "\ufdd0'list-map", changed_s__12409 ? current_list_map__12411 : cljs.core.empty_QMARK_.call(null, list_triples__12434) ? combined_list_map__12416 : "\ufdd0'else" ? current_list_map__12411 : null);
  return cljs.core.ObjMap.fromObject(["\ufdd0'env", "\ufdd0'triples", "\ufdd0'proc-triples"], {"\ufdd0'env":result_env__12435, "\ufdd0'triples":cljs.core.concat.call(null, triples__12405, child_triples__12417, list_triples__12434), "\ufdd0'proc-triples":cljs.core.concat.call(null, proc_triples__12406, child_proc_triples__12418)})
};
rdfa.core.extract_rdfa = function extract_rdfa(profile, root, location) {
  var base_env__12438 = rdfa.core.init_env.call(null, location, rdfa.profiles.get_host_env.call(null, profile, root));
  return rdfa.core.visit_element.call(null, base_env__12438, root)
};
rdfa.core.error_results = function error_results(err_msg, lang) {
  var err_node__12441 = rdfa.core.next_bnode.call(null);
  var descr__12442 = new rdfa.core.Literal(err_msg, lang);
  return cljs.core.ObjMap.fromObject(["\ufdd0'env", "\ufdd0'triples", "\ufdd0'proc-triples"], {"\ufdd0'env":null, "\ufdd0'triples":null, "\ufdd0'proc-triples":cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([err_node__12441, rdfa.core.rdf_COLON_type, rdfa.core.rdfa_COLON_Error], true), cljs.core.PersistentVector.fromArray([err_node__12441, rdfa.core.dc_COLON_description, descr__12442], true)], true)})
};
goog.provide("rdfa.repr");
goog.require("cljs.core");
goog.require("rdfa.core");
rdfa.repr.repr_term = function repr_term(term) {
  var pred__11645__11648 = cljs.core._EQ_;
  var expr__11646__11649 = cljs.core.type.call(null, term);
  if(pred__11645__11648.call(null, rdfa.core.IRI, expr__11646__11649)) {
    return[cljs.core.str("<"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, term)), cljs.core.str(">")].join("")
  }else {
    if(pred__11645__11648.call(null, rdfa.core.Literal, expr__11646__11649)) {
      var map__11650__11651 = term;
      var map__11650__11652 = cljs.core.seq_QMARK_.call(null, map__11650__11651) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11650__11651) : map__11650__11651;
      var value__11653 = cljs.core._lookup.call(null, map__11650__11652, "\ufdd0'value", null);
      var tag__11654 = cljs.core._lookup.call(null, map__11650__11652, "\ufdd0'tag", null);
      var qt__11655 = cljs.core.truth_(cljs.core.re_find.call(null, /\n|\"/, value__11653)) ? '"""' : '"';
      return[cljs.core.str(qt__11655), cljs.core.str(value__11653), cljs.core.str(qt__11655), cljs.core.str(cljs.core._EQ_.call(null, cljs.core.type.call(null, tag__11654), rdfa.core.IRI) ? [cljs.core.str("^^"), cljs.core.str(repr_term.call(null, tag__11654))].join("") : cljs.core.truth_(cljs.core.not_empty.call(null, tag__11654)) ? [cljs.core.str("@"), cljs.core.str(tag__11654)].join("") : null)].join("")
    }else {
      if(pred__11645__11648.call(null, rdfa.core.BNode, expr__11646__11649)) {
        return[cljs.core.str("_:"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, term))].join("")
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__11646__11649)].join(""));
      }
    }
  }
};
rdfa.repr.repr_triple = function repr_triple(p__11656) {
  var vec__11662__11663 = p__11656;
  var s__11664 = cljs.core.nth.call(null, vec__11662__11663, 0, null);
  var p__11665 = cljs.core.nth.call(null, vec__11662__11663, 1, null);
  var o__11666 = cljs.core.nth.call(null, vec__11662__11663, 2, null);
  return[cljs.core.str(rdfa.repr.repr_term.call(null, s__11664)), cljs.core.str(" "), cljs.core.str(rdfa.repr.repr_term.call(null, p__11665)), cljs.core.str(" "), cljs.core.str(rdfa.repr.repr_term.call(null, o__11666)), cljs.core.str(" .")].join("")
};
rdfa.repr.print_triples = function print_triples(triples) {
  var triples__11669 = triples;
  var representation__11670 = "";
  while(true) {
    if(cljs.core.seq.call(null, triples__11669)) {
      var G__11671 = cljs.core.rest.call(null, triples__11669);
      var G__11672 = [cljs.core.str(representation__11670), cljs.core.str(rdfa.repr.repr_triple.call(null, cljs.core.first.call(null, triples__11669)))].join("");
      triples__11669 = G__11671;
      representation__11670 = G__11672;
      continue
    }else {
      return representation__11670
    }
    break
  }
};
goog.provide("knowledge.rdfa");
goog.require("cljs.core");
goog.require("rdfa.stddom");
goog.require("rdfa.dom");
goog.require("rdfa.repr");
goog.require("rdfa.core");
goog.require("clojure.browser.dom");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("cljs.core");
knowledge.rdfa.export_graph = function export_graph(graph) {
  var connection__88124 = clojure.browser.net.xhr_connection.call(null);
  var representation__88125 = rdfa.repr.print_triples.call(null, graph);
  var headers__88126 = cljs.core.js_obj.call(null, "Content-Type", "text/turtle;charset=utf-8");
  return clojure.browser.net.transmit.call(null, connection__88124, [cljs.core.str(knowledge.rdfa.base), cljs.core.str("/resource")].join(""), "POST", representation__88125, headers__88126)
};
knowledge.rdfa.get_triples = function get_triples() {
  var document_element__88129 = document.documentElement;
  var location__88130 = document.URL;
  return(new cljs.core.Keyword("\ufdd0'triples")).call(null, rdfa.core.extract_rdfa.call(null, "\ufdd0'html", document_element__88129, location__88130))
};
knowledge.rdfa.get_editables = function get_editables() {
  return knowledge.rdfa.rdfa.getElementsByType("http://rdfs.org/sioc/types#BlogPost")
};
knowledge.rdfa.attach_handler = function attach_handler(id, handler) {
  return clojure.browser.event.listen.call(null, clojure.browser.dom.get_element.call(null, id), goog.events.EventType.CLICK, handler)
};
knowledge.rdfa.attach_editor = function attach_editor() {
  var elements__88132 = knowledge.rdfa.get_editables.call(null);
  return Aloha.jQuery.call(null, elements__88132).aloha()
};
knowledge.rdfa.detach_editor = function detach_editor() {
  var elements__88134 = knowledge.rdfa.get_editables.call(null);
  return Aloha.jQuery.call(null, elements__88134).mahalo()
};
knowledge.rdfa.save__GT_edit = function save__GT_edit(event) {
  var target__88136 = event.target;
  clojure.browser.dom.set_text.call(null, target__88136, "Edit");
  knowledge.rdfa.export_graph.call(null, knowledge.rdfa.get_triples.call(null));
  knowledge.rdfa.attach_handler.call(null, "edit-btn", knowledge.rdfa.edit__GT_save);
  return knowledge.rdfa.detach_editor.call(null)
};
knowledge.rdfa.edit__GT_save = function edit__GT_save(event) {
  var target__88138 = event.target;
  clojure.browser.dom.set_text.call(null, target__88138, "Save");
  knowledge.rdfa.attach_handler.call(null, "edit-btn", knowledge.rdfa.save__GT_edit);
  return knowledge.rdfa.attach_editor.call(null)
};
knowledge.rdfa.add_test_content = function add_test_content(event) {
  var response__88142 = event.target;
  var content__88143 = response__88142.getResponseText();
  var parent__88144 = clojure.browser.dom.get_element.call(null, "test-content");
  return parent__88144.innerHTML = content__88143
};
knowledge.rdfa.load_test_content = function load_test_content(event) {
  var connection__88147 = clojure.browser.net.xhr_connection.call(null);
  var iri__88148 = clojure.browser.dom.get_element.call(null, "iri-field").value;
  clojure.browser.event.listen.call(null, connection__88147, goog.net.EventType.COMPLETE, knowledge.rdfa.add_test_content);
  return clojure.browser.net.transmit.call(null, connection__88147, [cljs.core.str(knowledge.rdfa.base), cljs.core.str("/resource/"), cljs.core.str(encodeURIComponent(iri__88148))].join(""), "GET")
};
knowledge.rdfa.attach_content_change_handler = function attach_content_change_handler() {
  return Aloha.bind.call(null, "aloha-smart-content-changed", function(event, info) {
    return clojure.browser.dom.log.call(null, [cljs.core.str("smart edit detected "), cljs.core.str(info.editable.obj)].join(""))
  })
};
knowledge.rdfa.init = function init() {
  knowledge.rdfa.rdfa = RDFaDOM.init();
  knowledge.rdfa.base = document.location.origin;
  knowledge.rdfa.attach_handler.call(null, "edit-btn", knowledge.rdfa.edit__GT_save);
  knowledge.rdfa.attach_handler.call(null, "load-btn", knowledge.rdfa.load_test_content);
  return knowledge.rdfa.attach_content_change_handler.call(null)
};
document.addEventListener("DOMContentLoaded", knowledge.rdfa.init);
